{"version":3,"sources":["d3.compose-all.min.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/layout.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/src/mixins/hover.js","../C:/dev/d3.compose/src/mixins/transition.js","../C:/dev/d3.compose/src/mixins/standard-layer.js","../C:/dev/d3.compose/src/components/Text.js","../C:/dev/d3.compose/src/components/Title.js","../C:/dev/d3.compose/src/components/AxisTitle.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js","../C:/dev/d3.compose/src/mixins/series.js","../C:/dev/d3.compose/src/mixins/xy.js","../C:/dev/d3.compose/src/mixins/xy-values.js","../C:/dev/d3.compose/src/mixins/xy-inverted.js","../C:/dev/d3.compose/src/mixins/labels.js","../C:/dev/d3.compose/src/mixins.js","../C:/dev/d3.compose/src/charts/Lines.js","../C:/dev/d3.compose/src/charts/Bars.js","../C:/dev/d3.compose/src/charts/StackedBars.js","../C:/dev/d3.compose/src/charts/HorizontalBars.js","../C:/dev/d3.compose/src/charts/HorizontalStackedBars.js","../C:/dev/d3.compose/src/charts/Labels.js","../C:/dev/d3.compose/src/charts/HoverLabels.js","../C:/dev/d3.compose/src/components/Gridlines.js","../C:/dev/d3.compose/src/components/Axis.js","../C:/dev/d3.compose/src/components/Legend.js","../C:/dev/d3.compose/src/components/InsetLegend.js","../C:/dev/d3.compose/index-all.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","inherits","Child","Parent","create","constructor","enumerable","writeable","configurable","setPrototypeOf","__proto__","valueOrDefault","default_value","property","options","console","warn","id","unique_index","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","__properties","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","initializes","transforms","mixed","forEach","mix","initialize","args","init","transform","trans","bind","stack","direction","origin","min_height","min_width","elements","next_position","element_dimensions","spacing_width","spacing_height","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","isArray","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","Base","base","_layers","_attached","_events","extractLayout","prepareComponent","component","row_index","col_index","getId","setPosition","position","layered_index","extractData","_charts","_components","items","layout","charts","components","found","row","row_components","row_layout","_layered","chart_ids","chart_index","unshift","calculateLayout","demux","overall_layout","skip_layout","getLayout","applyLayout","chart_position","setLayout","part","index","parts","previousPart","layered","findById","getPoints","getPoint","sort","meta","getClosestPoints","points","tolerance","getDistance","Math","sqrt","pow","setDistance","point","distance","closePoints","sortPoints","by_distance","updateActive","active","closest","container","active_keys","closest_keys","trigger","createLayer","name","layer","events","event","method","split","str","charAt","toUpperCase","dataBind","onDataBind","insert","onInsert","textOptions","default_options","text","components_Title__defaultMargins","default_margin","margins_by_position","title","components_AxisTitle__defaultMargins","axisTitle","Int8Array","utils","helpers","style","Base__Chart","draw","attachment","unlayer","attach","on","once","off","isProperty","unset","proto_props","static_props","hasOwnProperty","src_Chart__Chart","z_index","layer_type","Chart","src_Chart","Component","prepareLayout","actual_dimensions","Overlay","hidden","-webkit-transform","-ms-transform","display","getAbsolutePosition","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","tagName","append","classed","attachHoverListeners","rawData","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","chart_options","_attachItems","component_options","delay","duration","ease","config","_prepareConfig","_setDimensions","redraw","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","getBounds","scroll_y","scrollY","scrollTop","getBoundingClientRect","was_inside","is_inside","detach","remove","_positionComponents","_positionByZIndex","remove_ids","remove_id","changed_position","Item","layer_options","overlay","selectAll","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","appendChild","Series","seriesKey","seriesValues","seriesIndex","seriesClass","seriesData","itemStyle","seriesCount","seriesLayer","exit","XY","setScales","normalizeData","xScale","setXScaleRange","getDefaultXScale","yScale","setYScaleRange","getDefaultYScale","xKey","yKey","xValue","yValue","x0","y0","x_scale","y_scale","XYValues","adjacentWidth","layeredWidth","itemWidth","XYInverted","mixins_labels__Labels","attachLabels","labels","LabelsClass","_labels","proxyLabelMethods","LabelsXY","Hover","onMouseEnter","onMouseMove","onMouseLeave","mouseEnterPoint","mouseLeavePoint","HoverPoints","update","hoverTolerance","Transition","setupTransition","StandardLayer","standardLayer","standardSeriesLayer","onEnter","onUpdate","onMerge","onExit","Labels","charts_Lines__Mixed","Lines","lines","interpolate","createLine","lineKey","line","svg","lineData","each","onMergeTransition","charts_Bars__Mixed","Bars","offset_axis","getOffsetAxis","barHeight","abs","barOffset","barWidth","barX","barY","bar0","barClass","axis_thickness","onExitTransition","bars","StackedBars","grouped","x_key","y_key","__original_y","pos","neg","__previous","stackedBars","HorizontalBars","horizontalBars","HorizontalStackedBars","horizontalStackedBars","charts_Labels__Mixed","charts_Labels__Labels","format","y_value","anchor","alignment","labelText","label","labelClass","insertLabels","mergeLabels","layoutLabels","transitionLabels","getOptions","label_position","label_options","_prepareLabel","_calculateLayout","_handleCollisions","_setLayout","bg","text_bounds","text_y_adjustment","checkForOverlap","labelA","labelB","getEdges","contained_LR","contained_TB","overlap_LR","overlap_TB","groupLabels","group","updateGroupPositions","addLabelToGroup","originalY","reset","sortY","byY","reverse","overlap","prev","compareSeries","compareLabel","charts_HoverLabels__Mixed","HoverLabels","onMouseEnterPoint","onMouseLeavePoint","findLabelForPoint","hoverLabels","components_Text__Mixed","Text","textAlign","verticalAlign","transformation","middle","translation","Title","rotate_by_position","components_Gridlines__Mixed","Gridlines","orientation","ticks","tickValues","drawLine","x1","x2","y1","y2","tick_values","ticks_args","gridlines","components_Axis__Mixed","Axis","axis","_layout_axis","axis_base","_layout_base","attachGridlines","orient","tickSize","innerTickSize","outerTickSize","tickPadding","tickFormat","_setupAxis","onUpdateTransition","label_overhang","_getLabelOverhang","gridlinesOptions","createGridlines","gridline_options","gridlines_options","_gridlines","array_extensions","overhangs","AxisTitle","default_legend_margins","components_Legend__Mixed","Legend","legend_base","swatchDimensions","stackDirection","direction_by_position","combined_data","chart_id","find_chart","exclude_from_legend","chart_data","legend_data","getLegendData","itemKey","itemText","swatchClass","createSwatch","swatches","groups","_itemDetails","swatch","sizes","size","shift","class","legend","default","swatch_dimensions","registerSwatch","types","InsetLegend","relative_to","relative_to_x","relative_to_y","insetLegend","compose","VERSION","index_all"],"mappings":"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","file":"d3.compose-all.min.js","sourcesContent":[null,"// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nexport var slice = Array.prototype.slice;\r\nexport var toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function inherits(Child, Parent) {\r\n  Child.prototype = Object.create(Parent.prototype, {\r\n    constructor: {\r\n      value: Child,\r\n      enumerable: false,\r\n      writeable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n\r\n  if (Object.setPrototypeOf) {\r\n    Object.setPrototypeOf(Child, Parent);\r\n  }\r\n  else {\r\n    Child.__proto__ = Parent; //eslint-disable-line no-proto\r\n\r\n    // __proto__ isn't supported in IE,\r\n    // use one-time copy of static properties to approximate\r\n    defaults(Child, Parent);\r\n  }\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  slice: slice,\r\n  toString: toString,\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  inherits: inherits,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\r\n  isFunction,\r\n  isUndefined,\r\n  valueOrDefault\r\n} from '../utils';\r\nvar unique_index = 0;\r\n\r\n/**\r\n  Helper for creating properties for charts/components\r\n\r\n  @example\r\n  ```javascript\r\n  var Custom = d3.chart('Chart').extend('Custom', {\r\n    // Create property that's stored internally as 'simple'\r\n    simple: property()\r\n  });\r\n  var custom; // = new Custom(...);\r\n\r\n  // set\r\n  custom.simple('Howdy');\r\n\r\n  // get\r\n  console.log(custom.simple()); // -> 'Howdy'\r\n\r\n  // Advanced\r\n  // --------\r\n  // Default values:\r\n  Custom.prototype.message = property({\r\n    default_value: 'Howdy!'\r\n  });\r\n\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n  custom.message('Goodbye');\r\n  console.log(custom.message()); // -> 'Goodbye'\r\n\r\n  // Set to undefined to reset to default value\r\n  custom.message(undefined);\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n\r\n  // Computed default value:\r\n  Custom.property.computed = property({\r\n    default_value: function() {\r\n      // \"this\" = Custom instance\r\n      return this.message();\r\n    }\r\n  });\r\n\r\n  // Function default value:\r\n  // For function default_values, wrap in function to differentiate from computed\r\n  Custom.property.fn = property({\r\n    default_value: function() {\r\n      return function defaultFn() {};\r\n    }\r\n    // The following would be incorrectly evaluated\r\n    // default_value: function defaultFn() {}\r\n  })\r\n\r\n  // Custom getter:\r\n  Custom.prototype.exclaimed = property({\r\n    get: function(value) {\r\n      // Value is the underlying set value\r\n      return value + '!';\r\n    }\r\n  });\r\n\r\n  custom.exclaimed('Howdy');\r\n  console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n  // Custom setter:\r\n  Custom.prototype.feeling = property({\r\n    set: function(value, previous) {\r\n      if (value == 'Hate') {\r\n        // To override value, return Object with override specified\r\n        return {\r\n          override: 'Love',\r\n\r\n          // To do something after override, use after callback\r\n          after: function() {\r\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    custom.feeling('Hate'); // -> 'After: Love'\r\n    console.log(custom.feeling()); // -> 'Love'\r\n  });\r\n  ```\r\n  @method property\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`). If default value is a function, wrap in another function as default_value is evaluated by default.\r\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n  @return {Function} `()`: get, `(value)`: set\r\n*/\r\nexport default function property(options) {\r\n  // DEPRECATED: name as first argument\r\n  if (arguments.length == 2) {\r\n    if (typeof console != 'undefined' && console.warn)\r\n      console.warn('DEPRECATED - name argument for property is no longer supported will be removed in the next version of d3.compose');\r\n    options = arguments[1];\r\n  }\r\n\r\n  options = options || {};\r\n  var id = 'property_' + unique_index++;\r\n\r\n  var property = function(value) {//eslint-disable-line no-shadow\r\n    var properties = this.__properties = this.__properties || {};\r\n    var context = valueOrDefault(property.context, this);\r\n\r\n    if (arguments.length)\r\n      return set.call(this);\r\n    else\r\n      return get.call(this);\r\n\r\n    function get() {\r\n      value = properties[id];\r\n\r\n      if (isUndefined(value)) {\r\n        // Use default value and unwrap if it's a function\r\n        value = property.default_value;\r\n        if (isFunction(value))\r\n          value = value.call(context);\r\n      }\r\n\r\n      return isFunction(options.get) ? options.get.call(context, value) : value;\r\n    }\r\n\r\n    function set() {\r\n      // Validate\r\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(context, value))\r\n        throw new Error('Invalid value for property: ' + JSON.stringify(value));\r\n\r\n      var previous = properties[id];\r\n      properties[id] = value;\r\n\r\n      if (isFunction(options.set) && !isUndefined(value)) {\r\n        var response = options.set.call(context, value, previous);\r\n\r\n        if (response && 'override' in response)\r\n          properties[id] = response.override;\r\n        if (response && isFunction(response.after))\r\n          response.after.call(context, properties[id]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // For checking if function is a property\r\n  property.is_property = true;\r\n  property.id = id;\r\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n  property.default_value = options.default_value;\r\n  property.context = options.context;\r\n  property.options = options;\r\n\r\n  return property;\r\n}\r\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector.\r\n  Checks dimensions from css, attributes, and bounding box.\r\n\r\n  @method dimensions\r\n  @for helpers\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from '../helpers';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Calculate domain for data\r\n  var scale = createScale({\r\n    type: 'log',\r\n    data: [{y: 1}, {y: 100}, {y: 2000}, {y: 5000}],\r\n    key: 'y'\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05] // -> rangeRoundBands([0, 100], 0.1, 0.05)\r\n  });\r\n\r\n  // Use ordinal + adjacent for bar charts\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    adjacent: true,\r\n    domain: ['a', 'b', 'c'],\r\n    series: 2 // Series count is required for adjacent if data isn't given\r\n  })\r\n  ```\r\n  @method createScale\r\n  @for helpers\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import {\r\n  objectEach,\r\n  slice\r\n} from '../utils';\r\n\r\n/**\r\n  Combine mixins with Parent super class for extension\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  var Custom = mixin(Chart, a, b, c).extend({\r\n    initialize: function(options) {\r\n      this._super.initialize.call(this, options);\r\n      // d\r\n    },\r\n    transform: function(data) {\r\n      data = this._super.transform.call(this, data);\r\n      // d\r\n    }\r\n  });\r\n\r\n  // initialize: Chart, b, d\r\n  // transform: Chart, a, d\r\n  ```\r\n  @method mixin\r\n  @for helpers\r\n  @param {Function} Parent\r\n  @param {...Object} ...mixins\r\n  @return {Function}\r\n*/\r\nexport default function mixin(Parent/*, ...mixins*/) {\r\n  var mixins = slice.call(arguments, 1);\r\n  var initializes = [];\r\n  var transforms = [];\r\n  var mixed = {};\r\n\r\n  mixins.forEach(function(mix) {\r\n    objectEach(mix, function(value, key) {\r\n      if (key == 'initialize')\r\n        initializes.push(value);\r\n      else if (key == 'transform')\r\n        transforms.push(value);\r\n      else\r\n        mixed[key] = value;\r\n    });\r\n  });\r\n\r\n  if (initializes.length) {\r\n    mixed.initialize = function initialize() {\r\n      var args = slice.call(arguments);\r\n      Parent.prototype.initialize.apply(this, args);\r\n      initializes.forEach(function(init) {\r\n        init.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n\r\n  if (transforms.length) {\r\n    mixed.transform = function transform(data) {\r\n      data = Parent.prototype.transform.call(this, data);\r\n      return transforms.reduce(function(memo, trans) {\r\n        return trans.call(this, memo);\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return Parent.extend(mixed);\r\n}\r\n","import { extend } from '../utils';\r\nimport { translate } from '../helpers';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack())\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack({\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n  @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n  @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n  @return {Function}\r\n*/\r\nexport default function stack(options) {\r\n  options = extend({\r\n    direction: 'vertical',\r\n    origin: 'top',\r\n    padding: 0,\r\n    min_height: 0,\r\n    min_width: 0\r\n  }, options);\r\n\r\n  // Ensure valid origin based on direction\r\n  if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n    options.origin = 'left';\r\n  else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n    options.origin = 'top';\r\n\r\n  function padding(i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  return function(elements) {\r\n    if (elements && elements.attr) {\r\n      var previous = 0;\r\n\r\n      elements.attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n        var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n        var x = 0;\r\n        var y = 0;\r\n        var next_position;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          next_position = previous + spacing_width + padding(i);\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(i);\r\n          else\r\n            x = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n        else {\r\n          next_position = previous + spacing_height + padding(i);\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(i);\r\n          else\r\n            y = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  defaults,\r\n  extend,\r\n  first,\r\n  isNumber,\r\n  isObject,\r\n  objectEach\r\n} from './utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './helpers/property';\r\nimport dimensions from './helpers/dimensions';\r\nimport createScale from './helpers/create-scale';\r\nimport mixin from './helpers/mixin';\r\nimport stack from './helpers/stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Get formatted margins for varying input\r\n\r\n  @method getMargins\r\n  @example\r\n  ```js\r\n  getMargins(4);\r\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n  getMargins({top: 20}, {top: 8, bottom: 8});\r\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n  ```\r\n  @param {Number|Object} margins\r\n  @param {Object} default_margins\r\n  @return {Object}\r\n*/\r\nexport function getMargins(margins, default_margins) {\r\n  if (isNumber(margins))\r\n    return {top: margins, right: margins, bottom: margins, left: margins};\r\n  else\r\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  getMargins: getMargins,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  extend,\r\n  inherits,\r\n  isString,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\nvar Chart = d3.chart();\r\n\r\n// TEMP Clear namespace from mixins\r\n/**\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nfunction Base(selection, options) {\r\n  // d3.chart() constructor without transform and initialize cascade\r\n  this.base = selection;\r\n  this._layers = {};\r\n  this._attached = {};\r\n  this._events = {};\r\n\r\n  // Bind all di-functions to this chart\r\n  bindAllDi(this);\r\n\r\n  // Set options (and properties with set_from_options)\r\n  if (options)\r\n    this.options(options);\r\n\r\n  // Initialize Chart (relies on explicitly calling super in initialize)\r\n  this.initialize(options);\r\n}\r\n\r\ninherits(Base, Chart);\r\n\r\nextend(Base.prototype, {\r\n  initialize: function() {},\r\n  transform: function(data) {\r\n    return data;\r\n  },\r\n  demux: function(name, data) { return data; },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    // Transform data (relies on explicitly calling super in transform)\r\n    data = this.transform(data);\r\n\r\n    // Store fully-transformed data for reference\r\n    this.data(data);\r\n\r\n    this.trigger('before:draw', data);\r\n\r\n    objectEach(this._layers, function(layer) {\r\n      layer.draw(data);\r\n    });\r\n    objectEach(this._attached, function(attachment, name) {\r\n      attachment.draw(this.demux(name, data));\r\n    }, this);\r\n\r\n    this.trigger('draw', data);\r\n  },\r\n\r\n  // Explicitly load d3.chart prototype\r\n  layer: Chart.prototype.layer,\r\n  unlayer: Chart.prototype.unlayer,\r\n  attach: Chart.prototype.attach,\r\n  on: Chart.prototype.on,\r\n  once: Chart.prototype.once,\r\n  off: Chart.prototype.off,\r\n  trigger: Chart.prototype.trigger,\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property(),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property(),\r\n      b: property({\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property({\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  }\r\n});\r\n\r\nBase.extend = function(proto_props, static_props) {\r\n  // name may be first parameter for d3.chart usage\r\n  var name;\r\n  if (isString(proto_props)) {\r\n    name = proto_props;\r\n    proto_props = static_props;\r\n    static_props = arguments[2];\r\n  }\r\n\r\n  var Parent = this;\r\n  var Child;\r\n\r\n  if (proto_props && proto_props.hasOwnProperty('constructor')) {\r\n    Child = proto_props.constructor;\r\n\r\n    // inherits sets constructor, remove from proto_props\r\n    proto_props = extend({}, proto_props);\r\n    delete proto_props.constructor;\r\n  }\r\n  else {\r\n    Child = function() { return Parent.apply(this, arguments); };\r\n  }\r\n\r\n  inherits(Child, Parent);\r\n  if (static_props)\r\n    extend(Child, static_props);\r\n  if (proto_props)\r\n    extend(Child.prototype, proto_props);\r\n\r\n  // If name is given, register with d3.chart\r\n  if (name)\r\n    Chart[name] = Child;\r\n\r\n  return Child;\r\n};\r\n\r\n// Export to d3.chart\r\nChart.Base = Base;\r\nexport default Base;\r\n","import {\r\n  contains,\r\n  defaults,\r\n  isFunction\r\n} from './utils';\r\n\r\n/*\r\n  Extract layout from the given options\r\n\r\n  @param {Array} options\r\n  @return {Object} {data, items, layout}\r\n*/\r\nexport function extractLayout(options) {\r\n  if (!options)\r\n    return;\r\n\r\n  var data = {\r\n    _charts: {},\r\n    _components: {}\r\n  };\r\n  var items = {};\r\n  var layout = [];\r\n  var charts = [];\r\n  var components = [];\r\n\r\n  // TEMP Idenfify charts from layered,\r\n  // eventually no distinction between charts and components\r\n  var found = {\r\n    row: false,\r\n    charts: false\r\n  };\r\n\r\n  // Components are added from inside-out\r\n  // so for position: top, position: left, use unshift\r\n  options.forEach(function(row, row_index) {\r\n    var row_components = [];\r\n\r\n    if (!Array.isArray(row))\r\n      row = [row];\r\n    if (row.length > 1)\r\n      found.row = true;\r\n\r\n    var row_layout = row.map(function(item, col_index) {\r\n      if (!item)\r\n        return;\r\n\r\n      if (item._layered) {\r\n        // Charts\r\n        found.charts = found.row = true;\r\n        var chart_ids = [];\r\n\r\n        item.items.forEach(function(chart, chart_index) {\r\n          if (!chart)\r\n            return;\r\n\r\n          chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\r\n\r\n          chart_ids.push(chart.id);\r\n          charts.push(chart);\r\n          items[chart.id] = chart;\r\n        });\r\n\r\n        return chart_ids;\r\n      }\r\n\r\n      var component = prepareComponent(item, row_index, col_index);\r\n      items[component.id] = component;\r\n\r\n      if (row.length > 1) {\r\n        if (!found.charts) {\r\n          // Left\r\n          setPosition(component, 'left');\r\n          row_components.unshift(component);\r\n        }\r\n        else {\r\n          // Right\r\n          setPosition(component, 'right');\r\n          row_components.push(component);\r\n        }\r\n      }\r\n      else {\r\n        if (!found.row) {\r\n          // Top\r\n          setPosition(component, 'top');\r\n          components.unshift(component);\r\n        }\r\n        else {\r\n          // Bottom\r\n          setPosition(component, 'bottom');\r\n          components.push(component);\r\n        }\r\n      }\r\n\r\n      return component.id;\r\n    });\r\n\r\n    if (row_components.length)\r\n      components = components.concat(row_components);\r\n\r\n    layout.push(row_layout);\r\n  });\r\n\r\n  charts.forEach(extractData('_charts'));\r\n  components.forEach(extractData('_components'));\r\n\r\n  return {\r\n    data: data,\r\n    items: items,\r\n    layout: layout,\r\n\r\n    charts: charts,\r\n    components: components\r\n  };\r\n\r\n  function prepareComponent(component, row_index, col_index) {\r\n    return defaults({}, component, {id: getId(row_index, col_index)});\r\n  }\r\n  function setPosition(component, position) {\r\n    if (component && isFunction(component.position))\r\n      component.position(position);\r\n    else\r\n      component.position = position;\r\n  }\r\n  function getId(row_index, col_index, layered_index) {\r\n    var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\r\n    if (layered_index != null)\r\n      id += '-' + (layered_index + 1);\r\n\r\n    return id;\r\n  }\r\n\r\n  function extractData(type) {\r\n    return function(item) {\r\n      if (item.data && !isFunction(item.data)) {\r\n        data[type][item.id] = item.data;\r\n        data[item.id] = item.data;\r\n        delete item.data;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\n  Calculate component and chart coordinates for given layout\r\n*/\r\nexport function calculateLayout(components, data, demux) {\r\n  var overall_layout = {top: [], right: [], bottom: [], left: []};\r\n  components.forEach(function(component) {\r\n    if (component.skip_layout || !component.getLayout)\r\n      return;\r\n\r\n    var layout = component.getLayout(demux(component.id, data));\r\n    var position = layout && layout.position;\r\n\r\n    if (!contains(['top', 'right', 'bottom', 'left'], position))\r\n      return;\r\n\r\n    overall_layout[position].push({\r\n      offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\r\n      component: component\r\n    });\r\n  });\r\n\r\n  return overall_layout;\r\n}\r\n\r\n/*\r\n  Apply calculated layout to charts and components\r\n*/\r\nexport function applyLayout(layout, chart_position, width, height) {\r\n  layout.top.reduce(function(previous, part) {\r\n    var y = previous - part.offset;\r\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n    return y;\r\n  }, chart_position.top);\r\n\r\n  layout.right.reduce(function(previous, part, index, parts) {\r\n    var previousPart = parts[index - 1] || {offset: 0};\r\n    var x = previous + previousPart.offset;\r\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n    return x;\r\n  }, width - chart_position.right);\r\n\r\n  layout.bottom.reduce(function(previous, part, index, parts) {\r\n    var previousPart = parts[index - 1] || {offset: 0};\r\n    var y = previous + previousPart.offset;\r\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n    return y;\r\n  }, height - chart_position.bottom);\r\n\r\n  layout.left.reduce(function(previous, part) {\r\n    var x = previous - part.offset;\r\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n    return x;\r\n  }, chart_position.left);\r\n\r\n  function setLayout(component, x, y, options) {\r\n    if (component && isFunction(component.setLayout))\r\n      component.setLayout(x, y, options);\r\n  }\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  find,\r\n  defaults,\r\n  extend,\r\n  objectEach,\r\n  difference,\r\n  pluck\r\n} from './utils';\r\nimport {\r\n  getMargins,\r\n  property,\r\n  style,\r\n  translate\r\n} from './helpers';\r\nimport {\r\n  extractLayout,\r\n  calculateLayout,\r\n  applyLayout\r\n} from './layout';\r\nimport Base from './Base';\r\nimport Overlay from './Overlay';\r\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n/**\r\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n  @example\r\n  ```html\r\n  <div id=\"#chart\"></div>\r\n  ```\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Process data...\r\n\r\n    // Create shared scales\r\n    var scales = {\r\n      x: {data: data.input, key: 'x', adjacent: true},\r\n      y: {data: data.input, key: 'y'},\r\n      y2: {data: data.output, key: 'y'}\r\n    };\r\n\r\n    // Setup charts and components\r\n    var charts = [\r\n      d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\r\n      d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\r\n    ];\r\n\r\n    var title = d3c.title('d3.compose');\r\n    var xAxis = d3c.axis('xAxis', {scale: scales.x});\r\n    var yAxis = d3c.axis('yAxis', {scale: scales.y});\r\n    var y2Axis = d3c.axis('y2Axis', {scale: scales.y2});\r\n\r\n    // Layout charts and components\r\n    return [\r\n      title,\r\n      [yAxis, d3c.layered(charts), y2Axis],\r\n      xAxis\r\n    ];;\r\n  });\r\n\r\n  chart.draw({input: [...], output: [...]});\r\n  ```\r\n  @class Compose\r\n  @extends Base\r\n*/\r\nvar Compose = Base.extend({\r\n  initialize: function(options) {\r\n    Base.prototype.initialize.call(this, options);\r\n\r\n    // Responsive svg based on the following approach (embedded + padding hack)\r\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n    // (not enabled if selection is svg)\r\n    if (this.base.node().tagName != 'svg') {\r\n      this.container = this.base.append('div')\r\n        .attr('class', 'chart-compose-container');\r\n\r\n      this.base = this.container.append('svg')\r\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n        .attr('version', '1.1')\r\n        .attr('class', 'chart-compose');\r\n    }\r\n    else {\r\n      this.base.classed('chart-compose', true);\r\n    }\r\n\r\n    this.attachHoverListeners();\r\n  },\r\n\r\n  transform: function(data) {\r\n    // Save raw data for redraw\r\n    this.rawData(data);\r\n    return Base.prototype.transform.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Get/set the options `object/function` for the chart that takes `data` and\r\n    returns `[...layout]` for composing child charts and components.\r\n\r\n    @example\r\n    ```js\r\n    // get\r\n    chart.options();\r\n\r\n    // set (static)\r\n    chart.options([\r\n      // ...\r\n    ]);\r\n\r\n    // set (dynamic, takes data and returns options)\r\n    chart.options(function(data) {\r\n      // process data...\r\n\r\n      return [\r\n        // ...\r\n      ];\r\n    });\r\n\r\n    // Set directly from d3.chart creation\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n    ```\r\n    @property options\r\n    @type Function|Object\r\n  */\r\n  options: property({\r\n    default_value: function() { return function() {}; },\r\n    set: function(options) {\r\n      // If options is plain object,\r\n      // return from generic options function\r\n      if (!isFunction(options)) {\r\n        return {\r\n          override: function() {\r\n            return options;\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Store raw data for container before it has been transformed\r\n  rawData: property(),\r\n\r\n  /**\r\n    Margins between edge of container and components/chart\r\n\r\n    @example\r\n    ```js\r\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n    ```\r\n    @property margins\r\n    @type Object {top, right, bottom, left}\r\n    @default {top: 10, right: 10, bottom: 10, left: 10}\r\n  */\r\n  margins: property({\r\n    default_value: default_compose_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_compose_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  // Chart position\r\n  chartPosition: property({\r\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n    set: function(values) {\r\n      return {\r\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    },\r\n    get: function(values) {\r\n      values.width = this._width() - values.right - values.left;\r\n      values.height = this._height() - values.bottom - values.top;\r\n\r\n      return values;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set overall width of chart\r\n\r\n    @property width\r\n    @type Number\r\n  */\r\n  width: property({\r\n    default_value: null\r\n  }),\r\n\r\n  /**\r\n    Get/set overall height of chart\r\n\r\n    @property height\r\n    @type Number\r\n  */\r\n  height: property({\r\n    default_value: null\r\n  }),\r\n\r\n  _width: function() {\r\n    var width = this.width();\r\n    return width != null ? width : Base.prototype.width.call(this);\r\n  },\r\n  _height: function() {\r\n    var height = this.height();\r\n    return height != null ? height : Base.prototype.height.call(this);\r\n  },\r\n\r\n  /**\r\n    Enable responsive container + viewBox so that chart scales to fill width\r\n    (only works if selection is not an svg)\r\n\r\n    @property responsive\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  responsive: property({\r\n    default_value: true\r\n  }),\r\n\r\n  // Set svg viewBox attribute\r\n  viewBox: property({\r\n    default_value: function() {\r\n      if (this.responsive() && this.width() && this.height())\r\n        return '0 0 ' + this.width() + ' ' + this.height();\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set svg preserveAspectRatio attribute\r\n  preserveAspectRatio: property({\r\n    default_value: function() {\r\n      if (this.responsive())\r\n        return 'xMidYMid meet';\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set container style\r\n  containerStyle: property({\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        var aspect_ratio = 1;\r\n        if (this.width() && this.height())\r\n          aspect_ratio = this.height() / this.width();\r\n\r\n        return style({\r\n          width: '100%',\r\n          height: 0,\r\n          'padding-top': (aspect_ratio * 100) + '%',\r\n          position: 'relative'\r\n        });\r\n      }\r\n      else {\r\n        return style({position: 'relative'});\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Set base style\r\n  baseStyle: property({\r\n    default_value: function() {\r\n      if (this.responsive() && this.container) {\r\n        return style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0\r\n        });\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Set charts from options or get chart instances.\r\n    Each chart should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n    @example\r\n    ```js\r\n    chart.charts([\r\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n    ]);\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property({\r\n    set: function(chart_options, charts) {\r\n      // Store actual charts rather than options\r\n      return {\r\n        override: this._attachItems(chart_options, charts, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Set components from options or get components instances.\r\n    Each component should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n    @example\r\n    ```js\r\n    chart.components([\r\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n      {id: 'title', type: 'Title'} // options to pass to Title component\r\n    ])\r\n    ```\r\n    @property components\r\n    @type Array\r\n  */\r\n  components: property({\r\n    set: function(component_options, components) {\r\n      // Store actual components rather than options\r\n      return {\r\n        override: this._attachItems(component_options, components, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Delay start of transition by specified milliseconds.\r\n    (applied to all charts and components as default)\r\n\r\n    @property delay\r\n    @type Number|Function\r\n    @default d3 default: 0\r\n  */\r\n  delay: property(),\r\n\r\n  /**\r\n    Transition duration in milliseconds.\r\n    (applied to all charts and components as default)\r\n\r\n    @property duration\r\n    @type Number|Function\r\n    @default d3 default: 250ms\r\n  */\r\n  duration: property(),\r\n\r\n  /**\r\n    Transition ease function.\r\n    (applied to all charts and components as default)\r\n\r\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n    - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n    @property ease\r\n    @type String|Function\r\n    @default d3 default: 'cubic-in-out'\r\n  */\r\n  ease: property(),\r\n\r\n  /**\r\n    Draw chart with given data\r\n\r\n    @example\r\n    ```js\r\n    var chart = d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n\r\n    chart.draw([1, 2, 3]);\r\n\r\n    chart.draw({values: [1, 2, 3]});\r\n\r\n    chart.draw([\r\n      {values: [1, 2, 3]},\r\n      {values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method draw\r\n    @param {Any} data\r\n  */\r\n  draw: function(data) {\r\n    var config = this._prepareConfig(this.options(), data);\r\n    if (!config)\r\n      config = {data: {_charts: {}, _components: {}}, layout: []};\r\n\r\n    // Set charts and components from config\r\n    this.charts(config.charts);\r\n    this.components(config.components);\r\n\r\n    // Add config data\r\n    data = {\r\n      original: data,\r\n      config: config.data\r\n    };\r\n    this.data(data);\r\n\r\n    this._setDimensions();\r\n\r\n    // Layout components\r\n    this.layout(config.layout, data);\r\n\r\n    // Full draw now that everything has been laid out\r\n    d3.chart().prototype.draw.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Redraw chart with current data\r\n\r\n    @method redraw\r\n  */\r\n  redraw: function() {\r\n    if (this.rawData())\r\n      this.draw(this.rawData().original);\r\n  },\r\n\r\n  demux: function(name, data) {\r\n    if (!data || !data.config || !data.original)\r\n      return data;\r\n\r\n    if (findById(this.charts(), name) && data.config._charts[name])\r\n      return data.config._charts[name];\r\n    else if (findById(this.components(), name) && data.config._components[name])\r\n      return data.config._components[name];\r\n    else\r\n      return data.original;\r\n  },\r\n\r\n  // Create chart layer (for laying out charts)\r\n  createChartLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create component layer\r\n  createComponentLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-component-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create overlay layer\r\n  createOverlayLayer: function() {\r\n    if (!this.container)\r\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n    return this.container.append('div')\r\n      .attr('class', 'chart-overlay-layer');\r\n  },\r\n\r\n  // Layout components and charts for given data\r\n  layout: function(layout, data) {\r\n    // 1. Place chart layers\r\n    this._positionChartLayers();\r\n\r\n    // 2. Extract layout from components\r\n    layout = this._extractLayout(data);\r\n\r\n    // 3. Set chart position from layout\r\n    var chart_position = extend({}, this.margins());\r\n    objectEach(layout, function(parts, key) {\r\n      parts.forEach(function(part) {\r\n        chart_position[key] += part.offset || 0;\r\n      });\r\n    });\r\n    this.chartPosition(chart_position);\r\n\r\n    // 4. Position layers with layout\r\n    this.positionLayers(layout);\r\n  },\r\n\r\n  attachHoverListeners: function() {\r\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n    // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n    var trigger = this.trigger.bind(this);\r\n    var chartPosition = this.chartPosition.bind(this);\r\n    var container = this.container || this.base;\r\n    var base = this.base.node();\r\n    var chart_position, bounds, was_inside;\r\n\r\n    container.on('mouseenter', function() {\r\n      // Calculate chart position and bounds on enter and cache during move\r\n      chart_position = chartPosition();\r\n      bounds = getBounds();\r\n\r\n      was_inside = inside(bounds);\r\n      if (was_inside)\r\n        enter();\r\n    });\r\n    container.on('mousemove', function() {\r\n      // Mousemove may fire before mouseenter in IE\r\n      if (!chart_position || !bounds) {\r\n        chart_position = chartPosition();\r\n        bounds = getBounds();\r\n      }\r\n\r\n      var is_inside = inside(bounds);\r\n      if (was_inside && is_inside)\r\n        move();\r\n      else if (was_inside)\r\n        leave();\r\n      else if (is_inside)\r\n        enter();\r\n\r\n      was_inside = is_inside;\r\n    });\r\n    container.on('mouseleave', function() {\r\n      if (was_inside) {\r\n        was_inside = false;\r\n        leave();\r\n      }\r\n    });\r\n\r\n    function inside() {\r\n      var mouse = d3.mouse(document.documentElement);\r\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n    }\r\n    function enter() {\r\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n    }\r\n    function move() {\r\n      trigger('mousemove', translateToXY(d3.mouse(base)));\r\n    }\r\n    function leave() {\r\n      trigger('mouseleave');\r\n    }\r\n\r\n    function translateToXY(coordinates) {\r\n      var x = coordinates[0];\r\n      var y = coordinates[1];\r\n      var chart_x = x - chart_position.left;\r\n      var chart_y = y - chart_position.top;\r\n\r\n      // Set at chart bounds if outside of chart\r\n      if (x > (chart_position.left + chart_position.width))\r\n        chart_x = chart_position.width;\r\n      else if (x < chart_position.left)\r\n        chart_x = 0;\r\n\r\n      if (y > (chart_position.top + chart_position.height))\r\n        chart_y = chart_position.height;\r\n      else if (y < chart_position.top)\r\n        chart_y = 0;\r\n\r\n      return {\r\n        container: {x: x, y: y},\r\n        chart: {x: chart_x, y: chart_y}\r\n      };\r\n    }\r\n\r\n    function getBounds() {\r\n      var scroll_y = 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop;\r\n\r\n      bounds = extend({}, base.getBoundingClientRect());\r\n      bounds.top += scroll_y;\r\n      bounds.bottom += scroll_y;\r\n\r\n      return bounds;\r\n    }\r\n  },\r\n\r\n  // Attach chart/component child item with id\r\n  attach: function(id, item) {\r\n    item.id = id;\r\n    item.base.attr('data-id', id);\r\n    item.container = this;\r\n\r\n    Base.prototype.attach.call(this, id, item);\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('attach');\r\n  },\r\n\r\n  // Detach chart/component child item by id\r\n  detach: function(id, item) {\r\n    item.base.remove();\r\n\r\n    delete this._attached[id];\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('detach');\r\n  },\r\n\r\n  // Position chart and component layers\r\n  positionLayers: function(layout) {\r\n    this._positionChartLayers();\r\n    this._positionComponents(layout);\r\n    this._positionByZIndex();\r\n  },\r\n\r\n  //\r\n  // Internal\r\n  //\r\n\r\n  _setDimensions: function() {\r\n    // Set container and svg dimensions\r\n    // (if original selection is svg, no container and skip responsiveness)\r\n    if (this.container) {\r\n      this.container\r\n        .attr('style', this.containerStyle());\r\n    }\r\n\r\n    this.base\r\n      .attr('viewBox', this.viewBox())\r\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n      .attr('style', this.baseStyle())\r\n      .attr('width', this.responsive() ? null : this.width())\r\n      .attr('height', this.responsive() ? null : this.height());\r\n  },\r\n\r\n  _attachItems: function(items, container, context) {\r\n    items = items || [];\r\n    container = container || [];\r\n\r\n    // Remove charts that are no longer needed\r\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n    remove_ids.forEach(function(remove_id) {\r\n      context.detach(remove_id, findById(container, remove_id));\r\n    });\r\n\r\n    // Create or update charts\r\n    return items.map(function(options) {\r\n      // TODO May not have id, might need to auto-generate\r\n      // (might be during another step)\r\n      var id = options.id;\r\n      var item = findById(container, id);\r\n\r\n      if (options instanceof d3.chart()) {\r\n        // If chart instance, replace with instance\r\n        if (item)\r\n          context.detach(id, item);\r\n\r\n        context.attach(id, options);\r\n        return options;\r\n      }\r\n      else {\r\n        // TEMP Changing position has nasty side effects, disable for now\r\n        var changed_position = item && !(item instanceof Overlay) && item.position && options.position && item.position() != options.position;\r\n\r\n        if (item && (item.type != options.type || changed_position)) {\r\n          // If chart type has changed, detach and re-create\r\n          context.detach(id, item);\r\n          item = undefined;\r\n        }\r\n\r\n        if (!item) {\r\n          var Item = d3.chart(options.type);\r\n\r\n          if (!Item)\r\n            throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n          var layer_options = {z_index: Item.z_index || 0};\r\n          var createLayer = {\r\n            'chart': 'createChartLayer',\r\n            'component': 'createComponentLayer',\r\n            'overlay': 'createOverlayLayer'\r\n          }[Item.layer_type];\r\n\r\n          if (!createLayer)\r\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n          var base = context[createLayer](layer_options);\r\n\r\n          item = new Item(base, options);\r\n          item.type = options.type;\r\n\r\n          context.attach(id, item);\r\n        }\r\n        else {\r\n          item.options(options);\r\n        }\r\n\r\n        return item;\r\n      }\r\n    });\r\n  },\r\n\r\n  _prepareConfig: function(options, data) {\r\n    return extractLayout(options(data));\r\n  },\r\n\r\n  _positionChartLayers: function() {\r\n    var position = this.chartPosition();\r\n    this.base.selectAll('.chart-layer')\r\n      .attr('transform', translate(position.left, position.top))\r\n      .attr('width', position.width)\r\n      .attr('height', position.height);\r\n  },\r\n\r\n  _positionComponents: function(layout) {\r\n    var chart_position = this.chartPosition();\r\n    var width = this._width();\r\n    var height = this._height();\r\n\r\n    applyLayout(layout, chart_position, width, height);\r\n  },\r\n\r\n  _positionByZIndex: function() {\r\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n    // Sort by z-index\r\n    function setZIndex(layer) {\r\n      return {\r\n        layer: layer,\r\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n      };\r\n    }\r\n    function sortZIndex(a, b) {\r\n      if (a.zIndex < b.zIndex)\r\n        return -1;\r\n      else if (a.zIndex > b.zIndex)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n    function getLayer(wrapped) {\r\n      return wrapped.layer;\r\n    }\r\n\r\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n    // Move layers to z-index order\r\n    layers.forEach(function(layer) {\r\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n        layer.parentNode.appendChild(layer);\r\n    });\r\n  },\r\n\r\n  _extractLayout: function(data) {\r\n    return calculateLayout(this.components(), data, this.demux.bind(this));\r\n  }\r\n});\r\n\r\n// TODO Find better place for this\r\nfunction layered(items) {\r\n  if (!Array.isArray(items))\r\n    items = Array.prototype.slice.call(arguments);\r\n\r\n  return {_layered: true, items: items};\r\n}\r\n\r\nfunction findById(items, id) {\r\n  return find(items, function(item) {\r\n    return item.id == id;\r\n  });\r\n}\r\n\r\nd3.chart().Compose = Compose;\r\nexport {\r\n  Compose as default,\r\n  layered\r\n};\r\n","import {\r\n  property,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\nimport {\r\n  compact,\r\n  pluck,\r\n  objectEach,\r\n  contains\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common hover behavior that adds standard `onMouseEnter`, `onMouseMove`, and `onMouseLeave` handlers\r\n  and `getPoint` helper for adding helpful meta information to raw data point.\r\n\r\n  @class Hover\r\n  @namespace mixins\r\n*/\r\nvar Hover = {\r\n  initialize: function() {\r\n    this.on('attach', function() {\r\n      this.container.on('mouseenter', this.onMouseEnter.bind(this));\r\n      this.container.on('mousemove', this.onMouseMove.bind(this));\r\n      this.container.on('mouseleave', this.onMouseLeave.bind(this));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Get point information for given data-point\r\n\r\n    @method getPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n    @return {key, series, d, meta {chart, i, j, x, y}}\r\n  */\r\n  getPoint: di(function(chart, d, i, j) {\r\n    var key = chart.key && chart.key.call(this, d, i, j);\r\n    var series = chart.seriesData && chart.seriesData.call(this, d, i, j) || {};\r\n\r\n    return {\r\n      key: (series.key || j) + '.' + (key || i),\r\n      series: series,\r\n      d: d,\r\n      meta: {\r\n        chart: chart,\r\n        i: i,\r\n        j: j,\r\n        x: chart.x && chart.x.call(this, d, i, j),\r\n        y: chart.y && chart.y.call(this, d, i, j)\r\n      }\r\n    };\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseenter:point when mouse enters data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseEnterPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseEnterPoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseenter:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseleave:point when mouse leaves data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseleavePoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseLeavePoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseleave:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    (Override) Called when mouse enters container\r\n\r\n    @method onMouseEnter\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseEnter: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse moves within container\r\n\r\n    @method onMouseMove\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseMove: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse leaves container\r\n\r\n    @method onMouseLeave\r\n  */\r\n  onMouseLeave: function() {}\r\n};\r\n\r\n/**\r\n  Mixin for automatically triggering \"mouseenter:point\"/\"mouseleave:point\" for chart data points that are within given `hoverTolerance`.\r\n\r\n  @class HoverPoints\r\n  @namespace mixins\r\n*/\r\nvar HoverPoints = {\r\n  initialize: function() {\r\n    var points, tolerance, active;\r\n\r\n    this.on('draw', function() {\r\n      // Clear cache on draw\r\n      points = null;\r\n    });\r\n\r\n    this.on('attach', function() {\r\n      var update = function update(position) {\r\n        var closest = [];\r\n        if (position)\r\n          closest = getClosestPoints(points, position.chart, tolerance);\r\n\r\n        updateActive(active, closest, this.container);\r\n        active = closest;\r\n      }.bind(this);\r\n\r\n      this.container.on('mouseenter', function(position) {\r\n        if (!points)\r\n          points = getPoints(this, this.data());\r\n\r\n        tolerance = this.hoverTolerance();\r\n        update(position);\r\n      }.bind(this));\r\n\r\n      this.container.on('mousemove', update);\r\n      this.container.on('mouseleave', update);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Hover tolerance (in px) for calculating close points\r\n\r\n    @property hoverTolerance\r\n    @type Number\r\n    @default Infinity\r\n  */\r\n  hoverTolerance: property({\r\n    default_value: Infinity\r\n  })\r\n};\r\n\r\nfunction getPoints(chart, data) {\r\n  if (data) {\r\n    if (!isSeriesData(data))\r\n      data = [{values: data}];\r\n\r\n    return data.map(function(series, j) {\r\n      return series.values.map(function(d, i) {\r\n        return chart.getPoint.call({_parent_data: series}, d, i, j);\r\n      }).sort(function(a, b) {\r\n        // Sort by x\r\n        return a.meta.x - b.meta.x;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction getClosestPoints(points, position, tolerance) {\r\n  if (!points)\r\n    return [];\r\n\r\n  return compact(points.map(function(series) {\r\n    function setDistance(point) {\r\n      point.distance = getDistance(point.meta, position);\r\n      return point;\r\n    }\r\n    function closePoints(point) {\r\n      return point.distance < tolerance;\r\n    }\r\n    function sortPoints(a, b) {\r\n      if (a.distance < b.distance)\r\n        return -1;\r\n      else if (a.distance > b.distance)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n\r\n    var by_distance = series.map(setDistance).filter(closePoints).sort(sortPoints);\r\n\r\n    return by_distance[0];\r\n  }));\r\n\r\n  function getDistance(a, b) {\r\n    return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n  }\r\n}\r\n\r\nfunction updateActive(active, closest, container) {\r\n  var active_keys = pluck(active, 'key');\r\n  var closest_keys = pluck(closest, 'key');\r\n\r\n  objectEach(closest, function(point) {\r\n    if (contains(active_keys, point.key))\r\n      container.trigger('mousemove:point', point);\r\n    else\r\n      container.trigger('mouseenter:point', point);\r\n  });\r\n  objectEach(active, function(point) {\r\n    if (!contains(closest_keys, point.key))\r\n      container.trigger('mouseleave:point', point);\r\n  });\r\n}\r\n\r\nexport {\r\n  Hover as default,\r\n  HoverPoints\r\n};\r\n","import {\r\n  property\r\n} from '../helpers';\r\nimport {\r\n  isUndefined\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common transition behaviors\r\n\r\n  @class Transition\r\n  @namespace mixins\r\n*/\r\nvar Transition = {\r\n  /**\r\n    Delay start of transition by specified milliseconds.\r\n\r\n    @property delay\r\n    @type Number|Function\r\n    @default (use container value, if available)\r\n  */\r\n  delay: property({\r\n    default_value: function() {\r\n      return this.container && this.container.delay && this.container.delay();\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Transition duration in milliseconds.\r\n\r\n    @property duration\r\n    @type Number|Function\r\n    @default (use container value, if available)\r\n  */\r\n  duration: property({\r\n    default_value: function() {\r\n      return this.container && this.container.delay && this.container.duration();\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Transition ease function\r\n\r\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n    - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n    @property ease\r\n    @type String|Function\r\n    @default (use container value, if available)\r\n  */\r\n  ease: property({\r\n    default_value: function() {\r\n      return this.container && this.container.delay && this.container.ease();\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Setup delay, duration, and ease for transition\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Transition, {\r\n      initialize: function() {\r\n        this.layer('circles', this.base, {\r\n          // ...\r\n          events: {\r\n            'merge:transition': function() {\r\n              // Set delay, duration, and ease from properties\r\n              this.chart().setupTransition(this);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }));\r\n    ```\r\n    @method setupTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  setupTransition: function setupTransition(selection) {\r\n    var delay = this.delay();\r\n    var duration = this.duration();\r\n    var ease = this.ease();\r\n\r\n    if (!isUndefined(delay))\r\n      selection.delay(delay);\r\n    if (!isUndefined(duration))\r\n      selection.duration(duration);\r\n    if (!isUndefined(ease))\r\n      selection.ease(ease);\r\n  }\r\n};\r\n\r\nexport default Transition;\r\n","/**\r\n  Mixin to create standard layer to make extending charts straightforward.\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n    initialize: function() {\r\n      this.standardLayer('main', this.base.append('g'))\r\n      // dataBind, insert, events are defined on prototype\r\n    },\r\n\r\n    onDataBind: function(selection, data) {\r\n      // ...\r\n    },\r\n    onInsert: function(selection) {\r\n      // ...\r\n    },\r\n    onEnter: function(selection) {\r\n      // ...\r\n    },\r\n    onUpdateTransition: function(selection) {\r\n      // ...\r\n    },\r\n    // all d3.chart events are available: onMerge, onExit, ...\r\n  }));\r\n  ```\r\n  @class StandardLayer\r\n  @namespace mixins\r\n*/\r\nvar StandardLayer = {\r\n  /**\r\n    extension of `layer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardLayer('circles', this.base.append('g'));\r\n      }\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" layer\r\n    }));\r\n    ```\r\n    @method standardLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardLayer: function standardLayer(name, selection) {\r\n    return createLayer(this, 'layer', name, selection);\r\n  },\r\n\r\n  /**\r\n    extension of `seriesLayer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardSeriesLayer('circles', this.base.append('g'));\r\n      },\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" seriesLayer\r\n    }));\r\n    ```\r\n    @method standardSeriesLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardSeriesLayer: function standardSeriesLayer(name, selection) {\r\n    return createLayer(this, 'series', name, selection);\r\n  },\r\n\r\n  /**\r\n    Called for standard layer's `dataBind`\r\n\r\n    @method onDataBind\r\n    @param {d3.selection} selection\r\n    @param {Any} data\r\n    @return {d3.selection}\r\n  */\r\n  onDataBind: function onDataBind(/* selection, data */) {},\r\n\r\n  /**\r\n    Called for standard layer's `insert`\r\n\r\n    @method onInsert\r\n    @param {d3.selection} selection\r\n    @return {d3.selection}\r\n  */\r\n  onInsert: function onInsert(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter']`\r\n\r\n    @method onEnter\r\n    @param {d3.selection} selection\r\n  */\r\n  onEnter: function onEnter(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter:transition']`\r\n\r\n    @method onEnterTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onEnterTransition: function onEnterTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdate\r\n    @param {d3.selection} selection\r\n  */\r\n  onUpdate: function onUpdate(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdateTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onUpdateTransition: function onUpdateTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge']`\r\n\r\n    @method onMerge\r\n    @param {d3.selection} selection\r\n  */\r\n  onMerge: function onMerge(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge:transition']`\r\n\r\n    @method onMergeTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onMergeTransition: function onMergeTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['exit']`\r\n\r\n    @method onExit\r\n    @param {d3.selection} selection\r\n  */\r\n  onExit: function onExit(/* selection */) {}\r\n\r\n  /**\r\n    Call for standard layer's `events['exit:transition']`\r\n\r\n    @method onExitTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onExitTransition: function onExitTransition(selection) {},\r\n};\r\n\r\nfunction createLayer(chart, type, name, selection) {\r\n  var layer = {\r\n    layer: 'layer',\r\n    series: 'seriesLayer'\r\n  }[type];\r\n\r\n  if (layer && chart[layer]) {\r\n    var events = {};\r\n    [\r\n      'enter',\r\n      'enter:transition',\r\n      'update',\r\n      'update:transition',\r\n      'merge',\r\n      'merge:transition',\r\n      'exit',\r\n      'exit:transition'\r\n    ].forEach(function(event) {\r\n      var method = 'on' + event.split(':').map(function capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }).join('');\r\n\r\n      // Only create events if chart method exists as empty transition events can cause unforeseen issues\r\n      if (chart[method]) {\r\n        events[event] = function() {\r\n          this.chart()[method](this);\r\n        };\r\n      }\r\n    });\r\n\r\n    return chart[layer](name, selection, {\r\n      dataBind: function(data) {\r\n        return this.chart().onDataBind(this, data);\r\n      },\r\n      insert: function() {\r\n        return this.chart().onInsert(this);\r\n      },\r\n      events: events\r\n    });\r\n  }\r\n}\r\n\r\nexport default StandardLayer;\r\n","import {\r\n  contains,\r\n  extend,\r\n  isString\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  style,\r\n  translate,\r\n  rotate,\r\n  mixin\r\n} from '../helpers';\r\nimport { StandardLayer } from '../mixins';\r\nimport Component from '../Component';\r\n\r\n/**\r\n  Add text to a chart.\r\n\r\n  ### Extending\r\n\r\n  To extend the `Text` component, the following methods are available:\r\n\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      return {\r\n        components: {\r\n          title: {\r\n            type: 'Text',\r\n            position: 'top'\r\n            text: 'Main Title',\r\n            textAlign: 'left',\r\n            'class': 'title'\r\n          },\r\n          notes: {\r\n            type: 'Text',\r\n            position: 'bottom',\r\n            text: 'Notes',\r\n            'class': 'notes'\r\n          }\r\n        }\r\n      };\r\n    });\r\n  ```\r\n  @class Text\r\n  @extends Component, StandardLayer\r\n*/\r\nvar Mixed = mixin(Component, StandardLayer);\r\nvar Text = Mixed.extend({\r\n  initialize: function(options) {\r\n    Mixed.prototype.initialize.call(this, options);\r\n\r\n    // Use standard layer for extensibility\r\n    this.standardLayer('Text', this.base.append('g').classed('chart-text', true));\r\n  },\r\n\r\n  /**\r\n    Text to display\r\n\r\n    @property text\r\n    @type String\r\n  */\r\n  text: property(),\r\n\r\n  /**\r\n    Rotation of text\r\n\r\n    @property rotation\r\n    @type Number\r\n    @default 0\r\n  */\r\n  rotation: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Horizontal text-alignment of text (`\"left\"`, `\"center\"`, or `\"right\"`)\r\n\r\n    @property textAlign\r\n    @type String\r\n    @default \"center\"\r\n  */\r\n  textAlign: property({\r\n    default_value: 'center',\r\n    validate: function(value) {\r\n      return contains(['left', 'center', 'right'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    text-anchor for text (`\"start\"`, `\"middle\"`, or `\"end\"`)\r\n\r\n    @property anchor\r\n    @type String\r\n    @default (set by `textAlign`)\r\n  */\r\n  anchor: property({\r\n    default_value: function() {\r\n      return {\r\n        left: 'start',\r\n        center: 'middle',\r\n        right: 'end'\r\n      }[this.textAlign()];\r\n    },\r\n    validate: function(value) {\r\n      return contains(['start', 'middle', 'end', 'inherit'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Vertical aligment for text (`\"top\"`, `\"middle\"`, `\"bottom\"`)\r\n\r\n    @property verticalAlign\r\n    @type String\r\n    @default \"middle\"\r\n  */\r\n  verticalAlign: property({\r\n    default_value: 'middle',\r\n    validate: function(value) {\r\n      return contains(['top', 'middle', 'bottom'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Style object containing styles for text\r\n\r\n    @property style\r\n    @type Object\r\n    @default {}\r\n  */\r\n  style: property({\r\n    default_value: {},\r\n    get: function(value) {\r\n      return style(value) || null;\r\n    }\r\n  }),\r\n\r\n  onDataBind: function onDataBind(selection) {\r\n    return selection.selectAll('text')\r\n      .data([0]);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('text');\r\n  },\r\n  onMerge: function onMerge(selection) {\r\n    selection\r\n      .attr('transform', this.transformation())\r\n      .attr('style', this.style())\r\n      .attr('text-anchor', this.anchor())\r\n      .attr('class', this.options()['class'])\r\n      .text(this.text());\r\n  },\r\n\r\n  transformation: function() {\r\n    var x = {\r\n      left: 0,\r\n      center: this.width() / 2,\r\n      right: this.width()\r\n    }[this.textAlign()];\r\n    var y = {\r\n      top: 0,\r\n      middle: this.height() / 2,\r\n      bottom: this.height()\r\n    }[this.verticalAlign()];\r\n\r\n    var translation = translate(x, y);\r\n    var rotation = rotate(this.rotation());\r\n\r\n    return translation + ' ' + rotation;\r\n  }\r\n}, {\r\n  z_index: 70\r\n});\r\n\r\nfunction textOptions(id, options, default_options) {\r\n  if (!options) {\r\n    options = id;\r\n    id = undefined;\r\n  }\r\n  if (isString(options))\r\n    options = {text: options};\r\n\r\n  return extend({id: id}, default_options, options);\r\n}\r\n\r\nfunction text(id, options) {\r\n  return textOptions(id, options, {type: 'Text'});\r\n}\r\n\r\nd3.chart().Text = Text;\r\nexport {\r\n  Text as default,\r\n  text,\r\n  textOptions\r\n};\r\n","import {\r\n  getMargins,\r\n  property\r\n} from '../helpers';\r\nimport Text, { textOptions } from './Text';\r\n\r\n/**\r\n  Title component that extends Text with defaults (styling, sensible margins, and rotated when positioned left or right)\r\n\r\n  @class Title\r\n  @extends Text\r\n*/\r\nvar Title = Text.extend({\r\n  initialize: function(options) {\r\n    Text.prototype.initialize.call(this, options);\r\n    this.base.select('.chart-text').classed('chart-title', true);\r\n  },\r\n\r\n  /**\r\n    Margins (in pixels) around Title\r\n\r\n    @property margins\r\n    @type Object\r\n    @default (set based on `position`)\r\n  */\r\n  margins: property({\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, defaultMargins(this.position()))\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return defaultMargins(this.position());\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Rotation of title. (Default is `-90` for `position = \"right\"`, `90` for `position = \"left\"`, and `0` otherwise).\r\n\r\n    @property rotation\r\n    @type Number\r\n    @default (set based on `position`)\r\n  */\r\n  rotation: property({\r\n    default_value: function() {\r\n      var rotate_by_position = {\r\n        right: 90,\r\n        left: -90\r\n      };\r\n\r\n      return rotate_by_position[this.position()] || 0;\r\n    }\r\n  })\r\n});\r\n\r\nfunction defaultMargins(position) {\r\n  var default_margin = 8;\r\n  var margins_by_position = {\r\n    top: {top: default_margin, bottom: default_margin},\r\n    right: {right: default_margin, left: default_margin},\r\n    bottom: {top: default_margin, bottom: default_margin},\r\n    left: {right: default_margin, left: default_margin}\r\n  };\r\n  return getMargins(margins_by_position[position]);\r\n}\r\n\r\nfunction title(id, options) {\r\n  return textOptions(id, options, {type: 'Title'});\r\n}\r\n\r\nd3.chart().Title = Title;\r\nexport {\r\n  Title as default,\r\n  title\r\n};\r\n","import {\r\n  getMargins,\r\n  property\r\n} from '../helpers';\r\nimport { textOptions } from './Text';\r\nimport Title from './Title';\r\n\r\n/**\r\n  Axis title component that extends Title with defaults (styling)\r\n\r\n  @class AxisTitle\r\n  @extends Title\r\n*/\r\nvar AxisTitle = Title.extend({\r\n  initialize: function(options) {\r\n    Title.prototype.initialize.call(this, options);\r\n    this.base.select('.chart-text')\r\n      .classed('chart-title', false)\r\n      .classed('chart-axis-title', true);\r\n  },\r\n\r\n  /**\r\n    Margins (in pixels) around axis title\r\n\r\n    @property margins\r\n    @type Object\r\n    @default (set based on `position`)\r\n  */\r\n  margins: property({\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, defaultMargins(this.position()))\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return defaultMargins(this.position());\r\n    }\r\n  })\r\n});\r\n\r\nfunction defaultMargins(position) {\r\n  var default_margin = 8;\r\n  var margins_by_position = {\r\n    top: {top: default_margin / 2, bottom: default_margin},\r\n    right: {left: default_margin / 2, right: default_margin},\r\n    bottom: {bottom: default_margin / 2, top: default_margin},\r\n    left: {right: default_margin / 2, left: default_margin}\r\n  };\r\n\r\n  return getMargins(margins_by_position[position]);\r\n}\r\n\r\nfunction axisTitle(id, options) {\r\n  return textOptions(id, options, {type: 'AxisTitle'});\r\n}\r\n\r\nd3.chart().AxisTitle = AxisTitle;\r\nexport {\r\n  AxisTitle as default,\r\n  axisTitle\r\n};\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property({\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nvar Chart = Base.extend({}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n\r\nd3.chart().Chart = Chart;\r\nexport default Chart;\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: true` and the static `layer_type: 'chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nvar Component = Base.extend({\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property({\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property({\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property({\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property({\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property({\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        // (handle this.centered())\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      var actual_dimensions = dimensions(this.base);\r\n      if (options.height)\r\n        y += (options.height - actual_dimensions.height) / 2;\r\n      if (options.width)\r\n        x += (options.width - actual_dimensions.width) / 2;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n\r\nd3.chart().Component = Component;\r\nexport default Component;\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nvar Overlay = Component.extend({\r\n  initialize: function(options) {\r\n    Component.prototype.initialize.call(this, options);\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property({\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property({\r\n    default_value: function() {\r\n      var transform = translate(this.x() + 'px', this.y() + 'px');\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        '-webkit-transform': transform,\r\n        '-ms-transform': transform,\r\n        transform: transform\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  // TODO This conflicts with component.position(), might need a rename\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n\r\nd3.chart().Overlay = Overlay;\r\nexport default Overlay;\r\n","import d3 from 'd3';\r\nimport {\r\n  getParentData,\r\n  style,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling series data\r\n\r\n  @class Series\r\n  @namespace mixins\r\n*/\r\nvar Series = {\r\n  /**\r\n    Get key for given series data\r\n\r\n    @method seriesKey\r\n    @param {Any} d Series object with `key`\r\n    @return {Any}\r\n  */\r\n  seriesKey: di(function(chart, d) {\r\n    return d.key;\r\n  }),\r\n\r\n  /**\r\n    Get values for given series data\r\n\r\n    @method seriesValues\r\n    @param {Any} d Series object with `values` array\r\n    @return {Array}\r\n  */\r\n  seriesValues: di(function(chart, d, i) {\r\n    // Store seriesIndex on series\r\n    d.seriesIndex = i;\r\n    return d.values;\r\n  }),\r\n\r\n  /**\r\n    Get class for given series data\r\n\r\n    @method seriesClass\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {String}\r\n  */\r\n  seriesClass: di(function(chart, d, i) {\r\n    return 'chart-series chart-index-' + i + (d['class'] ? ' ' + d['class'] : '');\r\n  }),\r\n\r\n  /**\r\n    Get index for given data-point of series\r\n\r\n    @method seriesIndex\r\n    @param {Any} d\r\n    @param {Number} i\r\n  */\r\n  seriesIndex: di(function(chart, d, i) {\r\n    var series = chart.seriesData.call(this, d, i);\r\n    return series && series.seriesIndex || 0;\r\n  }),\r\n\r\n  /**\r\n    Get parent series data for given data-point\r\n\r\n    @method seriesData\r\n    @return {Any}\r\n  */\r\n  seriesData: di(function() {\r\n    return getParentData(this);\r\n  }),\r\n\r\n  /**\r\n    (di) Get style given series data or data-point\r\n    (Uses \"style\" object on `d`, if defined)\r\n\r\n    @method itemStyle\r\n    @param {Any} d\r\n    @param {Number} [i]\r\n    @param {Number} [j]\r\n    @return {String}\r\n  */\r\n  itemStyle: di(function(chart, d) {\r\n    return style(d.style) || null;\r\n  }),\r\n\r\n  /**\r\n    Get series count for chart\r\n\r\n    @method seriesCount\r\n    @return {Number}\r\n  */\r\n  seriesCount: function() {\r\n    var data = this.data();\r\n    return (data && isSeriesData(data)) ? data.length : 1;\r\n  },\r\n\r\n  /**\r\n    Extension of layer() that handles data-binding and layering for series data.\r\n\r\n    - Updates `dataBind` method to access underlying series values\r\n    - Creates group layer for each series in chart\r\n    - Should be used just like layer()\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(mixins.Series, {\r\n      initialize: function() {\r\n        this.seriesLayer('Circles', this.base, {\r\n          // Create group for each series on this.base\r\n          // and calls the following for each series item\r\n          // (entire layer is called twice: series-1 and series-2)\r\n\r\n          dataBind: function(data) {\r\n            // 1. data = [1, 2, 3]\r\n            // 2. data = [4, 5, 6]\r\n          },\r\n          insert: function() {\r\n            // Same as chart.layer\r\n            // (where \"this\" is series group layer)\r\n          },\r\n          events: {\r\n            // Same as chart.layer\r\n          }\r\n        });\r\n      }\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.draw([\r\n      {key: 'series-1', values: [1, 2, 3]},\r\n      {key: 'series-2', values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method seriesLayer\r\n    @param {String} name\r\n    @param {Selection} selection\r\n    @param {Object} options (`dataBind` and `insert` required)\r\n    @return {d3.chart.layer}\r\n  */\r\n  seriesLayer: function(name, selection, options) {\r\n    if (options && options.dataBind) {\r\n      var dataBind = options.dataBind;\r\n\r\n      options.dataBind = function(data) {\r\n        var chart = this.chart();\r\n        var series = this.selectAll('g')\r\n          .data(data, chart.seriesKey);\r\n\r\n        series.enter()\r\n          .append('g');\r\n\r\n        series\r\n          .attr('class', chart.seriesClass)\r\n          .attr('style', chart.itemStyle);\r\n\r\n        // TODO Exit layer items then exit series layer\r\n        series.exit()\r\n          .remove();\r\n\r\n        series.chart = function() { return chart; };\r\n\r\n        return dataBind.call(series, chart.seriesValues);\r\n      };\r\n    }\r\n\r\n    return d3.chart().prototype.layer.call(this, name, selection, options);\r\n  },\r\n\r\n  // Ensure data is in series form\r\n  transform: function(data) {\r\n    return !isSeriesData(data) ? [{values: data}] : data;\r\n  }\r\n};\r\n\r\nexport default Series;\r\n","import {\r\n  extend,\r\n  isUndefined,\r\n  isObject,\r\n  valueOrDefault\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  isSeriesData,\r\n  createScale,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling XY data\r\n\r\n  @class XY\r\n  @namespace mixins\r\n*/\r\nvar XY = {\r\n  initialize: function() {\r\n    // Set scale ranges once chart is ready to be rendered\r\n    this.on('before:draw', this.setScales.bind(this));\r\n  },\r\n\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    // Transform series data from values to x,y\r\n    if (isSeriesData(data)) {\r\n      data = data.map(function(series) {\r\n        return extend({}, series, {\r\n          values: series.values.map(normalizeData)\r\n        });\r\n      });\r\n    }\r\n    else if (Array.isArray(data)) {\r\n      data = data.map(normalizeData);\r\n    }\r\n\r\n    return data;\r\n\r\n    function normalizeData(point, index) {\r\n      if (!isObject(point))\r\n        point = {x: index, y: point};\r\n      else if (!Array.isArray(point) && isUndefined(point.x))\r\n        point.x = index;\r\n\r\n      return point;\r\n    }\r\n  },\r\n\r\n  /**\r\n    Get/set x-scale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  xScale: property({\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setXScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultXScale();\r\n        this.setXScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set yscale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  yScale: property({\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setYScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultYScale();\r\n        this.setYScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Key on data object for x-value\r\n\r\n    @property xKey\r\n    @type String\r\n    @default 'x'\r\n  */\r\n  xKey: property({\r\n    default_value: 'x'\r\n  }),\r\n\r\n  /**\r\n    Key on data object for y-value\r\n\r\n    @property yKey\r\n    @type String\r\n    @default 'y'\r\n  */\r\n  yKey: property({\r\n    default_value: 'y'\r\n  }),\r\n\r\n  /**\r\n    Get scaled x-value for given data-point\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y-value for given data-point\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get key for data-point. Looks for \"key\" on `d` first, otherwise uses x-value.\r\n\r\n    @method key\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Any}\r\n  */\r\n  key: di(function(chart, d, i) {\r\n    return valueOrDefault(d.key, chart.xValue.call(this, d, i));\r\n  }),\r\n\r\n  /**\r\n    Get scaled `x = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled `y = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get x-value for data-point. Checks for `xKey()` on `d` first, otherwise uses `d[0]`.\r\n\r\n    @example\r\n    ```js\r\n    xValue({x: 10, y: 20}); // -> 10\r\n    xValue([10, 20]); // -> 10\r\n    ```\r\n    @method xValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  xValue: di(function(chart, d) {\r\n    var key = chart.xKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[0];\r\n  }),\r\n\r\n  /**\r\n    Get y-value for data-point. Checks for `yKey()` on `d` first, otherwise uses `d[1]`.\r\n\r\n    @example\r\n    ```js\r\n    yValue({x: 10, y: 20}); // -> 20\r\n    yValue([10, 20]); // -> 20\r\n    ```\r\n    @method yValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  yValue: di(function(chart, d) {\r\n    var key = chart.yKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[1];\r\n  }),\r\n\r\n  /**\r\n    Set x- and y-scale ranges (using `setXScaleRange` and `setYScaleRange`)\r\n\r\n    @method setScales\r\n  */\r\n  setScales: function() {\r\n    this.setXScaleRange(this.xScale());\r\n    this.setYScaleRange(this.yScale());\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([0, this.width()]);\r\n  },\r\n\r\n  /**\r\n    Set range(height, 0) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Get default x-scale: `{data: this.data(), key: 'x'}`\r\n\r\n    @method getDefaultXScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'x'\r\n    });\r\n  },\r\n\r\n  /**\r\n    Get default y-scale: `{data: this.data(), key: 'y'}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultYScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'y'\r\n    });\r\n  }\r\n};\r\n\r\nexport default XY;\r\n","import { createScale } from '../helpers';\r\n\r\n/**\r\n  Mixin for charts of centered key,value data (x: index, y: value, key)\r\n\r\n  @class XYValues\r\n  @namespace mixins\r\n*/\r\nvar XYValues = {\r\n  /**\r\n    Determine width of data-point when displayed adjacent\r\n\r\n    @method adjacentWidth\r\n    @return {Number}\r\n  */\r\n  adjacentWidth: function() {\r\n    var series_count = this.seriesCount ? this.seriesCount() : 1;\r\n    return this.layeredWidth() / series_count;\r\n  },\r\n\r\n  /**\r\n    Determine layered width (width of group for adjacent)\r\n\r\n    @method layeredWidth\r\n    @return {Number}\r\n  */\r\n  layeredWidth: function() {\r\n    var range_band = this.xScale() && this.xScale().rangeBand && this.xScale().rangeBand();\r\n    var width = isFinite(range_band) ? range_band : 0;\r\n\r\n    return width;\r\n  },\r\n\r\n  /**\r\n    Determine item width based on series display type (adjacent or layered)\r\n\r\n    @method itemWidth\r\n    @return {Number}\r\n  */\r\n  itemWidth: function() {\r\n    var scale = this.xScale();\r\n    return scale && scale.width ? scale.width() : this.layeredWidth();\r\n  },\r\n\r\n  // Override default x-scale to use ordinal type\r\n  /**\r\n    Override default x-scale to use ordinal type: `{type: 'ordinal', data: this.data(), key: 'y', centered: true}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      type: 'ordinal',\r\n      data: this.data(),\r\n      key: 'x',\r\n      centered: true\r\n    });\r\n  }\r\n};\r\n\r\nexport default XYValues;\r\n","import { di } from '../helpers';\r\n\r\n/**\r\n  Mixin for inverting XY calculations with x vertical, increasing bottom-to-top and y horizontal, increasing left-to-right\r\n\r\n  @class XYInverted\r\n  @namespace mixins\r\n*/\r\nvar XYInverted = {\r\n  /**\r\n    Get x-value for plotting (scaled y-value)\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get y-value for plotting (scaled x-value)\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y = 0 value (along x-axis)\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled x = 0 value (along y-axis)\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Set range (height, 0) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([0, this.width()]);\r\n  }\r\n};\r\n\r\nexport default XYInverted;\r\n","import d3 from 'd3';\r\nimport { property } from '../helpers';\r\nimport {\r\n  extend,\r\n  defaults,\r\n  isBoolean\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling labels in charts\r\n\r\n  @class Labels\r\n  @namespace mixins\r\n*/\r\nvar Labels = {\r\n  /**\r\n    Call during chart initialization to add labels to chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      initialize: function() {\r\n        // this.layer()...\r\n\r\n        // Attach labels layer\r\n        this.attachLabels();\r\n      }\r\n    }));\r\n    ```\r\n    @method attachLabels\r\n  */\r\n  attachLabels: function() {\r\n    var options = this.labels();\r\n    options.parent = this;\r\n\r\n    var LabelsClass = d3.chart(options.type);\r\n    var base = this.base.append('g').attr('class', 'chart-labels');\r\n    var labels = this._labels = new LabelsClass(base, options);\r\n\r\n    // Proxy x and y to parent chart\r\n    this.proxyLabelMethods.forEach(function(method) {\r\n      labels[method] = this[method];\r\n    }, this);\r\n\r\n    this.on('draw', function(data) {\r\n      options = this.labels();\r\n      options.parent = this;\r\n\r\n      labels.options(options);\r\n\r\n      if (options.display !== false)\r\n        labels.draw(options.data || data);\r\n      else\r\n        labels.draw([]);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Options passed to labels chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      // ...\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.labels(true); // -> display labels with defaults\r\n    chart.labels(false); // -> hide labels\r\n    chart.labels({offset: 10}); // -> pass options to labels chart\r\n\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        return {\r\n          charts: {\r\n            custom: {labels: {offset: 10}}\r\n          }\r\n        };\r\n      });\r\n    ```\r\n    @property labels\r\n    @type Object\r\n  */\r\n  labels: property({\r\n    get: function(value) {\r\n      if (isBoolean(value))\r\n        value = {display: value};\r\n      else if (!value)\r\n        value = {display: false};\r\n\r\n      return defaults({}, value, {\r\n        type: 'Labels'\r\n      });\r\n    }\r\n  }),\r\n\r\n  // Array of methods to proxy on labels chart\r\n  proxyLabelMethods: []\r\n};\r\n\r\n/**\r\n  Mixin for handling labels in XY charts\r\n  (proxies `x` and `y` to properly place labels for XY charts)\r\n\r\n  @class LabelsXY\r\n  @namespace mixins\r\n  @extends Labels\r\n*/\r\nvar LabelsXY = extend({}, Labels, {\r\n  proxyLabelMethods: ['x', 'y']\r\n});\r\n\r\nexport {\r\n  Labels as default,\r\n  LabelsXY\r\n};\r\n","import Series from './mixins/series';\r\nimport XY from './mixins/xy';\r\nimport XYValues from './mixins/xy-values';\r\nimport XYInverted from './mixins/xy-inverted';\r\nimport Labels, { LabelsXY } from './mixins/labels';\r\nimport Hover, { HoverPoints } from './mixins/hover';\r\nimport Transition from './mixins/transition';\r\nimport StandardLayer from './mixins/standard-layer';\r\n\r\nvar mixins = {\r\n  Series: Series,\r\n  XY: XY,\r\n  XYValues: XYValues,\r\n  XYInverted: XYInverted,\r\n  Labels: Labels,\r\n  LabelsXY: LabelsXY,\r\n  Hover: Hover,\r\n  HoverPoints: HoverPoints,\r\n  Transition: Transition,\r\n  StandardLayer: StandardLayer\r\n};\r\n\r\nexport {\r\n  mixins as default,\r\n  Series,\r\n  XY,\r\n  XYValues,\r\n  XYInverted,\r\n  Labels,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  property,\r\n  di,\r\n  mixin,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XY,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Create an XY Lines chart with single or series data.\r\n\r\n  ### Extending\r\n\r\n  Great care has been taken in making the standard charts in d3.compose extensible.\r\n  To extend the `Lines` chart, the following methods are available:\r\n\r\n  - `createLine`\r\n  - `lineKey`\r\n  - `lineData`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  View the `Lines.js` source for the default implementation and more information on these methods.\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    return {\r\n      charts: {\r\n        input: {\r\n          type: 'Lines'\r\n          data: data.input,\r\n          // xScale: ...,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([1, 2, 3]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 3}]}\r\n    {values: [{x: 0, y: 3}, {x: 1, y: 2}, {x: 2, y: 1}]}\r\n  ]);\r\n  ```\r\n  @class Lines\r\n  @extends Chart, Series, XY, LabelsXY, Hover, HoverPoints, Transition, StandardLayer\r\n*/\r\nvar Mixed = mixin(Chart, Series, XY, LabelsXY, Hover, HoverPoints, Transition, StandardLayer);\r\nvar Lines = Mixed.extend({\r\n  initialize: function(options) {\r\n    Mixed.prototype.initialize.call(this, options);\r\n\r\n    this.lines = {};\r\n\r\n    // Use standard series layer for extensibility\r\n    // (dataBind, insert, and events defined in prototype)\r\n    this.standardSeriesLayer('Lines', this.base.append('g').classed('chart-lines', true));\r\n\r\n    this.attachLabels();\r\n  },\r\n\r\n  /**\r\n    Set interpolation mode for line\r\n\r\n    - See: [SVG-Shapes#line_interpolate](https://github.com/mbostock/d3/wiki/SVG-Shapes#line_interpolate)\r\n    - Set to `null` or `'linear'` for no interpolation\r\n\r\n    @property interpolate\r\n    @type String\r\n    @default monotone\r\n  */\r\n  interpolate: property({\r\n    default_value: 'monotone'\r\n  }),\r\n\r\n  // Create line on insert (keyed by series/index)\r\n  createLine: di(function(chart, d, i, j) {\r\n    var key = chart.lineKey.call(this, d, i, j);\r\n    var line = chart.lines[key] = d3.svg.line()\r\n      .x(chart.x)\r\n      .y(chart.y);\r\n\r\n    var interpolate = d.interpolate || chart.interpolate();\r\n    if (interpolate)\r\n      line.interpolate(interpolate);\r\n  }),\r\n\r\n  // Get key for line (from series key or index)\r\n  lineKey: di(function(chart, d, i, j) {\r\n    var key = chart.seriesKey(chart.seriesData.call(this, d, i, j));\r\n    return key != null ? key : chart.seriesIndex.call(this, d, i, j);\r\n  }),\r\n\r\n  // Get data for line\r\n  lineData: di(function(chart, d, i, j) {\r\n    var key = chart.lineKey.call(this, d, i, j);\r\n    if (chart.lines[key])\r\n      return chart.lines[key](d);\r\n  }),\r\n\r\n  // Override StandardLayer\r\n  onDataBind: function onDataBind(selection, data) {\r\n    return selection.selectAll('path')\r\n      .data(function(d, i, j) {\r\n        return [data.call(selection, d, i, j)];\r\n      });\r\n  },\r\n\r\n  // Override StandardLayer\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('path')\r\n      .classed('chart-line', true)\r\n      .each(this.createLine);\r\n  },\r\n\r\n  // Override StandardLayer\r\n  onMergeTransition: function onMergeTransition(selection) {\r\n    this.setupTransition(selection);\r\n\r\n    selection\r\n      .attr('d', this.lineData)\r\n      .attr('style', this.itemStyle);\r\n  }\r\n});\r\n\r\nvar lines = createHelper('Lines');\r\n\r\nd3.chart().Lines = Lines;\r\nexport {\r\n  Lines as default,\r\n  lines\r\n};\r\n","import {\r\n  objectFind\r\n} from '../utils';\r\nimport {\r\n  mixin,\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XY,\r\n  XYValues,\r\n  LabelsXY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Bars chart with centered or adjacent display for single or series data.\r\n\r\n  To display bars for different series next to each other (adjacent),\r\n  use the `adjacent` option when creating the `xScale` (see example below).\r\n\r\n  ### Extending\r\n\r\n  To extend the `Bars` chart, the following methods are available:\r\n\r\n  - `barHeight`\r\n  - `barWidth`\r\n  - `barX`\r\n  - `barY`\r\n  - `barClass`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'Bars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class Bars\r\n  @extends Chart, Series, XY, XYValues, LabelsXY, Hover, Transition, StandardLayer\r\n*/\r\n\r\nvar Mixed = mixin(Chart, Series, XY, XYValues, LabelsXY, Hover, Transition, StandardLayer);\r\nvar Bars = Mixed.extend({\r\n  initialize: function(options) {\r\n    Mixed.prototype.initialize.call(this, options);\r\n\r\n    this.on('before:draw', function() {\r\n      this.offset_axis = this.getOffsetAxis();\r\n    }.bind(this));\r\n\r\n    // Use standard series layer for extensibility\r\n    // (dataBind, insert, and events defined in prototype)\r\n    this.standardSeriesLayer('Bars', this.base.append('g').classed('chart-bars', true));\r\n    this.attachLabels();\r\n  },\r\n\r\n  barHeight: di(function(chart, d, i) {\r\n    var height = Math.abs(chart.y0() - chart.y.call(this, d, i)) - chart.barOffset();\r\n    return height > 0 ? height : 0;\r\n  }),\r\n  barWidth: di(function(chart) {\r\n    return chart.itemWidth();\r\n  }),\r\n  barX: di(function(chart, d, i) {\r\n    return chart.x.call(this, d, i) - chart.itemWidth() / 2;\r\n  }),\r\n  barY: di(function(chart, d, i) {\r\n    var y = chart.y.call(this, d, i);\r\n    var y0 = chart.y0();\r\n\r\n    return y < y0 ? y : y0 + chart.barOffset();\r\n  }),\r\n  bar0: di(function(chart, d, i) {\r\n    var y0 = chart.y0();\r\n    var offset = chart.barOffset();\r\n    return chart.y.call(this, d, i) <= y0 ? y0 - offset : y0 + offset;\r\n  }),\r\n  barClass: di(function(chart, d) {\r\n    return 'chart-bar' + (d['class'] ? ' ' + d['class'] : '');\r\n  }),\r\n\r\n  // Shift bars slightly to account for axis thickness\r\n  barOffset: function barOffset() {\r\n    if (this.offset_axis) {\r\n      var axis_thickness = parseInt(this.offset_axis.base.select('.domain').style('stroke-width')) || 0;\r\n      return axis_thickness / 2;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  },\r\n\r\n  getOffsetAxis: function getOffsetAxis() {\r\n    var components = this.container && this.container.components();\r\n    return objectFind(components, function(component) {\r\n      if (component.type == 'Axis' && component.position() == 'bottom')\r\n        return component;\r\n    });\r\n  },\r\n\r\n  // Override StandardLayer\r\n  onDataBind: function onDataBind(selection, data) {\r\n    return selection.selectAll('rect')\r\n      .data(data, this.key);\r\n  },\r\n\r\n  // Override StandardLayer\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('rect')\r\n      .on('mouseenter', this.mouseEnterPoint)\r\n      .on('mouseleave', this.mouseLeavePoint);\r\n  },\r\n\r\n  // Override StandardLayer\r\n  onEnter: function onEnter(selection) {\r\n    selection\r\n      .attr('y', this.bar0)\r\n      .attr('height', 0);\r\n  },\r\n\r\n  // Override StandardLayer\r\n  onMerge: function onMerge(selection) {\r\n    selection\r\n      .attr('class', this.barClass)\r\n      .attr('style', this.itemStyle)\r\n      .attr('x', this.barX)\r\n      .attr('width', this.barWidth);\r\n  },\r\n\r\n  // Override StandardLayer\r\n  onMergeTransition: function onMergeTransition(selection) {\r\n    this.setupTransition(selection);\r\n\r\n    selection\r\n      .attr('y', this.barY)\r\n      .attr('height', this.barHeight);\r\n  },\r\n\r\n  // Override StandardLayer\r\n  onExitTransition: function onExitTransition(selection) {\r\n    this.setupTransition(selection);\r\n\r\n    selection\r\n      .attr('y', this.bar0)\r\n      .attr('height', 0)\r\n      .remove();\r\n  }\r\n});\r\n\r\nvar bars = createHelper('Bars');\r\n\r\nd3.chart().Bars = Bars;\r\nexport {\r\n  Bars as default,\r\n  bars\r\n};\r\n","import {\r\n  extend\r\n} from '../utils';\r\nimport {\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport Bars from './Bars';\r\n\r\n/**\r\n  Bars chart with values stacked on top of each other\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        stacked_output: {\r\n          type: 'StackedBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class StackedBars\r\n  @extends Bars\r\n*/\r\nvar StackedBars = Bars.extend({\r\n  transform: function(data) {\r\n    data = Bars.prototype.transform.call(this, data);\r\n\r\n    var grouped = {};\r\n    var x_key = this.xKey();\r\n    var y_key = this.yKey();\r\n    data = data.map(function(series) {\r\n      series = extend({}, series);\r\n      series.values = series.values.map(function(value) {\r\n        value = extend({}, value);\r\n        var x = value[x_key];\r\n        var y = value.__original_y = value[y_key];\r\n\r\n        if (!grouped[x])\r\n          grouped[x] = {pos: 0, neg: 0};\r\n\r\n        if (y >= 0) {\r\n          value.__previous = grouped[x].pos;\r\n          grouped[x].pos = value[y_key] = grouped[x].pos + y;\r\n        }\r\n        else {\r\n          value.__previous = grouped[x].neg;\r\n          grouped[x].neg = value[y_key] = grouped[x].neg + y;\r\n        }\r\n\r\n        return value;\r\n      }, this);\r\n\r\n      return series;\r\n    }, this);\r\n\r\n    return data;\r\n  },\r\n\r\n  barHeight: di(function(chart, d, i) {\r\n    var height = Math.abs(chart.yScale()(d.__previous) - chart.y.call(this, d, i));\r\n    var offset = chart.seriesIndex.call(this, d, i) === 0 ? chart.barOffset() : 0;\r\n    return height > 0 ? height - offset : 0;\r\n  })\r\n});\r\n\r\nvar stackedBars = createHelper('StackedBars');\r\n\r\nd3.chart().StackedBars = StackedBars;\r\nexport {\r\n  StackedBars as default,\r\n  stackedBars\r\n};\r\n","import { objectFind } from '../utils';\r\nimport {\r\n  mixin,\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport { XYInverted } from '../mixins';\r\nimport Bars from './Bars';\r\n\r\n/**\r\n  Bars chart with bars that group from left-to-right\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'HorizontalBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class HorizontalBars\r\n  @extends Bars, XYInverted\r\n*/\r\nvar HorizontalBars = mixin(Bars, XYInverted).extend({\r\n  barX: di(function(chart, d, i) {\r\n    var x = chart.x.call(this, d, i);\r\n    var x0 = chart.x0();\r\n\r\n    return x < x0 ? x : x0 + chart.barOffset();\r\n  }),\r\n  barY: di(function(chart, d, i) {\r\n    return chart.y.call(this, d, i) - chart.itemWidth() / 2;\r\n  }),\r\n  barWidth: di(function(chart, d, i) {\r\n    var width = Math.abs(chart.x0() - chart.x.call(this, d, i)) - chart.barOffset();\r\n    return width > 0 ? width : 0;\r\n  }),\r\n  barHeight: di(function(chart) {\r\n    return chart.itemWidth();\r\n  }),\r\n  bar0: di(function(chart, d, i) {\r\n    var x0 = chart.x0();\r\n    var offset = chart.barOffset();\r\n    return chart.x.call(this, d, i) >= x0 ? x0 + offset : x0 - offset;\r\n  }),\r\n\r\n  getOffsetAxis: function getOffsetAxis() {\r\n    var components = this.container && this.container.components();\r\n    return objectFind(components, function(component) {\r\n      if (component.type == 'Axis' && component.position() == 'left')\r\n        return component;\r\n    });\r\n  },\r\n\r\n  onEnter: function onEnter(selection) {\r\n    selection\r\n      .attr('x', this.bar0)\r\n      .attr('width', 0);\r\n  },\r\n\r\n  onMerge: function onMerge(selection) {\r\n    selection\r\n      .attr('class', this.barClass)\r\n      .attr('style', this.itemStyle)\r\n      .attr('y', this.barY)\r\n      .attr('height', this.barHeight);\r\n  },\r\n\r\n  onMergeTransition: function onMergeTransition(selection) {\r\n    this.setupTransition(selection);\r\n\r\n    selection\r\n      .attr('x', this.barX)\r\n      .attr('width', this.barWidth);\r\n  },\r\n\r\n  onExitTransition: function onExitTransition(selection) {\r\n    this.setupTransition(selection);\r\n\r\n    selection\r\n      .attr('x', this.bar0)\r\n      .attr('width', 0)\r\n      .remove();\r\n  }\r\n});\r\n\r\nvar horizontalBars = createHelper('HorizontalBars');\r\n\r\nd3.chart().HorizontalBars = HorizontalBars;\r\nexport {\r\n  HorizontalBars as default,\r\n  horizontalBars\r\n};\r\n","import {\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport HorizontalBars from './HorizontalBars';\r\nimport StackedBars from './StackedBars';\r\n\r\n/**\r\n  Horizontal Stacked Bars\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'HorizontalStackedBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class HorizontalStackedBars\r\n  @extends HorizontalBars\r\n*/\r\nvar HorizontalStackedBars = HorizontalBars.extend({\r\n  transform: function(data) {\r\n    data = StackedBars.prototype.transform.call(this, data);\r\n    data = HorizontalBars.prototype.transform.call(this, data);\r\n    return data;\r\n  },\r\n\r\n  barWidth: di(function(chart, d, i) {\r\n    var width = Math.abs(chart.yScale()(d.__previous) - chart.x.call(this, d, i));\r\n    var offset = chart.seriesIndex.call(this, d, i) === 0 ? chart.barOffset() : 0;\r\n    return width > 0 ? width - offset : 0;\r\n  }),\r\n  barX: di(function(chart, d, i) {\r\n    var x = chart.x.call(this, d, i);\r\n    var x0 = chart.yScale()(d.__previous);\r\n\r\n    return x < x0 ? x : x0 + chart.barOffset();\r\n  })\r\n});\r\n\r\nvar horizontalStackedBars = createHelper('HorizontalStackedBars');\r\n\r\nd3.chart().HorizontalStackedBars = HorizontalStackedBars;\r\nexport {\r\n  HorizontalStackedBars as default,\r\n  horizontalStackedBars\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  contains,\r\n  extend,\r\n  first,\r\n  isFunction,\r\n  isString,\r\n  isNumber,\r\n  isUndefined,\r\n  objectEach,\r\n  valueOrDefault\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  di,\r\n  mixin,\r\n  createHelper,\r\n  isSeriesData,\r\n  translate,\r\n  alignText\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Standalone or \"embeddable\" labels (uses `mixins.Labels` and `attachLabels` to embed in chart)\r\n\r\n  ### Extending\r\n\r\n  To extend the `Labels` chart, the following methods are available:\r\n\r\n  - `insertLabels`\r\n  - `mergeLabels`\r\n  - `layoutLabels`\r\n  - `transitionLabels`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  View the `Labels.js` source for the default implementation and more information on these methods.\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    return {\r\n      charts: {\r\n        input: {\r\n          type: 'Lines',\r\n          data: data.input,\r\n          // xScale, yScale, other properties...\r\n\r\n          // Show labels with default properties\r\n          labels: true\r\n        },\r\n        output: {\r\n          type: 'Bars',\r\n          data: data.output,\r\n          // xScale, yScale, other properties...\r\n\r\n          // Pass options to labels\r\n          labels: {\r\n            offset: 2,\r\n            position: 'top',\r\n            style: {\r\n              'font-size': '14px'\r\n            },\r\n            format: d3.format(',0d')\r\n          }\r\n        },\r\n        labels: {\r\n          type: 'Labels',\r\n          data: data.labels,\r\n\r\n          // xScale, yScale, other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  chart.draw({\r\n    input: [1, 2, 3],\r\n    output: [10, 20, 30],\r\n    labels: [\r\n      {x: 0, y: 0},\r\n      {x: 0, y: 30, label: 'Override (y by default)'},\r\n      {x: 2, y: 0},\r\n      {x: 2, y: 30}\r\n    ]\r\n  });\r\n  ```\r\n  @class Labels\r\n  @extends Chart, Series, XY, Hover, Transition, StandardLayer\r\n*/\r\nvar Mixed = mixin(Chart, Series, XY, Hover, Transition, StandardLayer);\r\nvar Labels = Mixed.extend({\r\n  initialize: function(options) {\r\n    Mixed.prototype.initialize.call(this, options);\r\n\r\n    // Proxy attach to parent for hover\r\n    var parent = this.options().parent;\r\n    if (parent) {\r\n      this.parent = parent;\r\n      parent.on('attach', function() {\r\n        this.container = parent.container;\r\n        this.trigger('attach');\r\n      }.bind(this));\r\n    }\r\n\r\n    // Use StandardLayer for extensibility\r\n    this.standardSeriesLayer('Labels', this.base);\r\n  },\r\n\r\n  transform: function(data) {\r\n    data = Mixed.prototype.transform.call(this, data);\r\n\r\n    if (!isSeriesData(data))\r\n      data = [{key: 'labels', name: 'Labels', values: data}];\r\n\r\n    // TODO Use ticks / domain from xScale\r\n    // ticks = scale.ticks ? scale.ticks.apply(scale, [10]) : scale.domain()\r\n    return data;\r\n  },\r\n\r\n  /**\r\n    Formatting function or string (string is passed to `d3.format`) for label values\r\n\r\n    @property format\r\n    @type String|Function\r\n  */\r\n  format: property({\r\n    set: function(value) {\r\n      if (isString(value)) {\r\n        return {\r\n          override: d3.format(value)\r\n        };\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Label position relative to data point\r\n    (top, right, bottom, or left)\r\n\r\n    Additionally, `(a)|(b)` can be used to set position to `a` if y-value >= 0 and `b` otherwise,\r\n    where `a` and `b` are `top`, `right`, `bottom`, or `left`\r\n\r\n    For more advanced positioning, a \"di\" function can be specified to set position per label\r\n\r\n    @example\r\n    ```js\r\n    labels.position('top'); // top for all values\r\n    labels.position('top|bottom'); // top for y-value >= 0, bottom otherwise\r\n    labels.position(function(d, i) { return d.x >= 0 ? 'right' : 'left'; });\r\n    ```\r\n    @property position\r\n    @type String|Function\r\n    @default top|bottom\r\n  */\r\n  position: property({\r\n    default_value: 'top|bottom',\r\n    get: function(value) {\r\n      if (isString(value) && value.indexOf('|') >= 0) {\r\n        var chart = this;\r\n        var parts = value.split('|');\r\n        return function(d, i, j) {\r\n          var y_value = chart.yValue.call(this, d, i, j);\r\n          return y_value >= 0 ? parts[0] : parts[1];\r\n        };\r\n      }\r\n      else {\r\n        return value;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Offset between data point and label\r\n    (if `Number` is given, offset is set based on position)\r\n\r\n    @property offset\r\n    @type Number|Object\r\n    @default 0\r\n  */\r\n  offset: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Padding between text and label background\r\n\r\n    @property padding\r\n    @type Number\r\n    @default 1\r\n  */\r\n  padding: property({default_value: 1}),\r\n\r\n  /**\r\n    Define text anchor (start, middle, or end)\r\n\r\n    (set by default based on label position)\r\n\r\n    @property anchor\r\n    @type String\r\n    @default middle\r\n  */\r\n  anchor: property({\r\n    validate: function(value) {\r\n      return contains(['start', 'middle', 'end'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Define text-alignment (top, middle, or bottom)\r\n\r\n    (set by default based on label position)\r\n\r\n    @property alignment\r\n    @type String\r\n    @default middle\r\n  */\r\n  alignment: property({\r\n    validate: function(value) {\r\n      return contains(['top', 'middle', 'bottom'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get label text for data-point (uses \"label\" property or y-value)\r\n\r\n    @method labelText\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {String}\r\n  */\r\n  labelText: di(function(chart, d, i) {\r\n    var value = valueOrDefault(d.label, valueOrDefault(d.__original_y, chart.yValue.call(this, d, i)));\r\n    var format = chart.format();\r\n\r\n    return format ? format(value) : value;\r\n  }),\r\n\r\n  /**\r\n    Get class for label group\r\n\r\n    @method labelClass\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {String}\r\n  */\r\n  labelClass: di(function(chart, d) {\r\n    return 'chart-label' + (d['class'] ? ' ' + d['class'] : '');\r\n  }),\r\n\r\n  onDataBind: function onDataBind(selection, data) {\r\n    return selection.selectAll('g')\r\n      .data(data, this.key);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('g')\r\n      .call(this.insertLabels);\r\n  },\r\n  onMerge: function onMerge(selection) {\r\n    selection.attr('class', this.labelClass);\r\n\r\n    this.mergeLabels(selection);\r\n    this.layoutLabels(selection);\r\n  },\r\n  onMergeTransition: function onMergeTransition(selection) {\r\n    // Transition labels into position\r\n    this.setupTransition(selection);\r\n    this.transitionLabels(selection);\r\n  },\r\n\r\n  // (Override for custom labels)\r\n  insertLabels: function(selection) {\r\n    selection.append('rect')\r\n      .attr('class', 'chart-label-bg');\r\n    selection.append('text')\r\n      .attr('class', 'chart-label-text');\r\n  },\r\n\r\n  // (Override for custom labels)\r\n  mergeLabels: function(selection) {\r\n    selection.selectAll('text')\r\n      .text(this.labelText);\r\n  },\r\n\r\n  // (Override for custom labels)\r\n  layoutLabels: function(selection) {\r\n    // Calculate layout\r\n    var chart = this;\r\n    var labels = [];\r\n    var position = chart.position();\r\n    var values = {\r\n      offset: chart.offset(),\r\n      padding: chart.padding(),\r\n      anchor: chart.anchor(),\r\n      alignment: chart.alignment()\r\n    };\r\n\r\n    var options;\r\n    if (isString(position))\r\n      options = getOptions();\r\n\r\n    selection.each(function(d, i, j) {\r\n      if (!labels[j])\r\n        labels[j] = [];\r\n\r\n      // Store values for label and calculate layout\r\n      var label = chart._prepareLabel(chart, this, d, i, j);\r\n      labels[j].push(label);\r\n\r\n      var label_options = options || getOptions.call(chart, this, d, i, j);\r\n\r\n      chart._calculateLayout(chart, label_options, label);\r\n    });\r\n\r\n    // Collision detection\r\n    this._handleCollisions(chart, labels);\r\n\r\n    // Layout labels\r\n    labels.forEach(function(series) {\r\n      series.forEach(function(label) {\r\n        this._setLayout(chart, label);\r\n      }, this);\r\n    }, this);\r\n\r\n    function getOptions(element, d, i, j) {\r\n      var label_options = extend({}, values);\r\n      var label_position;\r\n\r\n      if (isFunction(position))\r\n        label_position = position.call(element, d, i, j);\r\n      else\r\n        label_position = position;\r\n\r\n      if (isNumber(label_options.offset)) {\r\n        var offset = {\r\n          top: {x: 0, y: -label_options.offset},\r\n          right: {x: label_options.offset, y: 0},\r\n          bottom: {x: 0, y: label_options.offset},\r\n          left: {x: -label_options.offset, y: 0}\r\n        }[label_position];\r\n\r\n        if (!offset)\r\n          offset = {x: 0, y: 0};\r\n\r\n        label_options.offset = offset;\r\n      }\r\n      if (isUndefined(label_options.anchor)) {\r\n        label_options.anchor = {\r\n          top: 'middle',\r\n          right: 'start',\r\n          bottom: 'middle',\r\n          left: 'end'\r\n        }[label_position];\r\n      }\r\n      if (isUndefined(label_options.alignment)) {\r\n        label_options.alignment = {\r\n          top: 'bottom',\r\n          right: 'middle',\r\n          bottom: 'top',\r\n          left: 'middle'\r\n        }[label_position];\r\n      }\r\n      return label_options;\r\n    }\r\n  },\r\n\r\n  // (Override for custom labels)\r\n  transitionLabels: function(selection) {\r\n    selection.attr('opacity', 1);\r\n  },\r\n\r\n  //\r\n  // Internal\r\n  //\r\n\r\n  _prepareLabel: function(chart, element, d, i) {\r\n    var selection = d3.select(element);\r\n    var text = selection.select('text');\r\n    var bg = selection.select('rect');\r\n\r\n    return {\r\n      x: chart.x.call(element, d, i),\r\n      y: chart.y.call(element, d, i),\r\n      element: element,\r\n      selection: selection,\r\n      text: {\r\n        element: text.node(),\r\n        selection: text\r\n      },\r\n      bg: {\r\n        element: bg.node(),\r\n        selection: bg\r\n      }\r\n    };\r\n  },\r\n\r\n  _calculateLayout: function(chart, options, label) {\r\n    var text_bounds = label.text.element.getBBox();\r\n\r\n    // Need to adjust text for line-height\r\n    var text_y_adjustment = alignText(label.text.element);\r\n\r\n    // Position background\r\n    var layout = label.bg.layout = {\r\n      x: options.offset.x,\r\n      y: options.offset.y,\r\n      width: text_bounds.width + (2 * options.padding),\r\n      height: text_bounds.height + (2 * options.padding)\r\n    };\r\n\r\n    // Set width / height of label\r\n    label.width = layout.width;\r\n    label.height = layout.height;\r\n\r\n    if (options.anchor == 'end')\r\n      label.x -= layout.width;\r\n    else if (options.anchor == 'middle')\r\n      label.x -= (layout.width / 2);\r\n\r\n    if (options.alignment == 'bottom')\r\n      label.y -= layout.height;\r\n    else if (options.alignment == 'middle')\r\n      label.y -= (layout.height / 2);\r\n\r\n    // Center text in background\r\n    label.text.layout = {\r\n      x: layout.x + (layout.width / 2) - (text_bounds.width / 2),\r\n      y: layout.y + (layout.height / 2) - (text_bounds.height / 2) + text_y_adjustment\r\n    };\r\n  },\r\n\r\n  _handleCollisions: function(chart, labels) {\r\n    labels.forEach(function(series, seriesIndex) {\r\n      // Check through remaining series for collisions\r\n      labels.slice(seriesIndex + 1).forEach(function(compareSeries) {\r\n        compareSeries.forEach(function(compareLabel) {\r\n          series.forEach(function(label) {\r\n            if (checkForOverlap(label, compareLabel))\r\n              groupLabels(label, compareLabel);\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    function checkForOverlap(labelA, labelB) {\r\n      var a = getEdges(labelA);\r\n      var b = getEdges(labelB);\r\n\r\n      var contained_LR = (b.left < a.left && b.right > a.right);\r\n      var contained_TB = (b.bottom < a.bottom && b.top > a.top);\r\n      var overlap_LR = (b.left >= a.left && b.left < a.right) || (b.right > a.left && b.right <= a.right) || contained_LR;\r\n      var overlap_TB = (b.top >= a.top && b.top < a.bottom) || (b.bottom > a.top && b.bottom <= a.bottom) || contained_TB;\r\n\r\n      return overlap_LR && overlap_TB;\r\n\r\n      function getEdges(label) {\r\n        return {\r\n          left: label.x,\r\n          right: label.x + label.width,\r\n          top: label.y,\r\n          bottom: label.y + label.height\r\n        };\r\n      }\r\n    }\r\n\r\n    function groupLabels(labelA, labelB) {\r\n      if (labelA.group && labelB.group) {\r\n        // Move labelB group labels into labelA group\r\n        objectEach(labelB.group.labels, function(label) {\r\n          labelA.group.labels.push(label);\r\n          label.group = labelA.group;\r\n        });\r\n\r\n        updateGroupPositions(labelA.group);\r\n      }\r\n      else if (labelA.group) {\r\n        addLabelToGroup(labelB, labelA.group);\r\n      }\r\n      else if (labelB.group) {\r\n        addLabelToGroup(labelA, labelB.group);\r\n      }\r\n      else {\r\n        var group = {labels: []};\r\n        addLabelToGroup(labelA, group);\r\n        addLabelToGroup(labelB, group);\r\n      }\r\n    }\r\n\r\n    function addLabelToGroup(label, group) {\r\n      group.labels.push(label);\r\n      label.group = group;\r\n      label.originalY = label.y;\r\n\r\n      updateGroupPositions(group);\r\n    }\r\n\r\n    function updateGroupPositions(group) {\r\n      function reset(label) {\r\n        // Reset to original y\r\n        label.y = label.originalY;\r\n        return label;\r\n      }\r\n      function sortY(a, b) {\r\n        if (a.y < b.y)\r\n          return -1;\r\n        else if (a.y > b.y)\r\n          return 1;\r\n        else\r\n          return 0;\r\n      }\r\n\r\n      var byY = group.labels.map(reset).sort(sortY).reverse();\r\n\r\n      byY.forEach(function(label, index) {\r\n        var prev = first(byY, index);\r\n        var overlap;\r\n\r\n        for (var i = prev.length - 1; i >= 0; i--) {\r\n          if (checkForOverlap(label, prev[i])) {\r\n            overlap = prev[i];\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (overlap)\r\n          label.y = overlap.y - label.height;\r\n      });\r\n    }\r\n  },\r\n\r\n  _setLayout: function(chart, label) {\r\n    label.bg.selection\r\n      .attr('transform', translate(label.bg.layout.x, label.bg.layout.y))\r\n      .attr('width', label.bg.layout.width)\r\n      .attr('height', label.bg.layout.height);\r\n\r\n    label.text.selection\r\n      .attr('transform', translate(label.text.layout.x, label.text.layout.y));\r\n\r\n    // Position label and set opacity to fade-in\r\n    label.selection\r\n      .attr('transform', translate(label.x, label.y))\r\n      .attr('opacity', 0);\r\n  }\r\n}, {\r\n  z_index: 150\r\n});\r\n\r\nvar labels = createHelper('Labels');\r\n\r\nd3.chart().Labels = Labels;\r\nexport {\r\n  Labels as default,\r\n  labels\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  property,\r\n  mixin,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Hover\r\n} from '../mixins';\r\nimport Labels from './Labels';\r\n/**\r\n  (in-progress)\r\n\r\n  @class HoverLabels\r\n*/\r\nvar Mixed = mixin(Labels, Hover);\r\nvar HoverLabels = Mixed.extend({\r\n  initialize: function(options) {\r\n    Mixed.prototype.initialize.call(this, options);\r\n    this.on('attach', function() {\r\n      this.container.on('mouseenter:point', this.onMouseEnterPoint.bind(this));\r\n      this.container.on('mouseleave:point', this.onMouseLeavePoint.bind(this));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Maximum distance to find active points\r\n\r\n    @property hoverTolerance\r\n    @type Number\r\n    @default Infinity\r\n  */\r\n  hoverTolerance: property({\r\n    set: function(value) {\r\n      // Pass through hover tolerance to parent (if present)\r\n      if (this.parent && this.parent.hoverTolerance)\r\n        this.parent.hoverTolerance(value);\r\n    },\r\n    default_value: Infinity\r\n  }),\r\n\r\n  // Don't fade in labels, hidden until hover\r\n  transitionLabels: function() {},\r\n\r\n  onMouseEnterPoint: function(point) {\r\n    var label = this.findLabelForPoint(point);\r\n    if (label)\r\n      d3.select(label).attr('opacity', 1);\r\n  },\r\n  onMouseLeavePoint: function(point) {\r\n    var label = this.findLabelForPoint(point);\r\n    if (label)\r\n      d3.select(label).attr('opacity', 0);\r\n  },\r\n\r\n  findLabelForPoint: function(point) {\r\n    var labels = this.base.selectAll('g.chart-series').selectAll('g');\r\n    var chart = this;\r\n    var label;\r\n\r\n    labels.each(function(d, i, j) {\r\n      var series = chart.seriesData.call(this, d, i, j);\r\n      if (d === point.d && series === point.series)\r\n        label = this;\r\n    });\r\n\r\n    return label;\r\n  }\r\n});\r\n\r\nvar hoverLabels = createHelper('HoverLabels');\r\n\r\nd3.chart().HoverLabels = HoverLabels;\r\nexport {\r\n  HoverLabels as default,\r\n  hoverLabels\r\n};\r\n","import d3 from 'd3';\r\nimport { contains } from '../utils';\r\nimport {\r\n  createHelper,\r\n  di,\r\n  dimensions,\r\n  mixin,\r\n  property\r\n} from '../helpers';\r\nimport {\r\n  XY,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Component from '../Component';\r\n\r\n/**\r\n  Gridlines component that draws major ticks for chart\r\n\r\n  Uses d3.axis extensions for ticks:\r\n\r\n  - `ticks`\r\n  - `tickValues`\r\n\r\n  ### Extending\r\n\r\n  To extend the `Gridlines` component, the following methods are available\r\n\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart').chart('Compose', function(data) {\r\n    var scales = {\r\n      x: {data: data, key: 'x'},\r\n      y: {data: data, key: 'y'}\r\n    };\r\n\r\n    var vertical = d3c.gridlines({\r\n      scale: scales.x,\r\n      orientation: 'vertical'\r\n    });\r\n    var horizontal = d3c.gridlines({\r\n      scale: scales.y,\r\n      orientation: 'horizontal'\r\n    });\r\n\r\n    return [\r\n      vertical,\r\n      horizontal\r\n    ];\r\n  });\r\n  ```\r\n  @class Gridlines\r\n*/\r\nvar Mixed = mixin(Component, XY, Transition, StandardLayer);\r\nvar Gridlines = Mixed.extend({\r\n  initialize: function(options) {\r\n    Mixed.prototype.initialize.call(this, options);\r\n\r\n    // Proxy attach to parent for width/height\r\n    var parent = this.options().parent;\r\n    if (parent) {\r\n      this.parent = parent;\r\n      parent.on('attach', function() {\r\n        this.container = parent.container;\r\n        this.trigger('attach');\r\n      }.bind(this));\r\n    }\r\n\r\n    // Use standard layer for extensibility\r\n    this.standardLayer('Gridlines', this.base.append('g').attr('class', 'chart-gridlines'));\r\n  },\r\n\r\n  /**\r\n    Use horizontal, vertical gridlines\r\n\r\n    @property orientation\r\n    @type String\r\n    @default horizontal\r\n  */\r\n  orientation: property({\r\n    default_value: 'horizontal',\r\n    validate: function(value) {\r\n      return contains(['horizontal', 'vertical'], value);\r\n    },\r\n    set: function() {\r\n      // Update scale -> xScale/yScale when position changes\r\n      if (this.scale())\r\n        this.scale(this.scale());\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Scale to use for gridlines.\r\n    Can be `d3.scale` or, if `Object` is given, `helpers.createScale` is used.\r\n\r\n    @example\r\n    ```js\r\n    // Set with d3.scale directly\r\n    gridlines.scale(d3.scale());\r\n\r\n    // or with Object passed to helpers.createScale\r\n    gridlines.scale({data: data, key: 'x'});\r\n    ```\r\n    @property scale\r\n    @type Object|d3.scale\r\n  */\r\n  scale: property({\r\n    set: function(value) {\r\n      if (this.orientation() == 'vertical') {\r\n        this.xScale(value);\r\n        value = this.xScale();\r\n      }\r\n      else {\r\n        this.yScale(value);\r\n        value = this.yScale();\r\n      }\r\n\r\n      return {\r\n        override: value\r\n      };\r\n    }\r\n  }),\r\n\r\n  // d3.axis extensions\r\n  ticks: property({\r\n    default_value: [10]\r\n  }),\r\n  tickValues: property(),\r\n\r\n  drawLine: di(function(chart, d) {\r\n    var x1, x2, y1, y2;\r\n    if (chart.orientation() == 'vertical') {\r\n      x1 = x2 = chart.xScale()(d);\r\n      y1 = 0;\r\n      y2 = chart.height();\r\n    }\r\n    else {\r\n      x1 = 0;\r\n      x2 = chart.width();\r\n      y1 = y2 = chart.yScale()(d);\r\n    }\r\n\r\n    d3.select(this)\r\n      .attr('x1', x1)\r\n      .attr('x2', x2)\r\n      .attr('y1', y1)\r\n      .attr('y2', y2);\r\n  }),\r\n\r\n  width: function width() {\r\n    // Use container's explicit chart width rather than component width (if available)\r\n    return this.container ? this.container.chartPosition().width : dimensions(this.base).width;\r\n  },\r\n  height: function height() {\r\n    // Use container's explicit chart height rather than component width (if available)\r\n    return this.container ? this.container.chartPosition().height : dimensions(this.base).width;\r\n  },\r\n\r\n  onDataBind: function onDataBind(selection, data) {\r\n    // [false] is given for display: false when attached from Axis\r\n    var hide = data && data[0] && data[0].y === false;\r\n\r\n    var tick_values = this.tickValues();\r\n    if (tick_values == null && !hide) {\r\n      // Get tick values from scale\r\n      var scale = this.orientation() == 'vertical' ? this.xScale() : this.yScale();\r\n      var ticks_args = this.ticks();\r\n\r\n      if (!ticks_args)\r\n        ticks_args = [10];\r\n      if (!Array.isArray(ticks_args))\r\n        ticks_args = [ticks_args];\r\n\r\n      tick_values = scale.ticks ? scale.ticks.apply(scale, ticks_args) : scale.domain();\r\n    }\r\n\r\n    return selection.selectAll('line').data(hide ? [] : tick_values);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('line')\r\n      .attr('class', 'chart-gridline');\r\n  },\r\n  onMerge: function onMerge(selection) {\r\n    selection\r\n      .attr('opacity', 0)\r\n      .each(this.drawLine);\r\n  },\r\n  onMergeTransition: function onMergeTransition(selection) {\r\n    selection.attr('opacity', 1);\r\n  },\r\n  onExit: function onExit(selection) {\r\n    selection.remove();\r\n  },\r\n\r\n  skip_layout: true\r\n}, {\r\n  layer_type: 'chart',\r\n  z_index: 55\r\n});\r\n\r\nvar gridlines = createHelper('Gridlines');\r\n\r\nd3.chart().Gridlines = Gridlines;\r\nexport {\r\n  Gridlines as default,\r\n  gridlines\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  contains,\r\n  defaults,\r\n  isBoolean,\r\n  isUndefined\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  translate,\r\n  mixin,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  XY,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Component from '../Component';\r\nimport Gridlines from './Gridlines';\r\n\r\n/**\r\n  Axis component for XY data (wraps `d3.axis`).\r\n\r\n  Available d3.axis extensions:\r\n\r\n  - `ticks`\r\n  - `tickValues`\r\n  - `tickSize`\r\n  - `innerTickSize`\r\n  - `outerTickSize`\r\n  - `tickPadding`\r\n  - `tickFormat`\r\n\r\n  ### Extending\r\n\r\n  To extend the `Axis` component, the following methods are available:\r\n\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      var scales = {\r\n        x: {data: data, key: 'x'},\r\n        y: {data: data, key: 'y'}\r\n      };\r\n\r\n      var charts = [];\r\n      var xAxis = d3c.axis({scale: scales.x});\r\n      var yAxis = d3c.axis({scale: scales.y});\r\n\r\n      return [\r\n        // Display y-axis to left of charts\r\n        [yAxis, d3c.layered(charts)],\r\n\r\n        // Display x-axis below charts\r\n        xAxis\r\n      ];\r\n    });\r\n  ```\r\n  @class Axis\r\n  @extends Component, XY, Transition, StandardLayer\r\n*/\r\nvar Mixed = mixin(Component, XY, Transition, StandardLayer);\r\nvar Axis = Mixed.extend({\r\n  initialize: function(options) {\r\n    Mixed.prototype.initialize.call(this, options);\r\n\r\n    // Create two axes (so that layout and transitions work)\r\n    // 1. Display and transitions\r\n    // 2. Layout (draw to get width, but separate so that transitions aren't affected)\r\n    this.axis = d3.svg.axis();\r\n    this._layout_axis = d3.svg.axis();\r\n\r\n    this.axis_base = this.base.append('g').attr('class', 'chart-axis');\r\n    this._layout_base = this.base.append('g')\r\n      .attr('class', 'chart-axis chart-layout')\r\n      .append('g')\r\n        .style('display', 'none');\r\n\r\n    // Use standard layer for extensibility\r\n    this.standardLayer('Axis', this.axis_base);\r\n\r\n    // Setup gridlines\r\n    this.attachGridlines();\r\n  },\r\n\r\n  /**\r\n    Scale to pass to d3.axis\r\n\r\n    - If `xScale`/`yScale` are given, `scale` is set automatically based on `position`.\r\n    - Can be `d3.scale` or, if `Object` is given, `helpers.createScale` is used\r\n\r\n    @example\r\n    ```js\r\n    // Set with d3.scale directly\r\n    axis.scale(d3.scale());\r\n\r\n    // or with Object passed helpers.createScale\r\n    axis.scale({data: data, key: 'x'});\r\n\r\n    // For x0/y0 position, both xScale and yScale needed\r\n    // (scale is automatically set by position)\r\n    axis.xScale({domain: [0, 100]});\r\n    axis.yScale({domain: [0, 10]});\r\n    axis.position('y0');\r\n\r\n    // -> axis.scale() -> axis.xScale by default\r\n    ```\r\n    @property scale\r\n    @type Object|d3.scale\r\n  */\r\n  scale: property({\r\n    set: function(value) {\r\n      if (this.orientation() == 'vertical') {\r\n        this.yScale(value);\r\n        value = this.yScale();\r\n      }\r\n      else {\r\n        this.xScale(value);\r\n        value = this.xScale();\r\n      }\r\n\r\n      return {\r\n        override: value\r\n      };\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position axis relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    Note: x0 and y0 are currently disabled for more testing\r\n\r\n    @property position\r\n    @type String\r\n    @default bottom\r\n  */\r\n  position: property({\r\n    default_value: 'bottom',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    },\r\n    set: function() {\r\n      // Update scale -> xScale/yScale when position changes\r\n      if (this.scale())\r\n        this.scale(this.scale());\r\n    }\r\n  }),\r\n\r\n  /**\r\n    {x,y} translation of axis relative to chart\r\n    (set by default based on position)\r\n\r\n    @property translation\r\n    @type Object\r\n    @default (set based on position)\r\n  */\r\n  translation: property({\r\n    default_value: function() {\r\n      switch (this.position()) {\r\n        case 'top':\r\n          return {x: 0, y: 0};\r\n        case 'right':\r\n          return {x: this.width(), y: 0};\r\n        case 'bottom':\r\n          return {x: 0, y: this.height()};\r\n        case 'left':\r\n          return {x: 0, y: 0};\r\n        case 'x0':\r\n          return {x: this.x0(), y: 0};\r\n        case 'y0':\r\n          return {x: 0, y: this.y0()};\r\n      }\r\n    },\r\n    get: function(value) {\r\n      return translate(value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Axis orient for ticks\r\n    (set by default based on position)\r\n\r\n    @property orient\r\n    @type String\r\n    @default (set based on position)\r\n  */\r\n  orient: property({\r\n    default_value: function() {\r\n      var orient = this.position();\r\n\r\n      if (orient == 'x0')\r\n        orient = 'left';\r\n      else if (orient == 'y0')\r\n        orient = 'bottom';\r\n\r\n      return orient;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Axis orientation (vertical or horizonal)\r\n\r\n    @property orientation\r\n    @type String\r\n    @default (set based on position)\r\n  */\r\n  orientation: property({\r\n    validate: function(value) {\r\n      return contains(['horizontal', 'vertical'], value);\r\n    },\r\n    default_value: function() {\r\n      return {\r\n        top: 'horizontal',\r\n        right: 'vertical',\r\n        bottom: 'horizontal',\r\n        left: 'vertical',\r\n        x0: 'vertical',\r\n        y0: 'horizontal'\r\n      }[this.position()];\r\n    },\r\n    set: function() {\r\n      // Update scale -> xScale/yScale when orientation changes\r\n      if (this.scale())\r\n        this.scale(this.scale());\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Attach gridlines for axis\r\n    (`true` to show with default options, `{...}` to pass options to `Gridlines`)\r\n\r\n    @property gridlines\r\n    @type Boolean|Object\r\n    @default false\r\n  */\r\n  gridlines: property({\r\n    get: function(value) {\r\n      if (isBoolean(value))\r\n        value = {display: value};\r\n      else if (!value)\r\n        value = {display: false};\r\n\r\n      return value;\r\n    }\r\n  }),\r\n\r\n  // d3.axis extensions\r\n  ticks: property(),\r\n  tickValues: property(),\r\n  tickSize: property(),\r\n  innerTickSize: property(),\r\n  outerTickSize: property(),\r\n  tickPadding: property(),\r\n  tickFormat: property(),\r\n\r\n  onDataBind: function onDataBind(selection) {\r\n    // Setup axis (scale and properties)\r\n    this._setupAxis(this.axis);\r\n\r\n    // Force addition of just one axis with dummy data array\r\n    // (Axis will be drawn using underlying chart scales)\r\n    return selection.selectAll('g').data([0]);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('g');\r\n  },\r\n  onEnter: function onEnter(selection) {\r\n    // Render axis\r\n    selection.call(this.axis);\r\n  },\r\n  onMerge: function onUpdate(selection) {\r\n    // Position axis\r\n    selection.attr('transform', this.translation());\r\n  },\r\n  onUpdateTransition: function onUpdateTransition(selection) {\r\n    // Render axis (with transition)\r\n    this.setupTransition(selection);\r\n\r\n    selection.call(this.axis);\r\n  },\r\n  onExit: function onExit(selection) {\r\n    selection.selectAll('g').remove();\r\n  },\r\n\r\n  getLayout: function() {\r\n    // Draw layout axis\r\n    this.setScales();\r\n    this._setupAxis(this._layout_axis);\r\n    this._layout_base.call(this._layout_axis);\r\n\r\n    // Calculate layout\r\n    // (make layout axis visible for width calculations in Firefox)\r\n    this._layout_base.style('display', 'block');\r\n\r\n    var label_overhang = this._getLabelOverhang();\r\n\r\n    this._layout_base.style('display', 'none');\r\n\r\n    return {\r\n      position: this.position(),\r\n      width: label_overhang.width,\r\n      height: label_overhang.height\r\n    };\r\n  },\r\n  setLayout: function() {\r\n    // Axis is positioned as chart layer, so don't set layout\r\n    return;\r\n  },\r\n\r\n  attachGridlines: function() {\r\n    var gridlines_options = gridlinesOptions(this);\r\n    var gridlines = this._gridlines = gridlines_options.display && createGridlines(this, gridlines_options);\r\n\r\n    this.on('draw', function() {\r\n      gridlines_options = gridlinesOptions(this);\r\n\r\n      if (gridlines)\r\n        gridlines.options(gridlines_options);\r\n      else if (gridlines_options.display)\r\n        gridlines = this._gridlines = createGridlines(this, gridlines_options);\r\n\r\n      if (gridlines && gridlines_options.display)\r\n        gridlines.draw();\r\n      else if (gridlines)\r\n        gridlines.draw([false]);\r\n    }.bind(this));\r\n\r\n    function gridlinesOptions(axis) {\r\n      return defaults({}, axis.gridlines(), {\r\n        parent: axis,\r\n        xScale: axis.xScale(),\r\n        yScale: axis.yScale(),\r\n        ticks: axis.ticks(),\r\n        tickValues: axis.tickValues(),\r\n        orientation: axis.orientation() == 'horizontal' ? 'vertical' : 'horizontal'\r\n      });\r\n    }\r\n\r\n    function createGridlines(axis, gridline_options) {\r\n      var base = axis.base.append('g').attr('class', 'chart-axis-gridlines');\r\n      return new Gridlines(base, gridline_options);\r\n    }\r\n  },\r\n\r\n  _setupAxis: function(axis) {\r\n    // Setup axis\r\n    if (this.orientation() == 'vertical')\r\n      axis.scale(this.yScale());\r\n    else\r\n      axis.scale(this.xScale());\r\n\r\n    var extensions = ['orient', 'ticks', 'tickValues', 'tickSize', 'innerTickSize', 'outerTickSize', 'tickPadding', 'tickFormat'];\r\n    var array_extensions = ['tickValues'];\r\n    extensions.forEach(function(key) {\r\n      var value = this[key] && this[key]();\r\n      if (!isUndefined(value)) {\r\n        // If value is array, treat as arguments array\r\n        // otherwise, pass in directly\r\n        if (Array.isArray(value) && !contains(array_extensions, key))\r\n          axis[key].apply(axis, value);\r\n        else\r\n          axis[key](value);\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  _getLabelOverhang: function() {\r\n    // TODO Look into overhang relative to chartBase (for x0, y0)\r\n    var overhangs = {width: [0], height: [0]};\r\n    var orientation = this.orientation();\r\n\r\n    this._layout_base.selectAll('g').each(function() {\r\n      try {\r\n        // There are cases where getBBox may throw\r\n        // (e.g. not currently displayed in Firefox)\r\n        var bbox = this.getBBox();\r\n\r\n        if (orientation == 'horizontal')\r\n          overhangs.height.push(bbox.height);\r\n        else\r\n          overhangs.width.push(bbox.width);\r\n      }\r\n      catch (ex) {\r\n        // Ignore error\r\n      }\r\n    });\r\n\r\n    return {\r\n      width: d3.max(overhangs.width),\r\n      height: d3.max(overhangs.height)\r\n    };\r\n  }\r\n}, {\r\n  layer_type: 'chart',\r\n  z_index: 60\r\n});\r\n\r\nvar axis = createHelper('Axis');\r\n\r\nd3.chart().Axis = Axis;\r\nexport {\r\n  Axis as default,\r\n  axis\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  compact,\r\n  contains,\r\n  find\r\n} from '../utils';\r\nimport {\r\n  alignText,\r\n  createHelper,\r\n  di,\r\n  getMargins,\r\n  isSeriesData,\r\n  mixin,\r\n  property,\r\n  stack,\r\n  translate\r\n} from '../helpers';\r\nimport { StandardLayer } from '../mixins';\r\nimport Component from '../Component';\r\nvar default_legend_margins = {top: 8, right: 8, bottom: 8, left: 8};\r\n\r\n/**\r\n  Legend component that can automatically pull chart and series information from d3.compose\r\n\r\n  Notes:\r\n\r\n  - To exclude a chart from the legend, use `exclude_from_legend = true` in chart prototype or options\r\n  - To exclude a series from the legend, use `exclude_from_legend = true` in series object\r\n  - To add swatch for custom chart, use `Legend.registerSwatch()`\r\n\r\n  ### Extending\r\n\r\n  To extend the `Legend` component, the following methods are available:\r\n\r\n  - `itemKey`\r\n  - `itemText`\r\n  - `swatchClass`\r\n  - `createSwatch`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      var input = [{key: 'input', name: 'Input', values: data.input}];\r\n      var output = [\r\n        {key: 'output1', name: 'Output 1', values: data.output1},\r\n        {key: 'output2', name: 'Output 2', values: data.output2}\r\n      ];\r\n\r\n      var charts = [\r\n        d3c.lines('a', {data: input}), // ...\r\n        d3c.bars('b', {data: output}) // ...\r\n      ];\r\n      var legend = d3c.legend({charts: ['a', 'b']});\r\n\r\n      return [\r\n        [d3c.layered(charts), legend]\r\n      ];\r\n    });\r\n\r\n  // -> automatically creates legend from series data for 'a' and 'b'\r\n  //    (Lines Swatch) Input\r\n  //    (Bars Swatch) Output 1\r\n  //    (Bars Swatch) Output 2\r\n\r\n  // or, manually set data for legend\r\n  return [\r\n    d3c.legend({\r\n      data: [\r\n        {type: 'Lines', text: 'Input', class: 'series-index-0'},\r\n        {type: 'Bars', text: 'Output 1', class: 'series-index-0'},\r\n        {type: 'Bars', text: 'Output 2', class: 'series-index-1'},\r\n      ]\r\n    })\r\n  };\r\n  ```\r\n  @class Legend\r\n  @extends Component, StandardLayer\r\n*/\r\nvar Mixed = mixin(Component, StandardLayer);\r\nvar Legend = Mixed.extend({\r\n  initialize: function(options) {\r\n    Mixed.prototype.initialize.call(this, options);\r\n    this.legend_base = this.base.append('g').classed('chart-legend', true);\r\n    this.standardLayer('Legend', this.legend_base);\r\n  },\r\n\r\n  /**\r\n    Array of chart keys from container to display in legend\r\n\r\n    @example\r\n    ```js\r\n    d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      var charts = [\r\n        {id: 'a'},\r\n        {id: 'b'},\r\n        {id: 'c'}\r\n      ];\r\n      var legend = d3c.legend({charts: ['a', 'c']});\r\n\r\n      return [\r\n        [d3c.layered(charts), legend]\r\n      ];\r\n    });\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property(),\r\n\r\n  /**\r\n    Dimensions of \"swatch\" in px\r\n\r\n    @property swatchDimensions\r\n    @type Object\r\n    @default {width: 20, height: 20}\r\n  */\r\n  swatchDimensions: property({\r\n    default_value: {width: 20, height: 20}\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around legend\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 8, right: 8, bottom: 8, left: 8}\r\n  */\r\n  margins: property({\r\n    default_value: default_legend_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_legend_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Direction to \"stack\" legend, \"vertical\" or \"horizontal\".\r\n    (Default is set based on position: top/bottom = \"horizontal\", left/right = \"vertical\")\r\n\r\n    @property stackDirection\r\n    @type String\r\n    @default (based on position)\r\n  */\r\n  stackDirection: property({\r\n    validate: function(value) {\r\n      return contains(['vertical', 'horizontal'], value);\r\n    },\r\n    default_value: function() {\r\n      var direction_by_position = {\r\n        top: 'horizontal',\r\n        right: 'vertical',\r\n        bottom: 'horizontal',\r\n        left: 'vertical'\r\n      };\r\n      return direction_by_position[this.position()];\r\n    }\r\n  }),\r\n\r\n  transform: function(data) {\r\n    if (this.charts()) {\r\n      // Pull legend data from charts\r\n      var charts = this.container.charts();\r\n      data = this.charts().reduce(function(combined_data, chart_id) {\r\n        var chart = find(charts, function(find_chart) { return find_chart.id == chart_id; });\r\n\r\n        // Check for exclude from legend option\r\n        if (!chart || chart.exclude_from_legend || chart.options().exclude_from_legend)\r\n          return combined_data;\r\n\r\n        var chart_data = this.container.demux(chart_id, this.container.data());\r\n        if (!isSeriesData(chart_data))\r\n          chart_data = [chart_data];\r\n\r\n        var legend_data = chart_data.reduce(function(memo, series, index) {\r\n          // Check for exclude from legend option on series\r\n          if (series && !series.exclude_from_legend) {\r\n            memo.push(this.getLegendData(chart, series, index));\r\n          }\r\n\r\n          return memo;\r\n        }.bind(this), []);\r\n\r\n        return combined_data.concat(legend_data);\r\n      }.bind(this), []);\r\n    }\r\n\r\n    return data;\r\n  },\r\n\r\n  // Key for legend item (default is key from data)\r\n  itemKey: di(function(chart, d) {\r\n    return d.key;\r\n  }),\r\n\r\n  // Text for legend item (default is text from data)\r\n  itemText: di(function(chart, d) {\r\n    return d.text;\r\n  }),\r\n\r\n  // Class to apply to swatch (default is class from data)\r\n  swatchClass: di(function(chart, d) {\r\n    return compact(['chart-legend-swatch', d['class']]).join(' ');\r\n  }),\r\n\r\n  // Create swatch (using registered swatches based on type from data)\r\n  createSwatch: di(function(chart, d, i) {\r\n    var selection = d3.select(this);\r\n\r\n    // Clear existing swatch\r\n    selection.selectAll('*').remove();\r\n    selection\r\n      .attr('class', chart.swatchClass);\r\n\r\n    var swatches = Legend.swatches;\r\n    if (!swatches)\r\n      return;\r\n\r\n    if (d && d.type && swatches[d.type])\r\n      swatches[d.type].call(selection, chart, d, i);\r\n    else if (swatches['default'])\r\n      swatches['default'].call(selection, chart, d, i);\r\n  }),\r\n\r\n  onDataBind: function onDataBind(selection, data) {\r\n    return selection.selectAll('.chart-legend-group')\r\n      .data(data, this.itemKey);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    var groups = selection.append('g')\r\n      .attr('class', 'chart-legend-group')\r\n      .style('pointer-events', 'all')\r\n      .on('mouseenter', function(d, i) {\r\n        this.container.trigger('mouseenter:legend', this._itemDetails(d, i));\r\n      }.bind(this))\r\n      .on('mousemove', function(d, i) {\r\n        this.container.trigger('mousemove:legend', this._itemDetails(d, i));\r\n      }.bind(this))\r\n      .on('mouseleave', function(d, i) {\r\n        this.container.trigger('mouseleave:legend', this._itemDetails(d, i));\r\n      }.bind(this));\r\n\r\n    groups.append('g')\r\n      .attr('width', this.swatchDimensions().width)\r\n      .attr('height', this.swatchDimensions().height)\r\n      .attr('class', 'chart-legend-swatch');\r\n    groups.append('text')\r\n      .attr('class', 'chart-legend-label');\r\n\r\n    groups.append('rect')\r\n      .attr('class', 'chart-legend-hover')\r\n      .style('visibility', 'hidden');\r\n\r\n    return groups;\r\n  },\r\n  onMerge: function onMerge(selection) {\r\n    var swatch = this.swatchDimensions();\r\n\r\n    selection.select('.chart-legend-swatch').each(this.createSwatch);\r\n\r\n    selection.select('.chart-legend-label')\r\n      .text(this.itemText)\r\n      .each(function() {\r\n        // Vertically center text\r\n        var offset = alignText(this, swatch.height);\r\n        d3.select(this)\r\n          .attr('transform', translate(swatch.width + 5, offset));\r\n      });\r\n\r\n    // Position groups after positioning everything inside\r\n    selection.call(stack({\r\n      direction: this.stackDirection(),\r\n      origin: 'top',\r\n      padding: 5,\r\n      min_height: swatch.height,\r\n      min_width: swatch.width\r\n    }));\r\n\r\n    // Position hover listeners\r\n    var sizes = [];\r\n    selection.each(function() {\r\n      sizes.push(this.getBBox());\r\n    });\r\n    selection.select('.chart-legend-hover').each(function() {\r\n      var size = sizes.shift();\r\n      d3.select(this)\r\n        .attr('width', size.width)\r\n        .attr('height', size.height);\r\n    });\r\n  },\r\n  onExit: function onExit(selection) {\r\n    selection.remove();\r\n  },\r\n\r\n  getLegendData: function getLegendData(chart, series, series_index) {\r\n    return {\r\n      text: series.name || 'Series ' + (series_index + 1),\r\n      key: chart.id + '.' + (series.key || series_index),\r\n      type: chart.type,\r\n      'class': compact([\r\n        'chart-series',\r\n        'chart-index-' + series_index,\r\n        chart.options()['class'],\r\n        series['class']\r\n      ]).join(' ')\r\n    }\r\n  },\r\n\r\n  _itemDetails: function _itemDetails(d, i) {\r\n    return {\r\n      legend: this,\r\n      d: d,\r\n      i: i\r\n    };\r\n  }\r\n}, {\r\n  z_index: 200,\r\n  swatches: {\r\n    'default': function(chart) {\r\n      var swatch_dimensions = chart.swatchDimensions();\r\n\r\n      this.append('circle')\r\n        .attr('cx', swatch_dimensions.width / 2)\r\n        .attr('cy', swatch_dimensions.height / 2)\r\n        .attr('r', d3.min([swatch_dimensions.width, swatch_dimensions.height]) / 2)\r\n        .attr('class', 'chart-swatch');\r\n    }\r\n  },\r\n\r\n  /**\r\n    Register a swatch create function for the given chart type\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Legend').registerSwatch(['Lines'], function(chart, d, i) {\r\n      var dimensions = chart.swatchDimensions();\r\n\r\n      return this.append('line')\r\n        .attr('x1', 0).attr('y1', dimensions.height / 2)\r\n        .attr('x2', dimensions.width).attr('y2', dimensions.height / 2)\r\n        .attr('class', 'chart-line');\r\n    });\r\n    ```\r\n    @method registerSwatch\r\n    @static\r\n    @param {Array|String} types Chart type(s)\r\n    @param {Function} create \"di\" function that inserts swatch\r\n  */\r\n  registerSwatch: function(types, create) {\r\n    if (!Array.isArray(types))\r\n      types = [types];\r\n\r\n    types.forEach(function(type) {\r\n      this.swatches[type] = create;\r\n    }, this);\r\n  }\r\n});\r\n\r\n// Create line swatch for Line and LineValues\r\nLegend.registerSwatch(['Lines'], function(chart) {\r\n  var swatch_dimensions = chart.swatchDimensions();\r\n\r\n  return this.append('line')\r\n    .attr('x1', 0).attr('y1', swatch_dimensions.height / 2)\r\n    .attr('x2', swatch_dimensions.width).attr('y2', swatch_dimensions.height / 2)\r\n    .attr('class', 'chart-line');\r\n});\r\n\r\n// Create bars swatch for Bars and StackedBars\r\nLegend.registerSwatch(['Bars', 'StackedBars', 'HorizontalBars', 'HorizontalStackedBars'], function(chart) {\r\n  var swatch_dimensions = chart.swatchDimensions();\r\n\r\n  return this.append('rect')\r\n    .attr('x', 0).attr('y', 0)\r\n    .attr('width', swatch_dimensions.width).attr('height', swatch_dimensions.height)\r\n    .attr('class', 'chart-bar');\r\n});\r\n\r\nvar legend = createHelper('Legend');\r\n\r\nd3.chart().Legend = Legend;\r\nexport {\r\n  Legend as default,\r\n  legend\r\n};\r\n","import {\r\n  property,\r\n  dimensions,\r\n  translate,\r\n  createHelper\r\n} from '../helpers';\r\nimport Legend from './Legend';\r\n\r\n/**\r\n  Legend positioned within chart bounds.\r\n\r\n  @class InsetLegend\r\n  @extends Legend\r\n*/\r\nvar InsetLegend = Legend.extend({\r\n  initialize: function(options) {\r\n    Legend.prototype.initialize.call(this, options);\r\n    this.on('draw', function() {\r\n      // Position legend on draw\r\n      // (Need actual width/height for relative_to)\r\n      var translation = this.translation();\r\n      this.legend_base.attr('transform', translate(translation.x, translation.y));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Position legend within chart layer `{x, y, relative_to}`\r\n    Use `relative_to` to use x,y values relative to x-y origin\r\n    (e.g. `\"left-top\"` is default)\r\n\r\n    @example\r\n    ```js\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        return {\r\n          components: {\r\n            legend: {\r\n              type: 'InsetLegend',\r\n              // Position legend 10px away from right-bottom corner of chart\r\n              translation: {x: 10, y: 10, relative_to: 'right-bottom'}\r\n            }\r\n          }\r\n        }\r\n      });\r\n    ```\r\n    @property translation\r\n    @type Object {x,y}\r\n    @default {x: 10, y: 10, relative_to: 'left-top'}\r\n  */\r\n  translation: property({\r\n    default_value: {x: 10, y: 0, relative_to: 'left-top'},\r\n    get: function(value) {\r\n      var x = value.x || 0;\r\n      var y = value.y || 0;\r\n      var relative_to_x = (value.relative_to && value.relative_to.split('-')[0]) || 'left';\r\n      var relative_to_y = (value.relative_to && value.relative_to.split('-')[1]) || 'top';\r\n\r\n      if (relative_to_x === 'right') {\r\n        x = this.width() - dimensions(this.legend_base).width - x;\r\n      }\r\n      if (relative_to_y === 'bottom') {\r\n        y = this.height() - dimensions(this.legend_base).height - y;\r\n      }\r\n\r\n      return {\r\n        x: x,\r\n        y: y\r\n      };\r\n    }\r\n  }),\r\n\r\n  skip_layout: true\r\n}, {\r\n  layer_type: 'chart'\r\n});\r\n\r\nvar insetLegend = createHelper('InsetLegend');\r\n\r\nd3.chart().InsetLegend = InsetLegend;\r\nexport {\r\n  InsetLegend as default,\r\n  insetLegend\r\n};\r\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nimport mixins from './src/mixins';\r\n\r\nimport Lines, { lines } from './src/charts/Lines';\r\nimport Bars, { bars } from './src/charts/Bars';\r\nimport StackedBars, { stackedBars } from './src/charts/StackedBars';\r\nimport HorizontalBars, { horizontalBars } from './src/charts/HorizontalBars';\r\nimport HorizontalStackedBars, { horizontalStackedBars } from './src/charts/HorizontalStackedBars';\r\nimport Labels, { labels } from './src/charts/Labels';\r\nimport HoverLabels, { hoverLabels } from './src/charts/HoverLabels';\r\n\r\nimport Text, { text } from './src/components/Text';\r\nimport Title, { title } from './src/components/Title';\r\nimport Axis, { axis } from './src/components/Axis';\r\nimport AxisTitle, { axisTitle } from './src/components/AxisTitle';\r\nimport Legend, { legend } from './src/components/Legend';\r\nimport InsetLegend, { insetLegend } from './src/components/InsetLegend';\r\nimport Gridlines, { gridlines } from './src/components/Gridlines';\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered,\r\n\r\n  mixins: mixins,\r\n\r\n  Lines: Lines,\r\n  lines: lines,\r\n  Bars: Bars,\r\n  bars: bars,\r\n  StackedBars: StackedBars,\r\n  stackedBars: stackedBars,\r\n  HorizontalBars: HorizontalBars,\r\n  horizontalBars: horizontalBars,\r\n  HorizontalStackedBars: HorizontalStackedBars,\r\n  horizontalStackedBars: horizontalStackedBars,\r\n  Labels: Labels,\r\n  labels: labels,\r\n  HoverLabels: HoverLabels,\r\n  hoverLabels: hoverLabels,\r\n\r\n  Text: Text,\r\n  text: text,\r\n  Title: Title,\r\n  title: title,\r\n  Axis: Axis,\r\n  axis: axis,\r\n  AxisTitle: AxisTitle,\r\n  axisTitle: axisTitle,\r\n  Legend: Legend,\r\n  legend: legend,\r\n  InsetLegend: InsetLegend,\r\n  insetLegend: insetLegend,\r\n  Gridlines: Gridlines,\r\n  gridlines: gridlines\r\n};\r\n\r\nexport default d3c;\r\n"],"sourceRoot":"/source/"}