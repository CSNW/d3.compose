{"version":3,"sources":["d3.compose-mixins.min.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers/index.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/src/mixins/series.js","../C:/dev/d3.compose/src/mixins/hover.js","../C:/dev/d3.compose/src/mixins/transition.js","../C:/dev/d3.compose/src/mixins/standard-layer.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js","../C:/dev/d3.compose/src/mixins/xy.js","../C:/dev/d3.compose/src/mixins/xy-values.js","../C:/dev/d3.compose/src/mixins/labels.js","../C:/dev/d3.compose/src/mixins/index.js","../C:/dev/d3.compose/index-mixins.js"],"names":["global","factory","exports","module","require","define","amd","d3","compose","XYInverted","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","valueOrDefault","default_value","property","name","options","prop_key","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","isArray","mixed","constructor","initialize","args","forEach","extension","transform","reduceRight","bind","stack","elements","direction","origin","element_dimensions","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","id","layered","items","_layered","findById","getPoints","getPoint","sort","meta","getClosestPoints","points","position","tolerance","getDistance","Math","sqrt","pow","setDistance","point","distance","closePoints","sortPoints","by_distance","updateActive","active","closest","container","active_keys","closest_keys","trigger","createLayer","layer","events","event","method","split","str","charAt","toUpperCase","dataBind","onDataBind","insert","onInsert","Int8Array","utils","helpers","style","Base","isProperty","unset","base","draw","Chart","z_index","layer_type","Component","margins","top","right","bottom","left","skip_layout","prepareLayout","getLayout","setLayout","Overlay","hidden","display","getAbsolutePosition","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","Compose","rawData","tagName","append","classed","attachHoverListeners","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","charts","chart_options","_attachItems","components","component_options","config","_prepareConfig","_updateDimensions","layout","redraw","demux","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","chart_position","parts","part","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","was_inside","on","getBoundingClientRect","scrollY","is_inside","attach","detach","remove","_attached","_positionComponents","_positionByZIndex","remove_ids","remove_id","Item","layer_options","component","overlay","prepareComponent","row_index","col_index","extractData","normalized","found","row","row_components","chart_index","unshift","selectAll","index","previousPart","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","appendChild","overall_layout","Series","seriesKey","seriesValues","seriesIndex","seriesClass","seriesData","itemStyle","seriesCount","seriesLayer","exit","XY","setScales","normalizeData","xScale","setXScaleRange","getDefaultXScale","yScale","setYScaleRange","getDefaultYScale","xKey","yKey","xValue","yValue","x0","y0","x_scale","y_scale","XYValues","adjacentWidth","layeredWidth","itemWidth","Labels","attachLabels","labels","LabelsClass","_labels","proxyLabelMethods","LabelsXY","Hover","onMouseEnter","onMouseMove","onMouseLeave","mouseEnterPoint","mouseLeavePoint","HoverPoints","update","hoverTolerance","Transition","delay","duration","ease","setupTransition","StandardLayer","standardLayer","standardSeriesLayer","onEnter","onUpdate","onMerge","onExit","InvertedXY","XYLabels","index_mixins","VERSION"],"mappings":"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","file":"d3.compose-mixins.min.js","sourcesContent":[null,"// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\r\n  isFunction,\r\n  isUndefined,\r\n  valueOrDefault\r\n} from '../utils';\r\n\r\n/**\r\n  Helper for creating properties for charts/components\r\n\r\n  @example\r\n  ```javascript\r\n  var Custom = d3.chart('Chart').extend('Custom', {\r\n    // Create property that's stored internally as 'simple'\r\n    simple: property('simple')\r\n  });\r\n  var custom; // = new Custom(...);\r\n\r\n  // set\r\n  custom.simple('Howdy');\r\n\r\n  // get\r\n  console.log(custom.simple()); // -> 'Howdy'\r\n\r\n  // Advanced\r\n  // --------\r\n  // Default values:\r\n  Custom.prototype.message = property('message', {\r\n    default_value: 'Howdy!'\r\n  });\r\n\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n  custom.message('Goodbye');\r\n  console.log(custom.message()); // -> 'Goodbye'\r\n\r\n  // Set to undefined to reset to default value\r\n  custom.message(undefined);\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n\r\n  // Custom getter:\r\n  Custom.prototype.exclaimed = property('exclaimed', {\r\n    get: function(value) {\r\n      // Value is the underlying set value\r\n      return value + '!';\r\n    }\r\n  });\r\n\r\n  custom.exclaimed('Howdy');\r\n  console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n  // Custom setter:\r\n  Custom.prototype.feeling = property('feeling', {\r\n    set: function(value, previous) {\r\n      if (value == 'Hate') {\r\n        // To override value, return Object with override specified\r\n        return {\r\n          override: 'Love',\r\n\r\n          // To do something after override, use after callback\r\n          after: function() {\r\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    custom.feeling('Hate'); // -> 'After: Love'\r\n    console.log(custom.feeling()); // -> 'Love'\r\n  });\r\n  ```\r\n  @method property\r\n  @param {String} name of stored property\r\n  @param {Object} [options]\r\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`)\r\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n  @param {String} [options.type] `get` is evaluated by default, use `\"Function\"` to skip evaluation\r\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n  @param {String} [options.prop_key='__properties'] underlying key on object to store property\r\n  @return {Function} `()`: get, `(value)`: set\r\n*/\r\nexport default function property(name, options) {\r\n  options = options || {};\r\n  var prop_key = options.prop_key || '__properties';\r\n\r\n  var property = function(value) {//eslint-disable-line no-shadow\r\n    var properties = this[prop_key] = this[prop_key] || {};\r\n    var context = valueOrDefault(property.context, this);\r\n\r\n    if (arguments.length)\r\n      return set.call(this);\r\n    else\r\n      return get.call(this);\r\n\r\n    function get() {\r\n      value = valueOrDefault(properties[name], property.default_value);\r\n\r\n      // Unwrap value if its type is not a function\r\n      if (isFunction(value) && options.type != 'Function')\r\n        value = value.call(this);\r\n\r\n      return isFunction(options.get) ? options.get.call(context, value) : value;\r\n    }\r\n\r\n    function set() {\r\n      // Validate\r\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(this, value))\r\n        throw new Error('Invalid value for ' + name + ': ' + JSON.stringify(value));\r\n\r\n      property.previous = properties[name];\r\n      properties[name] = value;\r\n\r\n      if (isFunction(options.set) && !isUndefined(value)) {\r\n        var response = options.set.call(context, value, property.previous);\r\n\r\n        if (response && 'override' in response)\r\n          properties[name] = response.override;\r\n        if (response && isFunction(response.after))\r\n          response.after.call(context, properties[name]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // For checking if function is a property\r\n  property.is_property = true;\r\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n  property.default_value = options.default_value;\r\n  property.context = options.context;\r\n\r\n  return property;\r\n}\r\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector\r\n\r\n  @method dimensions\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from './index';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05]\r\n  });\r\n  ```\r\n  @method createScale\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import { extend } from '../utils';\r\n\r\n/**\r\n  Mix prototypes into single combined prototype for chart/component\r\n\r\n  Designed specifically to work with d3.chart:\r\n\r\n  - transform is called from last to first\r\n  - initialize is called from first to last\r\n  - remaining are overriden from first to last\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  d3.chart('Chart').extend('Custom', mixin(a, b, c, {\r\n    initialize: function() {\r\n      // d\r\n    },\r\n    transform: function() {\r\n      // d\r\n    }\r\n  }));\r\n\r\n  // initialize: Chart -> b -> d\r\n  // transform: d -> a -> Chart\r\n  ```\r\n  @method mixin\r\n  @param {Array|Object...} mixins... Array of mixins or mixins as separate arguments\r\n  @return {Object}\r\n*/\r\nexport default function mixin(mixins) {\r\n  mixins = Array.isArray(mixins) ? mixins : Array.prototype.slice.call(arguments);\r\n  var mixed = extend.apply(null, [{}].concat(mixins));\r\n\r\n  // Don't mixin constructor with prototype\r\n  delete mixed.constructor;\r\n\r\n  if (mixed.initialize) {\r\n    mixed.initialize = function initialize() {\r\n      var args = Array.prototype.slice.call(arguments);\r\n\r\n      mixins.forEach(function(extension) {\r\n        if (extension.initialize)\r\n          extension.initialize.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n  if (mixed.transform) {\r\n    mixed.transform = function transform(data) {\r\n      return mixins.reduceRight(function(memo, extension) {\r\n        if (extension && extension.transform)\r\n          return extension.transform.call(this, memo);\r\n        else\r\n          return memo;\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return mixed;\r\n}\r\n","import { translate } from './index';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack)\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack.bind(this, {\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n*/\r\nexport default function stack(options, elements) {\r\n  if (options && !elements) {\r\n    elements = options;\r\n    options = {\r\n      direction: 'vertical',\r\n      origin: 'top',\r\n      padding: 0\r\n    };\r\n  }\r\n\r\n  function padding(d, i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  if (elements && elements.attr) {\r\n    var previous = 0;\r\n    elements\r\n      .attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var x = 0;\r\n        var y = 0;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          if (!(options.origin == 'left' || options.origin == 'right'))\r\n            options.origin = 'left';\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(d, i);\r\n          else\r\n            x = previous + element_dimensions.width + padding(d, i);\r\n\r\n          previous = previous + element_dimensions.width + padding(d, i);\r\n        }\r\n        else {\r\n          if (!(options.origin == 'top' || options.origin == 'bottom'))\r\n            options.origin = 'top';\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(d, i);\r\n          else\r\n            y = previous + element_dimensions.height + padding(d, i);\r\n\r\n          previous = previous + element_dimensions.height + padding(d, i);\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n  }\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isObject,\r\n  extend,\r\n  first,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './property';\r\nimport dimensions from './dimensions';\r\nimport createScale from './create-scale';\r\nimport mixin from './mixin';\r\nimport stack from './stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  contains,\r\n  find,\r\n  defaults,\r\n  extend,\r\n  objectEach,\r\n  difference,\r\n  pluck\r\n} from './utils';\r\nimport {\r\n  property,\r\n  style,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  d3.compose\r\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n  @example\r\n  ```html\r\n  <div id=\"#chart\"></div>\r\n  ```\r\n  ```js\r\n  var chart = d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      // Process data...\r\n\r\n      // Create shared scales\r\n      var scales = {\r\n        x: {data: data.input, key: 'x', adjacent: true},\r\n        y: {data: data.input, key: 'y'},\r\n        y2: {data: data.output, key: 'y'}\r\n      };\r\n\r\n      return {\r\n        charts: {\r\n          input: {\r\n            type: 'Bars', data: data.input, xScale: scales.x, yScale: scales.y\r\n          },\r\n          output: {\r\n            type: 'Lines', data: data.output, xScale: scales.x, yScale: scales.y2}\r\n          }\r\n        },\r\n        components: {\r\n          'axis.y': {\r\n            type: 'Axis', scale: scales.y, position: 'left'\r\n          },\r\n          'axis.y2': {\r\n            type: 'Axis', scale: scales.y2, position: 'right'\r\n          }\r\n          title: {\r\n            type: 'Title', position: 'top', text: 'd3.compose'\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n  chart.draw({input: [...], output: [...]});\r\n  ```\r\n\r\n  @class Compose\r\n  @param {Function|Object} [options]\r\n*/\r\nexport default Base.extend('Compose', {\r\n  initialize: function() {\r\n    // Overriding transform in init jumps it to the top of the transform cascade\r\n    // Therefore, data coming in hasn't been transformed and is raw\r\n    // (Save raw data for redraw)\r\n    this.transform = function(data) {\r\n      this.rawData(data);\r\n      return data;\r\n    };\r\n\r\n    // Responsive svg based on the following approach (embedded + padding hack)\r\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n    // (not enabled if selection is svg)\r\n    if (this.base.node().tagName != 'svg') {\r\n      this.container = this.base.append('div')\r\n        .attr('class', 'chart-compose-container');\r\n\r\n      this.base = this.container.append('svg')\r\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n        .attr('version', '1.1')\r\n        .attr('class', 'chart-compose');\r\n    }\r\n    else {\r\n      this.base.classed('chart-compose', true);\r\n    }\r\n\r\n    this.attachHoverListeners();\r\n  },\r\n\r\n  /**\r\n    Get/set the options `object/function` for the chart that takes `data` and\r\n    returns `{charts, components}` for composing child charts and components.\r\n\r\n    @example\r\n    ```js\r\n    // get\r\n    chart.options();\r\n\r\n    // set (static)\r\n    chart.options({\r\n      charts: {},\r\n      components: {}\r\n    });\r\n\r\n    // set (dynamic, takes data and returns options)\r\n    chart.options(function(data) {\r\n      // process data...\r\n\r\n      return {\r\n        charts: {},\r\n        components: {}\r\n      };\r\n    });\r\n\r\n    // Set directly from d3.chart creation\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n    ```\r\n    @property options\r\n    @type Function|Object\r\n  */\r\n  options: property('options', {\r\n    default_value: function() {},\r\n    type: 'Function',\r\n    set: function(options) {\r\n      // If options is plain object,\r\n      // return from generic options function\r\n      if (!isFunction(options)) {\r\n        return {\r\n          override: function() {\r\n            return options;\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Store raw data for container before it has been transformed\r\n  rawData: property('rawData'),\r\n\r\n  /**\r\n    Margins between edge of container and components/chart\r\n\r\n    @example\r\n    ```js\r\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n    ```\r\n    @property margins\r\n    @type Object {top, right, bottom, left}\r\n    @default {top: 10, right: 10, bottom: 10, left: 10}\r\n  */\r\n  margins: property('margins', {\r\n    default_value: {top: 10, right: 10, bottom: 10, left: 10},\r\n    set: function(values) {\r\n      return {\r\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    }\r\n  }),\r\n\r\n  // Chart position\r\n  chartPosition: property('chartPosition', {\r\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n    set: function(values) {\r\n      return {\r\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    },\r\n    get: function(values) {\r\n      values.width = this._width() - values.right - values.left;\r\n      values.height = this._height() - values.bottom - values.top;\r\n\r\n      return values;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set overall width of chart\r\n\r\n    @property width\r\n    @type Number\r\n  */\r\n  width: property('width', {\r\n    default_value: null\r\n  }),\r\n\r\n  /**\r\n    Get/set overall height of chart\r\n\r\n    @property height\r\n    @type Number\r\n  */\r\n  height: property('height', {\r\n    default_value: null\r\n  }),\r\n\r\n  _width: function() {\r\n    var width = this.width();\r\n    return width != null ? width : Base.prototype.width.call(this);\r\n  },\r\n  _height: function() {\r\n    var height = this.height();\r\n    return height != null ? height : Base.prototype.height.call(this);\r\n  },\r\n\r\n  /**\r\n    Enable responsive container + viewBox so that chart scales to fill width\r\n    (only works if selection is not an svg)\r\n\r\n    @property responsive\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  responsive: property('responsive', {\r\n    default_value: true\r\n  }),\r\n\r\n  // Set svg viewBox attribute\r\n  viewBox: property('viewBox', {\r\n    default_value: function() {\r\n      if (this.responsive() && this.width() && this.height())\r\n        return '0 0 ' + this.width() + ' ' + this.height();\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set svg preserveAspectRatio attribute\r\n  preserveAspectRatio: property('preserveAspectRatio', {\r\n    default_value: function() {\r\n      if (this.responsive())\r\n        return 'xMidYMid meet';\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set container style\r\n  containerStyle: property('containerStyle', {\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        var aspect_ratio = 1;\r\n        if (this.width() && this.height())\r\n          aspect_ratio = this.height() / this.width();\r\n\r\n        return style({\r\n          width: '100%',\r\n          height: 0,\r\n          'padding-top': (aspect_ratio * 100) + '%',\r\n          position: 'relative'\r\n        });\r\n      }\r\n      else {\r\n        return style({position: 'relative'});\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Set base style\r\n  baseStyle: property('baseStyle', {\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        return style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0\r\n        });\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Set charts from options or get chart instances.\r\n    Each chart should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n    @example\r\n    ```js\r\n    chart.charts([\r\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n    ]);\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property('charts', {\r\n    set: function(chart_options, charts) {\r\n      // Store actual charts rather than options\r\n      return {\r\n        override: this._attachItems(chart_options, charts, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Set components from options or get components instances.\r\n    Each component should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n    @example\r\n    ```js\r\n    chart.components([\r\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n      {id: 'title', type: 'Title'} // options to pass to Title component\r\n    ])\r\n    ```\r\n    @property components\r\n    @type Array\r\n  */\r\n  components: property('components', {\r\n    set: function(component_options, components) {\r\n      // Store actual components rather than options\r\n      return {\r\n        override: this._attachItems(component_options, components, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Draw chart with given data\r\n\r\n    @example\r\n    ```js\r\n    var chart = d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n\r\n    chart.draw([1, 2, 3]);\r\n\r\n    chart.draw({values: [1, 2, 3]});\r\n\r\n    chart.draw([\r\n      {values: [1, 2, 3]},\r\n      {values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method draw\r\n    @param {Any} data\r\n  */\r\n  draw: function(data) {\r\n    var config = this._prepareConfig(this.options(), data);\r\n\r\n    // Set charts and components from config\r\n    if (config.charts)\r\n      this.charts(config.charts);\r\n    if (config.components)\r\n      this.components(config.components);\r\n\r\n    // Add config data\r\n    data = {\r\n      original: data,\r\n      config: config.data\r\n    };\r\n    this.data(data);\r\n\r\n    this._updateDimensions();\r\n\r\n    // Layout components\r\n    this.layout(data);\r\n\r\n    // Full draw now that everything has been laid out\r\n    d3.chart().prototype.draw.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Redraw chart with current data\r\n\r\n    @method redraw\r\n  */\r\n  redraw: function() {\r\n    if (this.rawData())\r\n      this.draw(this.rawData().original);\r\n  },\r\n\r\n  demux: function(name, data) {\r\n    if (!data || !data.config || !data.original)\r\n      return data;\r\n\r\n    if (findById(this.charts(), name) && data.config.charts[name])\r\n      return data.config.charts[name];\r\n    else if (findById(this.components(), name) && data.config.components[name])\r\n      return data.config.components[name];\r\n    else\r\n      return data.original;\r\n  },\r\n\r\n  // Create chart layer (for laying out charts)\r\n  createChartLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create component layer\r\n  createComponentLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-component-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create overlay layer\r\n  createOverlayLayer: function() {\r\n    if (!this.container)\r\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n    return this.container.append('div')\r\n      .attr('class', 'chart-overlay-layer');\r\n  },\r\n\r\n  // Layout components and charts for given data\r\n  layout: function(data) {\r\n    // 1. Place chart layers\r\n    this._positionChartLayers();\r\n\r\n    // 2. Extract layout from components\r\n    var layout = this._extractLayout(data);\r\n\r\n    // 3. Set chart position from layout\r\n    var chart_position = extend({}, this.margins());\r\n    objectEach(layout, function(parts, key) {\r\n      parts.forEach(function(part) {\r\n        chart_position[key] += part.offset || 0;\r\n      });\r\n    });\r\n    this.chartPosition(chart_position);\r\n\r\n    // 4. Position layers with layout\r\n    this.positionLayers(layout);\r\n  },\r\n\r\n  attachHoverListeners: function() {\r\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n    // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n    var trigger = this.trigger.bind(this);\r\n    var chartPosition = this.chartPosition.bind(this);\r\n    var container = this.container || this.base;\r\n    var base = this.base.node();\r\n    var chart_position, bounds, was_inside;\r\n\r\n    container.on('mouseenter', function() {\r\n      // Calculate chart position and bounds on enter and cache during move\r\n      chart_position = chartPosition();\r\n      bounds = extend({}, base.getBoundingClientRect());\r\n      bounds.top += window.scrollY;\r\n      bounds.bottom += window.scrollY;\r\n\r\n      was_inside = inside(bounds);\r\n      if (was_inside)\r\n        enter();\r\n    });\r\n    container.on('mousemove', function() {\r\n      var is_inside = inside(bounds);\r\n      if (was_inside && is_inside)\r\n        move();\r\n      else if (was_inside)\r\n        leave();\r\n      else if (is_inside)\r\n        enter();\r\n\r\n      was_inside = is_inside;\r\n    });\r\n    container.on('mouseleave', function() {\r\n      if (was_inside) {\r\n        was_inside = false;\r\n        leave();\r\n      }\r\n    });\r\n\r\n    function inside() {\r\n      var mouse = d3.mouse(document.documentElement);\r\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n    }\r\n    function enter() {\r\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n    }\r\n    function move() {\r\n      trigger('mousemove', translateToXY(d3.mouse(base)));\r\n    }\r\n    function leave() {\r\n      trigger('mouseleave');\r\n    }\r\n\r\n    function translateToXY(coordinates) {\r\n      var x = coordinates[0];\r\n      var y = coordinates[1];\r\n      var chart_x = x - chart_position.left;\r\n      var chart_y = y - chart_position.top;\r\n\r\n      // Set at chart bounds if outside of chart\r\n      if (x > (chart_position.left + chart_position.width))\r\n        chart_x = chart_position.width;\r\n      else if (x < chart_position.left)\r\n        chart_x = 0;\r\n\r\n      if (y > (chart_position.top + chart_position.height))\r\n        chart_y = chart_position.height;\r\n      else if (y < chart_position.top)\r\n        chart_y = 0;\r\n\r\n      return {\r\n        container: {x: x, y: y},\r\n        chart: {x: chart_x, y: chart_y}\r\n      };\r\n    }\r\n  },\r\n\r\n  // Attach chart/component child item with id\r\n  attach: function(id, item) {\r\n    item.id = id;\r\n    item.base.attr('data-id', id);\r\n    item.container = this;\r\n\r\n    Base.prototype.attach.call(this, id, item);\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('attach');\r\n  },\r\n\r\n  // Detach chart/component child item by id\r\n  detach: function(id, item) {\r\n    item.base.remove();\r\n\r\n    delete this._attached[id];\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('detach');\r\n  },\r\n\r\n  // Position chart and component layers\r\n  positionLayers: function(layout) {\r\n    this._positionChartLayers();\r\n    this._positionComponents(layout);\r\n    this._positionByZIndex();\r\n  },\r\n\r\n  //\r\n  // Internal\r\n  //\r\n\r\n  _updateDimensions: function() {\r\n    // Set container and svg dimensions\r\n    // (if original selection is svg, no container and skip responsiveness)\r\n    if (this.container) {\r\n      this.container\r\n        .attr('style', this.containerStyle());\r\n    }\r\n\r\n    this.base\r\n      .attr('viewBox', this.viewBox())\r\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n      .attr('style', this.baseStyle())\r\n      .attr('width', this.responsive() ? null : this.width())\r\n      .attr('height', this.responsive() ? null : this.height());\r\n  },\r\n\r\n  _attachItems: function(items, container, context) {\r\n    items = items || [];\r\n    container = container || [];\r\n\r\n    // Remove charts that are no longer needed\r\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n    remove_ids.forEach(function(remove_id) {\r\n      context.detach(remove_id, findById(container, remove_id));\r\n    });\r\n\r\n    // Create or update charts\r\n    return items.map(function(options) {\r\n      // TODO May not have id, might need to auto-generate\r\n      // (might be during another step)\r\n      var id = options.id;\r\n      var item = findById(container, id);\r\n\r\n      if (options instanceof d3.chart()) {\r\n        // If chart instance, replace with instance\r\n        if (item)\r\n          context.detach(id, item);\r\n\r\n        context.attach(id, options);\r\n        return options;\r\n      }\r\n      else {\r\n        if (item && item.type != options.type) {\r\n          // If chart type has changed, detach and re-create\r\n          context.detach(id, item);\r\n          item = undefined;\r\n        }\r\n\r\n        if (!item) {\r\n          var Item = d3.chart(options.type);\r\n\r\n          if (!Item)\r\n            throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n          var layer_options = {z_index: Item.z_index || 0};\r\n          var createLayer = {\r\n            'chart': 'createChartLayer',\r\n            'component': 'createComponentLayer',\r\n            'overlay': 'createOverlayLayer'\r\n          }[Item.layer_type];\r\n\r\n          if (!createLayer)\r\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n          var base = context[createLayer](layer_options);\r\n\r\n          item = new Item(base, options);\r\n          item.type = options.type;\r\n\r\n          context.attach(id, item);\r\n        }\r\n        else {\r\n          item.options(options);\r\n        }\r\n\r\n        return item;\r\n      }\r\n    });\r\n  },\r\n\r\n  _prepareConfig: function(options, data) {\r\n    // Load config from options fn\r\n    var config = options(data);\r\n    var normalized = {\r\n      data: {\r\n        charts: {},\r\n        components: {}\r\n      }\r\n    };\r\n\r\n    if (!config) {\r\n      return normalized;\r\n    }\r\n    else {\r\n      normalized.charts = [];\r\n      normalized.components = [];\r\n    }\r\n\r\n    if (Array.isArray(config)) {\r\n      // TEMP Idenfify charts from layered,\r\n      // eventually no distinction between charts and components\r\n      var found = {\r\n        row: false,\r\n        charts: false\r\n      };\r\n\r\n      config.forEach(function(row, row_index) {\r\n        // Components are added from inside-out\r\n        // so for position: top, position: left, use unshift\r\n\r\n        if (Array.isArray(row)) {\r\n          found.row = true;\r\n          var row_components = [];\r\n\r\n          row.forEach(function(item, col_index) {\r\n            if (item._layered) {\r\n              found.charts = true;\r\n              normalized.charts = item.items.map(function(chart, chart_index) {\r\n                return defaults({}, chart, {id: 'chart-' + (chart_index + 1)});\r\n              });\r\n            }\r\n            else if (!found.charts) {\r\n              row_components.unshift(prepareComponent(item, 'left', row_index, col_index));\r\n            }\r\n            else {\r\n              row_components.push(prepareComponent(item, 'right', row_index, col_index));\r\n            }\r\n          });\r\n\r\n          normalized.components = normalized.components.concat(row_components);\r\n        }\r\n        else {\r\n          if (row._layered) {\r\n            found.row = found.charts = true;\r\n            normalized.charts = row.items.slice();\r\n          }\r\n          else {\r\n            if (!found.row)\r\n              normalized.components.unshift(prepareComponent(row, 'top', row_index, 0));\r\n            else\r\n              normalized.components.push(prepareComponent(row, 'bottom', row_index, 0));\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      // DEPRECATED\r\n      objectEach(config.charts, function(chart_options, id) {\r\n        normalized.charts.push(extend({id: id}, chart_options));\r\n      });\r\n\r\n      objectEach(config.components, function(component_options, id) {\r\n        normalized.components.push(extend({id: id}, component_options));\r\n      });\r\n    }\r\n\r\n    normalized.charts.forEach(extractData('charts'));\r\n    normalized.components.forEach(extractData('components'));\r\n\r\n    return normalized;\r\n\r\n    function prepareComponent(component, position, row_index, col_index) {\r\n      if (component && isFunction(component.position))\r\n        component.position(position);\r\n      else\r\n        component = extend({position: position}, component);\r\n\r\n      return defaults(component, {id: 'component-' + (row_index + 1) + '-' + (col_index + 1)});\r\n    }\r\n\r\n    function extractData(type) {\r\n      return function(item) {\r\n        if (item.data && !isFunction(item.data)) {\r\n          normalized.data[type][item.id] = item.data;\r\n          delete item.data;\r\n        }\r\n      };\r\n    }\r\n  },\r\n\r\n  _positionChartLayers: function() {\r\n    var position = this.chartPosition();\r\n    this.base.selectAll('.chart-layer')\r\n      .attr('transform', translate(position.left, position.top))\r\n      .attr('width', position.width)\r\n      .attr('height', position.height);\r\n  },\r\n\r\n  _positionComponents: function(layout) {\r\n    var chart = this.chartPosition();\r\n    var width = this._width();\r\n    var height = this._height();\r\n\r\n    layout.top.reduce(function(previous, part) {\r\n      var y = previous - part.offset;\r\n      setLayout(part.component, chart.left, y, {width: chart.width});\r\n\r\n      return y;\r\n    }, chart.top);\r\n\r\n    layout.right.reduce(function(previous, part, index, parts) {\r\n      var previousPart = parts[index - 1] || {offset: 0};\r\n      var x = previous + previousPart.offset;\r\n      setLayout(part.component, x, chart.top, {height: chart.height});\r\n\r\n      return x;\r\n    }, width - chart.right);\r\n\r\n    layout.bottom.reduce(function(previous, part, index, parts) {\r\n      var previousPart = parts[index - 1] || {offset: 0};\r\n      var y = previous + previousPart.offset;\r\n      setLayout(part.component, chart.left, y, {width: chart.width});\r\n\r\n      return y;\r\n    }, height - chart.bottom);\r\n\r\n    layout.left.reduce(function(previous, part) {\r\n      var x = previous - part.offset;\r\n      setLayout(part.component, x, chart.top, {height: chart.height});\r\n\r\n      return x;\r\n    }, chart.left);\r\n\r\n    function setLayout(component, x, y, options) {\r\n      if (component && isFunction(component.setLayout))\r\n        component.setLayout(x, y, options);\r\n    }\r\n  },\r\n\r\n  _positionByZIndex: function() {\r\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n    // Sort by z-index\r\n    function setZIndex(layer) {\r\n      return {\r\n        layer: layer,\r\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n      };\r\n    }\r\n    function sortZIndex(a, b) {\r\n      if (a.zIndex < b.zIndex)\r\n        return -1;\r\n      else if (a.zIndex > b.zIndex)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n    function getLayer(wrapped) {\r\n      return wrapped.layer;\r\n    }\r\n\r\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n    // Move layers to z-index order\r\n    layers.forEach(function(layer) {\r\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n        layer.parentNode.appendChild(layer);\r\n    });\r\n  },\r\n\r\n  _extractLayout: function(data) {\r\n    var overall_layout = {top: [], right: [], bottom: [], left: []};\r\n    this.components().forEach(function(component) {\r\n      if (component.skip_layout || !component.getLayout)\r\n        return;\r\n\r\n      var layout = component.getLayout(this.demux(component.id, data));\r\n      var position = layout && layout.position;\r\n\r\n      if (!contains(['top', 'right', 'bottom', 'left'], position))\r\n        return;\r\n\r\n      overall_layout[position].push({\r\n        offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\r\n        component: component\r\n      });\r\n    }, this);\r\n\r\n    return overall_layout;\r\n  }\r\n});\r\n\r\n// TODO Find better place for this\r\nexport function layered(items) {\r\n  if (!Array.isArray(items))\r\n    items = Array.prototype.slice.call(arguments);\r\n\r\n  return {_layered: true, items: items};\r\n}\r\n\r\nfunction findById(items, id) {\r\n  return find(items, function(item) {\r\n    return item.id == id;\r\n  });\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  getParentData,\r\n  style,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling series data\r\n\r\n  @class Series\r\n  @namespace mixins\r\n*/\r\nvar Series = {\r\n  /**\r\n    Get key for given series data\r\n\r\n    @method seriesKey\r\n    @param {Any} d Series object with `key`\r\n    @return {Any}\r\n  */\r\n  seriesKey: di(function(chart, d) {\r\n    return d.key;\r\n  }),\r\n\r\n  /**\r\n    Get values for given series data\r\n\r\n    @method seriesValues\r\n    @param {Any} d Series object with `values` array\r\n    @return {Array}\r\n  */\r\n  seriesValues: di(function(chart, d, i) {\r\n    // Store seriesIndex on series\r\n    d.seriesIndex = i;\r\n    return d.values;\r\n  }),\r\n\r\n  /**\r\n    Get class for given series data\r\n\r\n    @method seriesClass\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {String}\r\n  */\r\n  seriesClass: di(function(chart, d, i) {\r\n    return 'chart-series chart-index-' + i + (d['class'] ? ' ' + d['class'] : '');\r\n  }),\r\n\r\n  /**\r\n    Get index for given data-point of series\r\n\r\n    @method seriesIndex\r\n    @param {Any} d\r\n    @param {Number} i\r\n  */\r\n  seriesIndex: di(function(chart, d, i) {\r\n    var series = chart.seriesData.call(this, d, i);\r\n    return series && series.seriesIndex || 0;\r\n  }),\r\n\r\n  /**\r\n    Get parent series data for given data-point\r\n\r\n    @method seriesData\r\n    @return {Any}\r\n  */\r\n  seriesData: di(function() {\r\n    return getParentData(this);\r\n  }),\r\n\r\n  /**\r\n    (di) Get style given series data or data-point\r\n    (Uses \"style\" object on `d`, if defined)\r\n\r\n    @method itemStyle\r\n    @param {Any} d\r\n    @param {Number} [i]\r\n    @param {Number} [j]\r\n    @return {String}\r\n  */\r\n  itemStyle: di(function(chart, d) {\r\n    return style(d.style) || null;\r\n  }),\r\n\r\n  /**\r\n    Get series count for chart\r\n\r\n    @method seriesCount\r\n    @return {Number}\r\n  */\r\n  seriesCount: function() {\r\n    var data = this.data();\r\n    return (data && isSeriesData(data)) ? data.length : 1;\r\n  },\r\n\r\n  /**\r\n    Extension of layer() that handles data-binding and layering for series data.\r\n\r\n    - Updates `dataBind` method to access underlying series values\r\n    - Creates group layer for each series in chart\r\n    - Should be used just like layer()\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(mixins.Series, {\r\n      initialize: function() {\r\n        this.seriesLayer('Circles', this.base, {\r\n          // Create group for each series on this.base\r\n          // and calls the following for each series item\r\n          // (entire layer is called twice: series-1 and series-2)\r\n\r\n          dataBind: function(data) {\r\n            // 1. data = [1, 2, 3]\r\n            // 2. data = [4, 5, 6]\r\n          },\r\n          insert: function() {\r\n            // Same as chart.layer\r\n            // (where \"this\" is series group layer)\r\n          },\r\n          events: {\r\n            // Same as chart.layer\r\n          }\r\n        });\r\n      }\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.draw([\r\n      {key: 'series-1', values: [1, 2, 3]},\r\n      {key: 'series-2', values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method seriesLayer\r\n    @param {String} name\r\n    @param {Selection} selection\r\n    @param {Object} options (`dataBind` and `insert` required)\r\n    @return {d3.chart.layer}\r\n  */\r\n  seriesLayer: function(name, selection, options) {\r\n    if (options && options.dataBind) {\r\n      var dataBind = options.dataBind;\r\n\r\n      options.dataBind = function(data) {\r\n        var chart = this.chart();\r\n        var series = this.selectAll('g')\r\n          .data(data, chart.seriesKey);\r\n\r\n        series.enter()\r\n          .append('g');\r\n\r\n        series\r\n          .attr('class', chart.seriesClass)\r\n          .attr('style', chart.itemStyle);\r\n\r\n        series.exit()\r\n          .remove();\r\n\r\n        series.chart = function() { return chart; };\r\n\r\n        return dataBind.call(series, chart.seriesValues);\r\n      };\r\n    }\r\n\r\n    return d3.chart().prototype.layer.call(this, name, selection, options);\r\n  },\r\n\r\n  // Ensure data is in series form\r\n  transform: function(data) {\r\n    return !isSeriesData(data) ? [{values: data}] : data;\r\n  }\r\n};\r\n\r\nexport default Series;\r\n","import {\r\n  property,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\nimport {\r\n  compact,\r\n  pluck,\r\n  objectEach,\r\n  contains\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common hover behavior that adds standard `onMouseEnter`, `onMouseMove`, and `onMouseLeave` handlers\r\n  and `getPoint` helper for adding helpful meta information to raw data point.\r\n\r\n  @class Hover\r\n  @namespace mixins\r\n*/\r\nvar Hover = {\r\n  initialize: function() {\r\n    this.on('attach', function() {\r\n      this.container.on('mouseenter', this.onMouseEnter.bind(this));\r\n      this.container.on('mousemove', this.onMouseMove.bind(this));\r\n      this.container.on('mouseleave', this.onMouseLeave.bind(this));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Get point information for given data-point\r\n\r\n    @method getPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n    @return {key, series, d, meta {chart, i, j, x, y}}\r\n  */\r\n  getPoint: di(function(chart, d, i, j) {\r\n    var key = chart.key && chart.key.call(this, d, i, j);\r\n    var series = chart.seriesData && chart.seriesData.call(this, d, i, j) || {};\r\n\r\n    return {\r\n      key: (series.key || j) + '.' + (key || i),\r\n      series: series,\r\n      d: d,\r\n      meta: {\r\n        chart: chart,\r\n        i: i,\r\n        j: j,\r\n        x: chart.x && chart.x.call(this, d, i, j),\r\n        y: chart.y && chart.y.call(this, d, i, j)\r\n      }\r\n    };\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseenter:point when mouse enters data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseEnterPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseEnterPoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseenter:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseleave:point when mouse leaves data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseleavePoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseLeavePoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseleave:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    (Override) Called when mouse enters container\r\n\r\n    @method onMouseEnter\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseEnter: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse moves within container\r\n\r\n    @method onMouseMove\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseMove: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse leaves container\r\n\r\n    @method onMouseLeave\r\n  */\r\n  onMouseLeave: function() {}\r\n};\r\n\r\n/**\r\n  Mixin for automatically triggering \"mouseenter:point\"/\"mouseleave:point\" for chart data points that are within given `hoverTolerance`.\r\n\r\n  @class HoverPoints\r\n  @namespace mixins\r\n*/\r\nvar HoverPoints = {\r\n  initialize: function() {\r\n    var points, tolerance, active;\r\n\r\n    this.on('draw', function() {\r\n      // Clear cache on draw\r\n      points = null;\r\n    });\r\n\r\n    this.on('attach', function() {\r\n      var update = function update(position) {\r\n        var closest = [];\r\n        if (position)\r\n          closest = getClosestPoints(points, position.chart, tolerance);\r\n\r\n        updateActive(active, closest, this.container);\r\n        active = closest;\r\n      }.bind(this);\r\n\r\n      this.container.on('mouseenter', function(position) {\r\n        if (!points)\r\n          points = getPoints(this, this.data());\r\n\r\n        tolerance = this.hoverTolerance();\r\n        update(position);\r\n      }.bind(this));\r\n\r\n      this.container.on('mousemove', update);\r\n      this.container.on('mouseleave', update);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Hover tolerance (in px) for calculating close points\r\n\r\n    @property hoverTolerance\r\n    @type Number\r\n    @default Infinity\r\n  */\r\n  hoverTolerance: property('hoverTolerance', {\r\n    default_value: Infinity\r\n  })\r\n};\r\n\r\nfunction getPoints(chart, data) {\r\n  if (data) {\r\n    if (!isSeriesData(data))\r\n      data = [{values: data}];\r\n\r\n    return data.map(function(series, j) {\r\n      return series.values.map(function(d, i) {\r\n        return chart.getPoint.call({_parent_data: series}, d, i, j);\r\n      }).sort(function(a, b) {\r\n        // Sort by x\r\n        return a.meta.x - b.meta.x;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction getClosestPoints(points, position, tolerance) {\r\n  return compact(points.map(function(series) {\r\n    function setDistance(point) {\r\n      point.distance = getDistance(point.meta, position);\r\n      return point;\r\n    }\r\n    function closePoints(point) {\r\n      return point.distance < tolerance;\r\n    }\r\n    function sortPoints(a, b) {\r\n      if (a.distance < b.distance)\r\n        return -1;\r\n      else if (a.distance > b.distance)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n\r\n    var by_distance = series.map(setDistance).filter(closePoints).sort(sortPoints);\r\n\r\n    return by_distance[0];\r\n  }));\r\n\r\n  function getDistance(a, b) {\r\n    return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n  }\r\n}\r\n\r\nfunction updateActive(active, closest, container) {\r\n  var active_keys = pluck(active, 'key');\r\n  var closest_keys = pluck(closest, 'key');\r\n\r\n  objectEach(closest, function(point) {\r\n    if (contains(active_keys, point.key))\r\n      container.trigger('mousemove:point', point);\r\n    else\r\n      container.trigger('mouseenter:point', point);\r\n  });\r\n  objectEach(active, function(point) {\r\n    if (!contains(closest_keys, point.key))\r\n      container.trigger('mouseleave:point', point);\r\n  });\r\n}\r\n\r\nexport {\r\n  Hover as default,\r\n  HoverPoints\r\n};\r\n","import {\r\n  property\r\n} from '../helpers';\r\nimport {\r\n  isUndefined\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common transition behaviors\r\n\r\n  @class Transition\r\n  @namespace mixins\r\n*/\r\nvar Transition = {\r\n  /**\r\n    Delay start of transition by specified milliseconds.\r\n\r\n    @property delay\r\n    @type Number|Function\r\n    @default d3 default: 0\r\n  */\r\n  delay: property('delay', {type: 'Function'}),\r\n\r\n  /**\r\n    Transition duration in milliseconds.\r\n\r\n    @property duration\r\n    @type Number|Function\r\n    @default d3 default: 250ms\r\n  */\r\n  duration: property('duration', {type: 'Function'}),\r\n\r\n  /**\r\n    Transition ease function\r\n\r\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n    - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n    @property ease\r\n    @type String|Function\r\n    @default d3 default: 'cubic-in-out'\r\n  */\r\n  ease: property('ease', {type: 'Function'}),\r\n\r\n  /**\r\n    Setup delay, duration, and ease for transition\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Transition, {\r\n      initialize: function() {\r\n        this.layer('circles', this.base, {\r\n          // ...\r\n          events: {\r\n            'merge:transition': function() {\r\n              // Set delay, duration, and ease from properties\r\n              this.chart().setupTransition(this);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }));\r\n    ```\r\n    @method setupTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  setupTransition: function setupTransition(selection) {\r\n    var delay = this.delay();\r\n    var duration = this.duration();\r\n    var ease = this.ease();\r\n\r\n    if (!isUndefined(delay))\r\n      selection.delay(delay);\r\n    if (!isUndefined(duration))\r\n      selection.duration(duration);\r\n    if (!isUndefined(ease))\r\n      selection.ease(ease);\r\n  }\r\n};\r\n\r\nexport default Transition;\r\n","/**\r\n  Mixin to create standard layer to make extending charts straightforward.\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n    initialize: function() {\r\n      this.standardLayer('main', this.base.append('g'))\r\n      // dataBind, insert, events are defined on prototype\r\n    },\r\n\r\n    onDataBind: function(selection, data) {\r\n      // ...\r\n    },\r\n    onInsert: function(selection) {\r\n      // ...\r\n    },\r\n    onEnter: function(selection) {\r\n      // ...\r\n    },\r\n    onUpdateTransition: function(selection) {\r\n      // ...\r\n    },\r\n    // all d3.chart events are available: onMerge, onExit, ...\r\n  }));\r\n  ```\r\n  @class StandardLayer\r\n  @namespace mixins\r\n*/\r\nvar StandardLayer = {\r\n  /**\r\n    extension of `layer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardLayer('circles', this.base.append('g'));\r\n      }\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" layer\r\n    }));\r\n    ```\r\n    @method standardLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardLayer: function standardLayer(name, selection) {\r\n    return createLayer(this, 'layer', name, selection);\r\n  },\r\n\r\n  /**\r\n    extension of `seriesLayer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardSeriesLayer('circles', this.base.append('g'));\r\n      },\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" seriesLayer\r\n    }));\r\n    ```\r\n    @method standardSeriesLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardSeriesLayer: function standardSeriesLayer(name, selection) {\r\n    return createLayer(this, 'series', name, selection);\r\n  },\r\n\r\n  /**\r\n    Called for standard layer's `dataBind`\r\n\r\n    @method onDataBind\r\n    @param {d3.selection} selection\r\n    @param {Any} data\r\n    @return {d3.selection}\r\n  */\r\n  onDataBind: function onDataBind(/* selection, data */) {},\r\n\r\n  /**\r\n    Called for standard layer's `insert`\r\n\r\n    @method onInsert\r\n    @param {d3.selection} selection\r\n    @return {d3.selection}\r\n  */\r\n  onInsert: function onInsert(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter']`\r\n\r\n    @method onEnter\r\n    @param {d3.selection}\r\n  */\r\n  onEnter: function onEnter(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter:transition']`\r\n\r\n    @method onEnterTransition\r\n    @param {d3.selection}\r\n  */\r\n  // onEnterTransition: function onEnterTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdate\r\n    @param {d3.selection}\r\n  */\r\n  onUpdate: function onUpdate(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdateTransition\r\n    @param {d3.selection}\r\n  */\r\n  // onUpdateTransition: function onUpdateTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge']`\r\n\r\n    @method onMerge\r\n    @param {d3.selection}\r\n  */\r\n  onMerge: function onMerge(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge:transition']`\r\n\r\n    @method onMergeTransition\r\n    @param {d3.selection}\r\n  */\r\n  // onMergeTransition: function onMergeTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['exit']`\r\n\r\n    @method onExit\r\n    @param {d3.selection}\r\n  */\r\n  onExit: function onExit(/* selection */) {}\r\n\r\n  /**\r\n    Call for standard layer's `events['exit:transition']`\r\n\r\n    @method onExitTransition\r\n    @param {d3.selection}\r\n  */\r\n  // onExitTransition: function onExitTransition(selection) {},\r\n};\r\n\r\nfunction createLayer(chart, type, name, selection) {\r\n  var layer = {\r\n    layer: 'layer',\r\n    series: 'seriesLayer'\r\n  }[type];\r\n\r\n  if (layer && chart[layer]) {\r\n    var events = {};\r\n    [\r\n      'enter',\r\n      'enter:transition',\r\n      'update',\r\n      'update:transition',\r\n      'merge',\r\n      'merge:transition',\r\n      'exit',\r\n      'exit:transition'\r\n    ].forEach(function(event) {\r\n      var method = 'on' + event.split(':').map(function capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }).join('');\r\n\r\n      // Only create events if chart method exists as empty transition events can cause unforeseen issues\r\n      if (chart[method]) {\r\n        events[event] = function() {\r\n          this.chart()[method](this);\r\n        };\r\n      }\r\n    });\r\n\r\n    return chart[layer](name, selection, {\r\n      dataBind: function(data) {\r\n        return this.chart().onDataBind(this, data);\r\n      },\r\n      insert: function() {\r\n        return this.chart().onInsert(this);\r\n      },\r\n      events: events\r\n    });\r\n  }\r\n}\r\n\r\nexport default StandardLayer;\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nexport default d3.chart('Base', {\r\n  initialize: function(options) {\r\n    // Bind all di-functions to this chart\r\n    bindAllDi(this);\r\n\r\n    if (options)\r\n      this.options(options);\r\n  },\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property('data'),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property('a'),\r\n      b: property('b', {\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property('options', {\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  },\r\n\r\n  // Store fully-transformed data for reference\r\n  // (Base is last transform to be called, so stored data has been fully transformed)\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    this.data(data);\r\n    return data;\r\n  },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    this.trigger('before:draw', data);\r\n    d3.chart().prototype.draw.apply(this, arguments);\r\n    this.trigger('draw', data);\r\n  }\r\n});\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property('centered', {\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Chart', {}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n","import {\r\n  contains,\r\n  defaults\r\n} from './utils';\r\nimport {\r\n  property,\r\n  dimensions,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: false` and the static `layer_type: 'Chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Component', {\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property('position', {\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property('width', {\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property('height', {\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: defaults(values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    },\r\n    default_value: {top: 0, right: 0, bottom: 0, left: 0}\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    this.base.attr('transform', translate(x + margins.left, y + margins.top));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nexport default Component.extend('Overlay', {\r\n  initialize: function() {\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property('x', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property('y', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property('hidden', {\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property('style', {\r\n    default_value: function() {\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        transform: translate(this.x() + 'px', this.y() + 'px')\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n","import {\r\n  extend,\r\n  isUndefined,\r\n  isObject,\r\n  valueOrDefault\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  isSeriesData,\r\n  createScale,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling XY data\r\n\r\n  @class XY\r\n  @namespace mixins\r\n*/\r\nvar XY = {\r\n  initialize: function() {\r\n    // Set scale ranges once chart is ready to be rendered\r\n    this.on('before:draw', this.setScales.bind(this));\r\n  },\r\n\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    // Transform series data from values to x,y\r\n    if (isSeriesData(data)) {\r\n      data = data.map(function(series) {\r\n        return extend({}, series, {\r\n          values: series.values.map(normalizeData)\r\n        });\r\n      });\r\n    }\r\n    else if (Array.isArray(data)) {\r\n      data = data.map(normalizeData);\r\n    }\r\n\r\n    return data;\r\n\r\n    function normalizeData(point, index) {\r\n      if (!isObject(point))\r\n        point = {x: index, y: point};\r\n      else if (!Array.isArray(point) && isUndefined(point.x))\r\n        point.x = index;\r\n\r\n      return point;\r\n    }\r\n  },\r\n\r\n  /**\r\n    Get/set x-scale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  xScale: property('xScale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setXScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultXScale();\r\n        this.setXScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set yscale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  yScale: property('yScale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setYScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultYScale();\r\n        this.setYScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Key on data object for x-value\r\n\r\n    @property xKey\r\n    @type String\r\n    @default 'x'\r\n  */\r\n  xKey: property('xKey', {\r\n    default_value: 'x'\r\n  }),\r\n\r\n  /**\r\n    Key on data object for y-value\r\n\r\n    @property yKey\r\n    @type String\r\n    @default 'y'\r\n  */\r\n  yKey: property('yKey', {\r\n    default_value: 'y'\r\n  }),\r\n\r\n  /**\r\n    Get scaled x-value for given data-point\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y-value for given data-point\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get key for data-point. Looks for \"key\" on `d` first, otherwise uses x-value.\r\n\r\n    @method key\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Any}\r\n  */\r\n  key: di(function(chart, d, i) {\r\n    return valueOrDefault(d.key, chart.xValue.call(this, d, i));\r\n  }),\r\n\r\n  /**\r\n    Get scaled `x = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled `y = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get x-value for data-point. Checks for `xKey()` on `d` first, otherwise uses `d[0]`.\r\n\r\n    @example\r\n    ```js\r\n    xValue({x: 10, y: 20}); // -> 10\r\n    xValue([10, 20]); // -> 10\r\n    ```\r\n    @method xValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  xValue: di(function(chart, d) {\r\n    var key = chart.xKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[0];\r\n  }),\r\n\r\n  /**\r\n    Get y-value for data-point. Checks for `yKey()` on `d` first, otherwise uses `d[1]`.\r\n\r\n    @example\r\n    ```js\r\n    yValue({x: 10, y: 20}); // -> 20\r\n    yValue([10, 20]); // -> 20\r\n    ```\r\n    @method yValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  yValue: di(function(chart, d) {\r\n    var key = chart.yKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[1];\r\n  }),\r\n\r\n  /**\r\n    Set x- and y-scale ranges (using `setXScaleRange` and `setYScaleRange`)\r\n\r\n    @method setScales\r\n  */\r\n  setScales: function() {\r\n    this.setXScaleRange(this.xScale());\r\n    this.setYScaleRange(this.yScale());\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([0, this.width()]);\r\n  },\r\n\r\n  /**\r\n    Set range(height, 0) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Get default x-scale: `{data: this.data(), key: 'x'}`\r\n\r\n    @method getDefaultXScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'x'\r\n    });\r\n  },\r\n\r\n  /**\r\n    Get default y-scale: `{data: this.data(), key: 'y'}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultYScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'y'\r\n    });\r\n  }\r\n};\r\n\r\nexport default XY;\r\n","import { createScale } from '../helpers';\r\nimport { extend } from '../utils';\r\nimport XY from './xy';\r\n\r\n/**\r\n  Mixin for charts of centered key,value data (x: index, y: value, key)\r\n\r\n  @class XYValues\r\n  @namespace mixins\r\n  @extends XY\r\n*/\r\nvar XYValues = extend({}, XY, {\r\n  /**\r\n    Determine width of data-point when displayed adjacent\r\n\r\n    @method adjacentWidth\r\n    @return {Number}\r\n  */\r\n  adjacentWidth: function() {\r\n    var series_count = this.seriesCount ? this.seriesCount() : 1;\r\n    return this.layeredWidth() / series_count;\r\n  },\r\n\r\n  /**\r\n    Determine layered width (width of group for adjacent)\r\n\r\n    @method layeredWidth\r\n    @return {Number}\r\n  */\r\n  layeredWidth: function() {\r\n    var range_band = this.xScale() && this.xScale().rangeBand && this.xScale().rangeBand();\r\n    var width = isFinite(range_band) ? range_band : 0;\r\n\r\n    return width;\r\n  },\r\n\r\n  /**\r\n    Determine item width based on series display type (adjacent or layered)\r\n\r\n    @method itemWidth\r\n    @return {Number}\r\n  */\r\n  itemWidth: function() {\r\n    var scale = this.xScale();\r\n    return scale && scale.width ? scale.width() : this.layeredWidth();\r\n  },\r\n\r\n  // Override default x-scale to use ordinal type\r\n  /**\r\n    Override default x-scale to use ordinal type: `{type: 'ordinal', data: this.data(), key: 'y', centered: true}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      type: 'ordinal',\r\n      data: this.data(),\r\n      key: 'x',\r\n      centered: true\r\n    });\r\n  }\r\n});\r\n\r\nexport default XYValues;\r\n","import d3 from 'd3';\r\nimport { property } from '../helpers';\r\nimport {\r\n  extend,\r\n  defaults,\r\n  isBoolean\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling labels in charts\r\n\r\n  @class Labels\r\n  @namespace mixins\r\n*/\r\nvar Labels = {\r\n  /**\r\n    Call during chart initialization to add labels to chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      initialize: function() {\r\n        // this.layer()...\r\n\r\n        // Attach labels layer\r\n        this.attachLabels();\r\n      }\r\n    }));\r\n    ```\r\n    @method attachLabels\r\n  */\r\n  attachLabels: function() {\r\n    var options = this.labels();\r\n    options.parent = this;\r\n\r\n    var LabelsClass = d3.chart(options.type);\r\n    var base = this.base.append('g').attr('class', 'chart-labels');\r\n    var labels = this._labels = new LabelsClass(base, options);\r\n\r\n    // Proxy x and y to parent chart\r\n    this.proxyLabelMethods.forEach(function(method) {\r\n      labels[method] = this[method];\r\n    }, this);\r\n\r\n    this.on('draw', function(data) {\r\n      options = this.labels();\r\n      options.parent = this;\r\n\r\n      labels.options(options);\r\n\r\n      if (options.display !== false)\r\n        labels.draw(options.data || data);\r\n      else\r\n        labels.draw([]);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Options passed to labels chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      // ...\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.labels(true); // -> display labels with defaults\r\n    chart.labels(false); // -> hide labels\r\n    chart.labels({offset: 10}); // -> pass options to labels chart\r\n\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        return {\r\n          charts: {\r\n            custom: {labels: {offset: 10}}\r\n          }\r\n        };\r\n      });\r\n    ```\r\n    @property labels\r\n    @type Object\r\n  */\r\n  labels: property('labels', {\r\n    get: function(value) {\r\n      if (isBoolean(value))\r\n        value = {display: value};\r\n      else if (!value)\r\n        value = {display: false};\r\n\r\n      return defaults({}, value, {\r\n        type: 'Labels'\r\n      });\r\n    }\r\n  }),\r\n\r\n  // Array of methods to proxy on labels chart\r\n  proxyLabelMethods: []\r\n};\r\n\r\n/**\r\n  Mixin for handling labels in XY charts\r\n  (proxies `x` and `y` to properly place labels for XY charts)\r\n\r\n  @class LabelsXY\r\n  @namespace mixins\r\n  @extends Labels\r\n*/\r\nvar LabelsXY = extend({}, Labels, {\r\n  proxyLabelMethods: ['x', 'y']\r\n});\r\n\r\nexport {\r\n  Labels as default,\r\n  LabelsXY\r\n};\r\n","import Series from './series';\r\nimport XY from './xy';\r\nimport XYValues from './xy-values';\r\nimport XYInverted from './inverted-xy';\r\nimport Labels, { LabelsXY } from './labels';\r\nimport Hover, { HoverPoints } from './hover';\r\nimport Transition from './transition';\r\nimport StandardLayer from './standard-layer';\r\n\r\nvar mixins = {\r\n  Series: Series,\r\n  XY: XY,\r\n  XYValues: XYValues,\r\n  XYInverted: XYInverted,\r\n  Labels: Labels,\r\n  LabelsXY: LabelsXY,\r\n  Hover: Hover,\r\n  HoverPoints: HoverPoints,\r\n  Transition: Transition,\r\n  StandardLayer: StandardLayer,\r\n\r\n  // DEPRECATED: renamed to XYInverted\r\n  InvertedXY: XYInverted,\r\n  // DEPRECATED: renamed to LabelsXY\r\n  XYLabels: LabelsXY\r\n};\r\n\r\nexport {\r\n  mixins as default,\r\n  Series,\r\n  XY,\r\n  XYValues,\r\n  XYInverted,\r\n  Labels,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer\r\n};\r\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nimport mixins from './src/mixins';\r\n\r\nexport default {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered,\r\n\r\n  mixins: mixins\r\n};\r\n"],"sourceRoot":"/source/"}