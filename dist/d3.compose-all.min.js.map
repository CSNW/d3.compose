{"version":3,"sources":["d3.compose-all.min.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers/index.js","../C:/dev/d3.compose/src/layout.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/src/mixins/series.js","../C:/dev/d3.compose/src/mixins/hover.js","../C:/dev/d3.compose/src/mixins/transition.js","../C:/dev/d3.compose/src/mixins/standard-layer.js","../C:/dev/d3.compose/src/components/Text.js","../C:/dev/d3.compose/src/components/Title.js","../C:/dev/d3.compose/src/components/Axis.js","../C:/dev/d3.compose/src/components/AxisTitle.js","../C:/dev/d3.compose/src/components/Legend.js","../C:/dev/d3.compose/src/extensions/xy.js","../C:/dev/d3.compose/index-all.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js","../C:/dev/d3.compose/src/mixins/xy.js","../C:/dev/d3.compose/src/mixins/xy-values.js","../C:/dev/d3.compose/src/mixins/xy-inverted.js","../C:/dev/d3.compose/src/mixins/labels.js","../C:/dev/d3.compose/src/mixins/index.js","../C:/dev/d3.compose/src/charts/Lines.js","../C:/dev/d3.compose/src/charts/Bars.js","../C:/dev/d3.compose/src/charts/StackedBars.js","../C:/dev/d3.compose/src/charts/HorizontalBars.js","../C:/dev/d3.compose/src/charts/HorizontalStackedBars.js","../C:/dev/d3.compose/src/charts/Labels.js","../C:/dev/d3.compose/src/charts/HoverLabels.js","../C:/dev/d3.compose/src/components/InsetLegend.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","valueOrDefault","default_value","property","name","options","prop_key","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","isArray","mixed","constructor","initialize","args","forEach","extension","transform","reduceRight","bind","stack","direction","origin","min_height","min_width","elements","next_position","element_dimensions","spacing_width","spacing_height","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","id","extractLayout","prepareComponent","component","row_index","col_index","getId","setPosition","position","layered_index","extractData","_charts","_components","items","layout","charts","components","unknown_position","converted","convertObjectLayoutToArray","found","row","row_components","row_layout","_layered","chart_ids","chart_index","unshift","console","warn","layered","by_position","unknown","chart_options","component_options","reverse","calculateLayout","demux","overall_layout","skip_layout","getLayout","applyLayout","chart_position","setLayout","part","index","parts","previousPart","findById","getPoints","getPoint","sort","meta","getClosestPoints","points","tolerance","getDistance","Math","sqrt","pow","setDistance","point","distance","closePoints","sortPoints","by_distance","updateActive","active","closest","container","active_keys","closest_keys","trigger","createLayer","layer","events","event","method","split","str","charAt","toUpperCase","dataBind","onDataBind","insert","onInsert","textOptions","default_options","text","components_Title__defaultMargins","default_margin","margins_by_position","title","components_AxisTitle__defaultMargins","axisTitle","xy","title_options","axes","axis_options","positionByKey","x2","y2","secondaryX","secondaryY","axis_title_options","legend","legend_options","Int8Array","utils","helpers","style","Base","isProperty","unset","base","draw","Chart","z_index","layer_type","Component","prepareLayout","Overlay","hidden","display","getAbsolutePosition","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","rawData","tagName","append","classed","attachHoverListeners","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","_attachItems","delay","duration","ease","config","_prepareConfig","_setDimensions","redraw","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","was_inside","on","getBoundingClientRect","scrollY","is_inside","attach","detach","remove","_attached","_positionComponents","_positionByZIndex","remove_ids","remove_id","changed_position","Item","layer_options","overlay","selectAll","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","appendChild","Series","seriesKey","seriesValues","seriesIndex","seriesClass","seriesData","itemStyle","seriesCount","seriesLayer","exit","XY","setScales","normalizeData","xScale","setXScaleRange","getDefaultXScale","yScale","setYScaleRange","getDefaultYScale","xKey","yKey","xValue","yValue","x0","y0","x_scale","y_scale","XYValues","adjacentWidth","layeredWidth","itemWidth","XYInverted","mixins_labels__Labels","attachLabels","labels","LabelsClass","_labels","proxyLabelMethods","LabelsXY","Hover","onMouseEnter","onMouseMove","onMouseLeave","mouseEnterPoint","mouseLeavePoint","HoverPoints","update","hoverTolerance","Transition","setupTransition","StandardLayer","standardLayer","standardSeriesLayer","onEnter","onUpdate","onMerge","onExit","Labels","InvertedXY","XYLabels","Lines","lines","interpolate","createLine","lineKey","line","svg","lineData","each","onMergeTransition","Bars","offset_axis","getOffsetAxis","barHeight","abs","barOffset","barWidth","barX","barY","bar0","barClass","axis_thickness","bars","StackedBars","bar_positions","new_position","stackedBars","HorizontalBars","horizontalBars","HorizontalStackedBars","horizontalStackedBars","charts_Labels__Labels","format","anchor","alignment","labelText","label","labelClass","insertLabels","mergeLabels","layoutLabels","transitionLabels","_prepareLabel","_calculateLayout","_handleCollisions","_setLayout","bg","text_bounds","text_y_adjustment","checkForOverlap","labelA","labelB","getEdges","contained_LR","contained_TB","overlap_LR","overlap_TB","groupLabels","group","updateGroupPositions","addLabelToGroup","originalY","reset","sortY","byY","overlap","prev","compareSeries","compareLabel","HoverLabels","onMouseEnterPoint","onMouseLeavePoint","findLabelForPoint","hoverLabels","Text","textAlign","verticalAlign","transformation","middle","translation","Title","rotate_by_position","Axis","axis","axis_base","_layout_base","merge","orientation","orient","ticks","tickValues","tickSize","innerTickSize","outerTickSize","tickPadding","tickFormat","_setupAxis","onUpdateTransition","_skip_transition","state","getState","label_overhang","_getLabelOverhang","_previous_raw_data","setState","current","array_extensions","overhangs","AxisTitle","default_legend_margins","Legend","legend_base","swatchDimensions","stackDirection","direction_by_position","combined_data","chart_id","find_chart","exclude_from_legend","chart_data","legend_data","class","itemKey","itemText","swatchClass","createSwatch","swatches","groups","_itemDetails","swatch","sizes","size","shift","default","swatch_dimensions","registerSwatch","types","create","InsetLegend","relative_to","relative_to_x","relative_to_y","insetLegend","compose","VERSION","index_all"],"mappings":"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","file":"d3.compose-all.min.js","sourcesContent":[null,"// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\n  isFunction,\n  isUndefined,\n  valueOrDefault\n} from '../utils';\n\n/**\n  Helper for creating properties for charts/components\n\n  @example\n  ```javascript\n  var Custom = d3.chart('Chart').extend('Custom', {\n    // Create property that's stored internally as 'simple'\n    simple: property('simple')\n  });\n  var custom; // = new Custom(...);\n\n  // set\n  custom.simple('Howdy');\n\n  // get\n  console.log(custom.simple()); // -> 'Howdy'\n\n  // Advanced\n  // --------\n  // Default values:\n  Custom.prototype.message = property('message', {\n    default_value: 'Howdy!'\n  });\n\n  console.log(custom.message()); // -> 'Howdy!'\n  custom.message('Goodbye');\n  console.log(custom.message()); // -> 'Goodbye'\n\n  // Set to undefined to reset to default value\n  custom.message(undefined);\n  console.log(custom.message()); // -> 'Howdy!'\n\n  // Custom getter:\n  Custom.prototype.exclaimed = property('exclaimed', {\n    get: function(value) {\n      // Value is the underlying set value\n      return value + '!';\n    }\n  });\n\n  custom.exclaimed('Howdy');\n  console.log(custom.exclaimed()); // -> 'Howdy!'\n\n  // Custom setter:\n  Custom.prototype.feeling = property('feeling', {\n    set: function(value, previous) {\n      if (value == 'Hate') {\n        // To override value, return Object with override specified\n        return {\n          override: 'Love',\n\n          // To do something after override, use after callback\n          after: function() {\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\n          }\n        };\n      }\n    }\n\n    custom.feeling('Hate'); // -> 'After: Love'\n    console.log(custom.feeling()); // -> 'Love'\n  });\n  ```\n  @method property\n  @for helpers\n  @param {String} name of stored property\n  @param {Object} [options]\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`)\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\n  @param {String} [options.type] `get` is evaluated by default, use `\"Function\"` to skip evaluation\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\n  @param {String} [options.prop_key='__properties'] underlying key on object to store property\n  @return {Function} `()`: get, `(value)`: set\n*/\nexport default function property(name, options) {\n  options = options || {};\n  var prop_key = options.prop_key || '__properties';\n\n  var property = function(value) {//eslint-disable-line no-shadow\n    var properties = this[prop_key] = this[prop_key] || {};\n    var context = valueOrDefault(property.context, this);\n\n    if (arguments.length)\n      return set.call(this);\n    else\n      return get.call(this);\n\n    function get() {\n      value = valueOrDefault(properties[name], property.default_value);\n\n      // Unwrap value if its type is not a function\n      if (isFunction(value) && options.type != 'Function')\n        value = value.call(this);\n\n      return isFunction(options.get) ? options.get.call(context, value) : value;\n    }\n\n    function set() {\n      // Validate\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(this, value))\n        throw new Error('Invalid value for ' + name + ': ' + JSON.stringify(value));\n\n      var previous = properties[name];\n      properties[name] = value;\n\n      if (isFunction(options.set) && !isUndefined(value)) {\n        var response = options.set.call(context, value, previous);\n\n        if (response && 'override' in response)\n          properties[name] = response.override;\n        if (response && isFunction(response.after))\n          response.after.call(context, properties[name]);\n      }\n\n      return this;\n    }\n  };\n\n  // For checking if function is a property\n  property.is_property = true;\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\n  property.default_value = options.default_value;\n  property.context = options.context;\n  property.options = options;\n\n  return property;\n}\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector\r\n\r\n  @method dimensions\r\n  @for helpers\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from './index';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05]\r\n  });\r\n  ```\r\n  @method createScale\r\n  @for helpers\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import { extend } from '../utils';\r\n\r\n/**\r\n  Mix prototypes into single combined prototype for chart/component\r\n\r\n  Designed specifically to work with d3.chart:\r\n\r\n  - transform is called from last to first\r\n  - initialize is called from first to last\r\n  - remaining are overriden from first to last\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  d3.chart('Chart').extend('Custom', mixin(a, b, c, {\r\n    initialize: function() {\r\n      // d\r\n    },\r\n    transform: function() {\r\n      // d\r\n    }\r\n  }));\r\n\r\n  // initialize: Chart -> b -> d\r\n  // transform: d -> a -> Chart\r\n  ```\r\n  @method mixin\r\n  @for helpers\r\n  @param {Array|Object...} mixins... Array of mixins or mixins as separate arguments\r\n  @return {Object}\r\n*/\r\nexport default function mixin(mixins) {\r\n  mixins = Array.isArray(mixins) ? mixins : Array.prototype.slice.call(arguments);\r\n  var mixed = extend.apply(null, [{}].concat(mixins));\r\n\r\n  // Don't mixin constructor with prototype\r\n  delete mixed.constructor;\r\n\r\n  if (mixed.initialize) {\r\n    mixed.initialize = function initialize() {\r\n      var args = Array.prototype.slice.call(arguments);\r\n\r\n      mixins.forEach(function(extension) {\r\n        if (extension.initialize)\r\n          extension.initialize.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n  if (mixed.transform) {\r\n    mixed.transform = function transform(data) {\r\n      return mixins.reduceRight(function(memo, extension) {\r\n        if (extension && extension.transform)\r\n          return extension.transform.call(this, memo);\r\n        else\r\n          return memo;\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return mixed;\r\n}\r\n","import { extend } from '../utils';\r\nimport { translate } from './index';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack())\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack({\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n  @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n  @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n  @return {Function}\r\n*/\r\nexport default function stack(options) {\r\n  options = extend({\r\n    direction: 'vertical',\r\n    origin: 'top',\r\n    padding: 0,\r\n    min_height: 0,\r\n    min_width: 0\r\n  }, options);\r\n\r\n  // Ensure valid origin based on direction\r\n  if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n    options.origin = 'left';\r\n  else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n    options.origin = 'top';\r\n\r\n  function padding(i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  return function(elements) {\r\n    if (elements && elements.attr) {\r\n      var previous = 0;\r\n\r\n      elements.attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n        var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n        var x = 0;\r\n        var y = 0;\r\n        var next_position;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          next_position = previous + spacing_width + padding(i);\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(i);\r\n          else\r\n            x = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n        else {\r\n          next_position = previous + spacing_height + padding(i);\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(i);\r\n          else\r\n            y = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  defaults,\r\n  extend,\r\n  first,\r\n  isNumber,\r\n  isObject,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './property';\r\nimport dimensions from './dimensions';\r\nimport createScale from './create-scale';\r\nimport mixin from './mixin';\r\nimport stack from './stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Get formatted margins for varying input\r\n\r\n  @method getMargins\r\n  @example\r\n  ```js\r\n  getMargins(4);\r\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n  getMargins({top: 20}, {top: 8, bottom: 8});\r\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n  ```\r\n  @param {Number|Object} margins\r\n  @param {Object} default_margins\r\n  @return {Object}\r\n*/\r\nexport function getMargins(margins, default_margins) {\r\n  if (isNumber(margins))\r\n    return {top: margins, right: margins, bottom: margins, left: margins};\r\n  else\r\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  getMargins: getMargins,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import {\n  contains,\n  defaults,\n  extend,\n  isFunction,\n  objectEach\n} from './utils';\n\n/*\n  Extract layout from the given options\n\n  @param {Array} options (deprecated: Object)\n  @return {Object} {data, items, layout}\n*/\nexport function extractLayout(options) {\n  if (!options)\n    return;\n\n  var data = {\n    _charts: {},\n    _components: {}\n  };\n  var items = {};\n  var layout = [];\n  var charts = [];\n  var components = [];\n\n  // DEPRECATED\n  // Convert options object to array style\n  var unknown_position = [];\n  if (!Array.isArray(options)) {\n    var converted = convertObjectLayoutToArray(options);\n    options = converted.options;\n    unknown_position = converted.unknown_position;\n  }\n\n  // TEMP Idenfify charts from layered,\n  // eventually no distinction between charts and components\n  var found = {\n    row: false,\n    charts: false\n  };\n\n  // Components are added from inside-out\n  // so for position: top, position: left, use unshift\n  options.forEach(function(row, row_index) {\n    var row_components = [];\n\n    if (!Array.isArray(row))\n      row = [row];\n    if (row.length > 1)\n      found.row = true;\n\n    var row_layout = row.map(function(item, col_index) {\n      if (!item)\n        return;\n\n      if (item._layered) {\n        // Charts\n        found.charts = found.row = true;\n        var chart_ids = [];\n\n        item.items.forEach(function(chart, chart_index) {\n          chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\n\n          chart_ids.push(chart.id);\n          charts.push(chart);\n          items[chart.id] = chart;\n        });\n\n        return chart_ids;\n      }\n\n      var component = prepareComponent(item, row_index, col_index);\n      items[component.id] = component;\n\n      if (row.length > 1) {\n        if (!found.charts) {\n          // Left\n          setPosition(component, 'left');\n          row_components.unshift(component);\n        }\n        else {\n          // Right\n          setPosition(component, 'right');\n          row_components.push(component);\n        }\n      }\n      else {\n        if (!found.row) {\n          // Top\n          setPosition(component, 'top');\n          components.unshift(component);\n        }\n        else {\n          // Bottom\n          setPosition(component, 'bottom');\n          components.push(component);\n        }\n      }\n\n      return component.id;\n    });\n\n    if (row_components.length)\n      components = components.concat(row_components);\n\n    layout.push(row_layout);\n  });\n\n  components.push.apply(components, unknown_position);\n\n  charts.forEach(extractData('_charts'));\n  components.forEach(extractData('_components'));\n\n  return {\n    data: data,\n    items: items,\n    layout: layout,\n\n    charts: charts,\n    components: components\n  };\n\n  function prepareComponent(component, row_index, col_index) {\n    return defaults({}, component, {id: getId(row_index, col_index)});\n  }\n  function setPosition(component, position) {\n    if (component && isFunction(component.position))\n      component.position(position);\n    else\n      component.position = position;\n  }\n  function getId(row_index, col_index, layered_index) {\n    var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\n    if (layered_index != null)\n      id += '-' + (layered_index + 1);\n\n    return id;\n  }\n\n  function extractData(type) {\n    return function(item) {\n      if (item.data && !isFunction(item.data)) {\n        data[type][item.id] = item.data;\n        data[item.id] = item.data;\n        delete item.data;\n      }\n    };\n  }\n}\n\n// DEPRECATED\nfunction convertObjectLayoutToArray(options) {\n  if (typeof console != 'undefined' && console.warn)\n    console.warn('DEPRECATED - object-style options have been deprecated for array-style options and will be removed in the next version of d3.compose');\n\n  var layout = [];\n  var layered = {_layered: true, items: []};\n  var by_position = {top: [], right: [], bottom: [], left: [], unknown: []};\n\n  objectEach(options.charts, function(chart_options, id) {\n    layered.items.push(extend({id: id}, chart_options));\n  });\n\n  objectEach(options.components, function(component_options, id) {\n    component_options = extend({id: id}, component_options);\n\n    if (!by_position[component_options.position])\n      by_position.unknown.push(component_options);\n    else\n      by_position[component_options.position].push(component_options);\n  });\n\n  // Add top items (from inside-out)\n  layout = by_position.top.reverse();\n\n  // Add left items (inside-out), charts, and right items\n  if (by_position.left.length || layered.items.length || by_position.right.length) {\n    var row = by_position.left.reverse();\n    if (layered.items.length)\n      row.push(layered);\n\n    row = row.concat(by_position.right);\n    layout.push(row);\n  }\n\n  // Add bottom items\n  layout.push.apply(layout, by_position.bottom);\n\n  return {options: layout, unknown_position: by_position.unknown};\n}\n\n/*\n  Calculate component and chart coordinates for given layout\n*/\nexport function calculateLayout(components, data, demux) {\n  var overall_layout = {top: [], right: [], bottom: [], left: []};\n  components.forEach(function(component) {\n    if (component.skip_layout || !component.getLayout)\n      return;\n\n    var layout = component.getLayout(demux(component.id, data));\n    var position = layout && layout.position;\n\n    if (!contains(['top', 'right', 'bottom', 'left'], position))\n      return;\n\n    overall_layout[position].push({\n      offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\n      component: component\n    });\n  });\n\n  return overall_layout;\n}\n\n/*\n  Apply calculated layout to charts and components\n*/\nexport function applyLayout(layout, chart_position, width, height) {\n  layout.top.reduce(function(previous, part) {\n    var y = previous - part.offset;\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n    return y;\n  }, chart_position.top);\n\n  layout.right.reduce(function(previous, part, index, parts) {\n    var previousPart = parts[index - 1] || {offset: 0};\n    var x = previous + previousPart.offset;\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n    return x;\n  }, width - chart_position.right);\n\n  layout.bottom.reduce(function(previous, part, index, parts) {\n    var previousPart = parts[index - 1] || {offset: 0};\n    var y = previous + previousPart.offset;\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n    return y;\n  }, height - chart_position.bottom);\n\n  layout.left.reduce(function(previous, part) {\n    var x = previous - part.offset;\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n    return x;\n  }, chart_position.left);\n\n  function setLayout(component, x, y, options) {\n    if (component && isFunction(component.setLayout))\n      component.setLayout(x, y, options);\n  }\n}\n","import d3 from 'd3';\nimport {\n  isFunction,\n  find,\n  defaults,\n  extend,\n  objectEach,\n  difference,\n  pluck\n} from './utils';\nimport {\n  getMargins,\n  property,\n  style,\n  translate\n} from './helpers';\nimport {\n  extractLayout,\n  calculateLayout,\n  applyLayout\n} from './layout';\nimport Base from './Base';\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\n\n/**\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\n\n  @example\n  ```html\n  <div id=\"#chart\"></div>\n  ```\n  ```js\n  var chart = d3.select('#chart').chart('Compose', function(data) {\n    // Process data...\n\n    // Create shared scales\n    var scales = {\n      x: {data: data.input, key: 'x', adjacent: true},\n      y: {data: data.input, key: 'y'},\n      y2: {data: data.output, key: 'y'}\n    };\n\n    // Setup charts and components\n    var charts = [\n      d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\n      d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\n    ];\n\n    var title = d3c.title('d3.compose');\n    var yAxis = d3c.axis({scale: scales.y});\n    var y2Axis = d3c.axis({scale: scales.y2});\n\n    // Layout charts and components\n    return [\n      [yAxis, d3c.layered(charts), y2Axis]\n    ];;\n  });\n\n  chart.draw({input: [...], output: [...]});\n  ```\n  @class Compose\n  @extends Base\n*/\nexport default Base.extend('Compose', {\n  initialize: function() {\n    // Overriding transform in init jumps it to the top of the transform cascade\n    // Therefore, data coming in hasn't been transformed and is raw\n    // (Save raw data for redraw)\n    this.transform = function(data) {\n      this.rawData(data);\n      return data;\n    };\n\n    // Responsive svg based on the following approach (embedded + padding hack)\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\n    // (not enabled if selection is svg)\n    if (this.base.node().tagName != 'svg') {\n      this.container = this.base.append('div')\n        .attr('class', 'chart-compose-container');\n\n      this.base = this.container.append('svg')\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\n        .attr('version', '1.1')\n        .attr('class', 'chart-compose');\n    }\n    else {\n      this.base.classed('chart-compose', true);\n    }\n\n    this.attachHoverListeners();\n  },\n\n  /**\n    Get/set the options `object/function` for the chart that takes `data` and\n    returns `{charts, components}` for composing child charts and components.\n\n    @example\n    ```js\n    // get\n    chart.options();\n\n    // set (static)\n    chart.options({\n      charts: {},\n      components: {}\n    });\n\n    // set (dynamic, takes data and returns options)\n    chart.options(function(data) {\n      // process data...\n\n      return {\n        charts: {},\n        components: {}\n      };\n    });\n\n    // Set directly from d3.chart creation\n    d3.select('#chart')\n      .chart('Compose', function(data) {\n        // ...\n      });\n    ```\n    @property options\n    @type Function|Object\n  */\n  options: property('options', {\n    default_value: function() {},\n    type: 'Function',\n    set: function(options) {\n      // If options is plain object,\n      // return from generic options function\n      if (!isFunction(options)) {\n        return {\n          override: function() {\n            return options;\n          }\n        };\n      }\n    }\n  }),\n\n  // Store raw data for container before it has been transformed\n  rawData: property('rawData'),\n\n  /**\n    Margins between edge of container and components/chart\n\n    @example\n    ```js\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\n    ```\n    @property margins\n    @type Object {top, right, bottom, left}\n    @default {top: 10, right: 10, bottom: 10, left: 10}\n  */\n  margins: property('margins', {\n    default_value: default_compose_margins,\n    set: function(values) {\n      return {\n        override: getMargins(values, default_compose_margins)\n      };\n    }\n  }),\n\n  // Chart position\n  chartPosition: property('chartPosition', {\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\n    set: function(values) {\n      return {\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\n      };\n    },\n    get: function(values) {\n      values.width = this._width() - values.right - values.left;\n      values.height = this._height() - values.bottom - values.top;\n\n      return values;\n    }\n  }),\n\n  /**\n    Get/set overall width of chart\n\n    @property width\n    @type Number\n  */\n  width: property('width', {\n    default_value: null\n  }),\n\n  /**\n    Get/set overall height of chart\n\n    @property height\n    @type Number\n  */\n  height: property('height', {\n    default_value: null\n  }),\n\n  _width: function() {\n    var width = this.width();\n    return width != null ? width : Base.prototype.width.call(this);\n  },\n  _height: function() {\n    var height = this.height();\n    return height != null ? height : Base.prototype.height.call(this);\n  },\n\n  /**\n    Enable responsive container + viewBox so that chart scales to fill width\n    (only works if selection is not an svg)\n\n    @property responsive\n    @type Boolean\n    @default true\n  */\n  responsive: property('responsive', {\n    default_value: true\n  }),\n\n  // Set svg viewBox attribute\n  viewBox: property('viewBox', {\n    default_value: function() {\n      if (this.responsive() && this.width() && this.height())\n        return '0 0 ' + this.width() + ' ' + this.height();\n      else\n        return null;\n    }\n  }),\n\n  // Set svg preserveAspectRatio attribute\n  preserveAspectRatio: property('preserveAspectRatio', {\n    default_value: function() {\n      if (this.responsive())\n        return 'xMidYMid meet';\n      else\n        return null;\n    }\n  }),\n\n  // Set container style\n  containerStyle: property('containerStyle', {\n    default_value: function() {\n      if (this.responsive()) {\n        var aspect_ratio = 1;\n        if (this.width() && this.height())\n          aspect_ratio = this.height() / this.width();\n\n        return style({\n          width: '100%',\n          height: 0,\n          'padding-top': (aspect_ratio * 100) + '%',\n          position: 'relative'\n        });\n      }\n      else {\n        return style({position: 'relative'});\n      }\n    }\n  }),\n\n  // Set base style\n  baseStyle: property('baseStyle', {\n    default_value: function() {\n      if (this.responsive() && this.container) {\n        return style({\n          position: 'absolute',\n          top: 0,\n          left: 0\n        });\n      }\n      else {\n        return null;\n      }\n    }\n  }),\n\n  /**\n    Set charts from options or get chart instances.\n    Each chart should use a unique key so that updates are passed to the existing chart\n    (otherwise they are recreated on update).\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\n\n    @example\n    ```js\n    chart.charts([\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\n    ]);\n    ```\n    @property charts\n    @type Array\n  */\n  charts: property('charts', {\n    set: function(chart_options, charts) {\n      // Store actual charts rather than options\n      return {\n        override: this._attachItems(chart_options, charts, this)\n      };\n    },\n    default_value: []\n  }),\n\n  /**\n    Set components from options or get components instances.\n    Each component should use a unique key so that updates are passed to the existing chart\n    (otherwise they are recreated on update).\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\n\n    @example\n    ```js\n    chart.components([\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\n      {id: 'title', type: 'Title'} // options to pass to Title component\n    ])\n    ```\n    @property components\n    @type Array\n  */\n  components: property('components', {\n    set: function(component_options, components) {\n      // Store actual components rather than options\n      return {\n        override: this._attachItems(component_options, components, this)\n      };\n    },\n    default_value: []\n  }),\n\n  /**\n    Delay start of transition by specified milliseconds.\n    (applied to all charts and components as default)\n\n    @property delay\n    @type Number|Function\n    @default d3 default: 0\n  */\n  delay: property('delay', {type: 'Function'}),\n\n  /**\n    Transition duration in milliseconds.\n    (applied to all charts and components as default)\n\n    @property duration\n    @type Number|Function\n    @default d3 default: 250ms\n  */\n  duration: property('duration', {type: 'Function'}),\n\n  /**\n    Transition ease function.\n    (applied to all charts and components as default)\n\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\n    - Note: arguments to pass to `d3.ease` are not supported\n\n    @property ease\n    @type String|Function\n    @default d3 default: 'cubic-in-out'\n  */\n  ease: property('ease', {type: 'Function'}),\n\n  /**\n    Draw chart with given data\n\n    @example\n    ```js\n    var chart = d3.select('#chart')\n      .chart('Compose', function(data) {\n        // ...\n      });\n\n    chart.draw([1, 2, 3]);\n\n    chart.draw({values: [1, 2, 3]});\n\n    chart.draw([\n      {values: [1, 2, 3]},\n      {values: [4, 5, 6]}\n    ]);\n    ```\n    @method draw\n    @param {Any} data\n  */\n  draw: function(data) {\n    var config = this._prepareConfig(this.options(), data);\n    if (!config)\n      config = {data: {_charts: {}, _components: {}}, layout: []};\n\n    // Set charts and components from config\n    this.charts(config.charts);\n    this.components(config.components);\n\n    // Add config data\n    data = {\n      original: data,\n      config: config.data\n    };\n    this.data(data);\n\n    this._setDimensions();\n\n    // Layout components\n    this.layout(config.layout, data);\n\n    // Full draw now that everything has been laid out\n    d3.chart().prototype.draw.call(this, data);\n  },\n\n  /**\n    Redraw chart with current data\n\n    @method redraw\n  */\n  redraw: function() {\n    if (this.rawData())\n      this.draw(this.rawData().original);\n  },\n\n  demux: function(name, data) {\n    if (!data || !data.config || !data.original)\n      return data;\n\n    if (findById(this.charts(), name) && data.config._charts[name])\n      return data.config._charts[name];\n    else if (findById(this.components(), name) && data.config._components[name])\n      return data.config._components[name];\n    else\n      return data.original;\n  },\n\n  // Create chart layer (for laying out charts)\n  createChartLayer: function(options) {\n    return this.base.append('g')\n      .attr('class', 'chart-layer')\n      .attr('data-zIndex', options && options.z_index);\n  },\n\n  // Create component layer\n  createComponentLayer: function(options) {\n    return this.base.append('g')\n      .attr('class', 'chart-component-layer')\n      .attr('data-zIndex', options && options.z_index);\n  },\n\n  // Create overlay layer\n  createOverlayLayer: function() {\n    if (!this.container)\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\n\n    return this.container.append('div')\n      .attr('class', 'chart-overlay-layer');\n  },\n\n  // Layout components and charts for given data\n  layout: function(layout, data) {\n    // 1. Place chart layers\n    this._positionChartLayers();\n\n    // 2. Extract layout from components\n    layout = this._extractLayout(data);\n\n    // 3. Set chart position from layout\n    var chart_position = extend({}, this.margins());\n    objectEach(layout, function(parts, key) {\n      parts.forEach(function(part) {\n        chart_position[key] += part.offset || 0;\n      });\n    });\n    this.chartPosition(chart_position);\n\n    // 4. Position layers with layout\n    this.positionLayers(layout);\n  },\n\n  attachHoverListeners: function() {\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\n    // For non-responsive, bounding rectangle is container so calculations still apply\n\n    var trigger = this.trigger.bind(this);\n    var chartPosition = this.chartPosition.bind(this);\n    var container = this.container || this.base;\n    var base = this.base.node();\n    var chart_position, bounds, was_inside;\n\n    container.on('mouseenter', function() {\n      // Calculate chart position and bounds on enter and cache during move\n      chart_position = chartPosition();\n      bounds = extend({}, base.getBoundingClientRect());\n      bounds.top += window.scrollY;\n      bounds.bottom += window.scrollY;\n\n      was_inside = inside(bounds);\n      if (was_inside)\n        enter();\n    });\n    container.on('mousemove', function() {\n      var is_inside = inside(bounds);\n      if (was_inside && is_inside)\n        move();\n      else if (was_inside)\n        leave();\n      else if (is_inside)\n        enter();\n\n      was_inside = is_inside;\n    });\n    container.on('mouseleave', function() {\n      if (was_inside) {\n        was_inside = false;\n        leave();\n      }\n    });\n\n    function inside() {\n      var mouse = d3.mouse(document.documentElement);\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\n    }\n    function enter() {\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\n    }\n    function move() {\n      trigger('mousemove', translateToXY(d3.mouse(base)));\n    }\n    function leave() {\n      trigger('mouseleave');\n    }\n\n    function translateToXY(coordinates) {\n      var x = coordinates[0];\n      var y = coordinates[1];\n      var chart_x = x - chart_position.left;\n      var chart_y = y - chart_position.top;\n\n      // Set at chart bounds if outside of chart\n      if (x > (chart_position.left + chart_position.width))\n        chart_x = chart_position.width;\n      else if (x < chart_position.left)\n        chart_x = 0;\n\n      if (y > (chart_position.top + chart_position.height))\n        chart_y = chart_position.height;\n      else if (y < chart_position.top)\n        chart_y = 0;\n\n      return {\n        container: {x: x, y: y},\n        chart: {x: chart_x, y: chart_y}\n      };\n    }\n  },\n\n  // Attach chart/component child item with id\n  attach: function(id, item) {\n    item.id = id;\n    item.base.attr('data-id', id);\n    item.container = this;\n\n    Base.prototype.attach.call(this, id, item);\n\n    if (item && isFunction(item.trigger))\n      item.trigger('attach');\n  },\n\n  // Detach chart/component child item by id\n  detach: function(id, item) {\n    item.base.remove();\n\n    delete this._attached[id];\n\n    if (item && isFunction(item.trigger))\n      item.trigger('detach');\n  },\n\n  // Position chart and component layers\n  positionLayers: function(layout) {\n    this._positionChartLayers();\n    this._positionComponents(layout);\n    this._positionByZIndex();\n  },\n\n  //\n  // Internal\n  //\n\n  _setDimensions: function() {\n    // Set container and svg dimensions\n    // (if original selection is svg, no container and skip responsiveness)\n    if (this.container) {\n      this.container\n        .attr('style', this.containerStyle());\n    }\n\n    this.base\n      .attr('viewBox', this.viewBox())\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\n      .attr('style', this.baseStyle())\n      .attr('width', this.responsive() ? null : this.width())\n      .attr('height', this.responsive() ? null : this.height());\n  },\n\n  _attachItems: function(items, container, context) {\n    items = items || [];\n    container = container || [];\n\n    // Remove charts that are no longer needed\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\n    remove_ids.forEach(function(remove_id) {\n      context.detach(remove_id, findById(container, remove_id));\n    });\n\n    // Create or update charts\n    return items.map(function(options) {\n      // TODO May not have id, might need to auto-generate\n      // (might be during another step)\n      var id = options.id;\n      var item = findById(container, id);\n\n      if (options instanceof d3.chart()) {\n        // If chart instance, replace with instance\n        if (item)\n          context.detach(id, item);\n\n        context.attach(id, options);\n        return options;\n      }\n      else {\n        // TEMP Changing position has nasty side effects, disable for now\n        var changed_position = item && item.position && options.position && item.position() != options.position;\n\n        if (item && (item.type != options.type || changed_position)) {\n          // If chart type has changed, detach and re-create\n          context.detach(id, item);\n          item = undefined;\n        }\n\n        if (!item) {\n          var Item = d3.chart(options.type);\n\n          if (!Item)\n            throw new Error('No registered d3.chart found for ' + options.type);\n\n          var layer_options = {z_index: Item.z_index || 0};\n          var createLayer = {\n            'chart': 'createChartLayer',\n            'component': 'createComponentLayer',\n            'overlay': 'createOverlayLayer'\n          }[Item.layer_type];\n\n          if (!createLayer)\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\n\n          var base = context[createLayer](layer_options);\n\n          item = new Item(base, options);\n          item.type = options.type;\n\n          context.attach(id, item);\n        }\n        else {\n          item.options(options);\n        }\n\n        return item;\n      }\n    });\n  },\n\n  _prepareConfig: function(options, data) {\n    return extractLayout(options(data));\n  },\n\n  _positionChartLayers: function() {\n    var position = this.chartPosition();\n    this.base.selectAll('.chart-layer')\n      .attr('transform', translate(position.left, position.top))\n      .attr('width', position.width)\n      .attr('height', position.height);\n  },\n\n  _positionComponents: function(layout) {\n    var chart_position = this.chartPosition();\n    var width = this._width();\n    var height = this._height();\n\n    applyLayout(layout, chart_position, width, height);\n  },\n\n  _positionByZIndex: function() {\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\n\n    // Sort by z-index\n    function setZIndex(layer) {\n      return {\n        layer: layer,\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\n      };\n    }\n    function sortZIndex(a, b) {\n      if (a.zIndex < b.zIndex)\n        return -1;\n      else if (a.zIndex > b.zIndex)\n        return 1;\n      else\n        return 0;\n    }\n    function getLayer(wrapped) {\n      return wrapped.layer;\n    }\n\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\n\n    // Move layers to z-index order\n    layers.forEach(function(layer) {\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\n        layer.parentNode.appendChild(layer);\n    });\n  },\n\n  _extractLayout: function(data) {\n    return calculateLayout(this.components(), data, this.demux.bind(this));\n  }\n});\n\n// TODO Find better place for this\nexport function layered(items) {\n  if (!Array.isArray(items))\n    items = Array.prototype.slice.call(arguments);\n\n  return {_layered: true, items: items};\n}\n\nfunction findById(items, id) {\n  return find(items, function(item) {\n    return item.id == id;\n  });\n}\n","import d3 from 'd3';\r\nimport {\r\n  getParentData,\r\n  style,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling series data\r\n\r\n  @class Series\r\n  @namespace mixins\r\n*/\r\nvar Series = {\r\n  /**\r\n    Get key for given series data\r\n\r\n    @method seriesKey\r\n    @param {Any} d Series object with `key`\r\n    @return {Any}\r\n  */\r\n  seriesKey: di(function(chart, d) {\r\n    return d.key;\r\n  }),\r\n\r\n  /**\r\n    Get values for given series data\r\n\r\n    @method seriesValues\r\n    @param {Any} d Series object with `values` array\r\n    @return {Array}\r\n  */\r\n  seriesValues: di(function(chart, d, i) {\r\n    // Store seriesIndex on series\r\n    d.seriesIndex = i;\r\n    return d.values;\r\n  }),\r\n\r\n  /**\r\n    Get class for given series data\r\n\r\n    @method seriesClass\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {String}\r\n  */\r\n  seriesClass: di(function(chart, d, i) {\r\n    return 'chart-series chart-index-' + i + (d['class'] ? ' ' + d['class'] : '');\r\n  }),\r\n\r\n  /**\r\n    Get index for given data-point of series\r\n\r\n    @method seriesIndex\r\n    @param {Any} d\r\n    @param {Number} i\r\n  */\r\n  seriesIndex: di(function(chart, d, i) {\r\n    var series = chart.seriesData.call(this, d, i);\r\n    return series && series.seriesIndex || 0;\r\n  }),\r\n\r\n  /**\r\n    Get parent series data for given data-point\r\n\r\n    @method seriesData\r\n    @return {Any}\r\n  */\r\n  seriesData: di(function() {\r\n    return getParentData(this);\r\n  }),\r\n\r\n  /**\r\n    (di) Get style given series data or data-point\r\n    (Uses \"style\" object on `d`, if defined)\r\n\r\n    @method itemStyle\r\n    @param {Any} d\r\n    @param {Number} [i]\r\n    @param {Number} [j]\r\n    @return {String}\r\n  */\r\n  itemStyle: di(function(chart, d) {\r\n    return style(d.style) || null;\r\n  }),\r\n\r\n  /**\r\n    Get series count for chart\r\n\r\n    @method seriesCount\r\n    @return {Number}\r\n  */\r\n  seriesCount: function() {\r\n    var data = this.data();\r\n    return (data && isSeriesData(data)) ? data.length : 1;\r\n  },\r\n\r\n  /**\r\n    Extension of layer() that handles data-binding and layering for series data.\r\n\r\n    - Updates `dataBind` method to access underlying series values\r\n    - Creates group layer for each series in chart\r\n    - Should be used just like layer()\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(mixins.Series, {\r\n      initialize: function() {\r\n        this.seriesLayer('Circles', this.base, {\r\n          // Create group for each series on this.base\r\n          // and calls the following for each series item\r\n          // (entire layer is called twice: series-1 and series-2)\r\n\r\n          dataBind: function(data) {\r\n            // 1. data = [1, 2, 3]\r\n            // 2. data = [4, 5, 6]\r\n          },\r\n          insert: function() {\r\n            // Same as chart.layer\r\n            // (where \"this\" is series group layer)\r\n          },\r\n          events: {\r\n            // Same as chart.layer\r\n          }\r\n        });\r\n      }\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.draw([\r\n      {key: 'series-1', values: [1, 2, 3]},\r\n      {key: 'series-2', values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method seriesLayer\r\n    @param {String} name\r\n    @param {Selection} selection\r\n    @param {Object} options (`dataBind` and `insert` required)\r\n    @return {d3.chart.layer}\r\n  */\r\n  seriesLayer: function(name, selection, options) {\r\n    if (options && options.dataBind) {\r\n      var dataBind = options.dataBind;\r\n\r\n      options.dataBind = function(data) {\r\n        var chart = this.chart();\r\n        var series = this.selectAll('g')\r\n          .data(data, chart.seriesKey);\r\n\r\n        series.enter()\r\n          .append('g');\r\n\r\n        series\r\n          .attr('class', chart.seriesClass)\r\n          .attr('style', chart.itemStyle);\r\n\r\n        series.exit()\r\n          .remove();\r\n\r\n        series.chart = function() { return chart; };\r\n\r\n        return dataBind.call(series, chart.seriesValues);\r\n      };\r\n    }\r\n\r\n    return d3.chart().prototype.layer.call(this, name, selection, options);\r\n  },\r\n\r\n  // Ensure data is in series form\r\n  transform: function(data) {\r\n    return !isSeriesData(data) ? [{values: data}] : data;\r\n  }\r\n};\r\n\r\nexport default Series;\r\n","import {\r\n  property,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\nimport {\r\n  compact,\r\n  pluck,\r\n  objectEach,\r\n  contains\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common hover behavior that adds standard `onMouseEnter`, `onMouseMove`, and `onMouseLeave` handlers\r\n  and `getPoint` helper for adding helpful meta information to raw data point.\r\n\r\n  @class Hover\r\n  @namespace mixins\r\n*/\r\nvar Hover = {\r\n  initialize: function() {\r\n    this.on('attach', function() {\r\n      this.container.on('mouseenter', this.onMouseEnter.bind(this));\r\n      this.container.on('mousemove', this.onMouseMove.bind(this));\r\n      this.container.on('mouseleave', this.onMouseLeave.bind(this));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Get point information for given data-point\r\n\r\n    @method getPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n    @return {key, series, d, meta {chart, i, j, x, y}}\r\n  */\r\n  getPoint: di(function(chart, d, i, j) {\r\n    var key = chart.key && chart.key.call(this, d, i, j);\r\n    var series = chart.seriesData && chart.seriesData.call(this, d, i, j) || {};\r\n\r\n    return {\r\n      key: (series.key || j) + '.' + (key || i),\r\n      series: series,\r\n      d: d,\r\n      meta: {\r\n        chart: chart,\r\n        i: i,\r\n        j: j,\r\n        x: chart.x && chart.x.call(this, d, i, j),\r\n        y: chart.y && chart.y.call(this, d, i, j)\r\n      }\r\n    };\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseenter:point when mouse enters data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseEnterPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseEnterPoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseenter:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseleave:point when mouse leaves data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseleavePoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseLeavePoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseleave:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    (Override) Called when mouse enters container\r\n\r\n    @method onMouseEnter\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseEnter: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse moves within container\r\n\r\n    @method onMouseMove\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseMove: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse leaves container\r\n\r\n    @method onMouseLeave\r\n  */\r\n  onMouseLeave: function() {}\r\n};\r\n\r\n/**\r\n  Mixin for automatically triggering \"mouseenter:point\"/\"mouseleave:point\" for chart data points that are within given `hoverTolerance`.\r\n\r\n  @class HoverPoints\r\n  @namespace mixins\r\n*/\r\nvar HoverPoints = {\r\n  initialize: function() {\r\n    var points, tolerance, active;\r\n\r\n    this.on('draw', function() {\r\n      // Clear cache on draw\r\n      points = null;\r\n    });\r\n\r\n    this.on('attach', function() {\r\n      var update = function update(position) {\r\n        var closest = [];\r\n        if (position)\r\n          closest = getClosestPoints(points, position.chart, tolerance);\r\n\r\n        updateActive(active, closest, this.container);\r\n        active = closest;\r\n      }.bind(this);\r\n\r\n      this.container.on('mouseenter', function(position) {\r\n        if (!points)\r\n          points = getPoints(this, this.data());\r\n\r\n        tolerance = this.hoverTolerance();\r\n        update(position);\r\n      }.bind(this));\r\n\r\n      this.container.on('mousemove', update);\r\n      this.container.on('mouseleave', update);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Hover tolerance (in px) for calculating close points\r\n\r\n    @property hoverTolerance\r\n    @type Number\r\n    @default Infinity\r\n  */\r\n  hoverTolerance: property('hoverTolerance', {\r\n    default_value: Infinity\r\n  })\r\n};\r\n\r\nfunction getPoints(chart, data) {\r\n  if (data) {\r\n    if (!isSeriesData(data))\r\n      data = [{values: data}];\r\n\r\n    return data.map(function(series, j) {\r\n      return series.values.map(function(d, i) {\r\n        return chart.getPoint.call({_parent_data: series}, d, i, j);\r\n      }).sort(function(a, b) {\r\n        // Sort by x\r\n        return a.meta.x - b.meta.x;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction getClosestPoints(points, position, tolerance) {\r\n  return compact(points.map(function(series) {\r\n    function setDistance(point) {\r\n      point.distance = getDistance(point.meta, position);\r\n      return point;\r\n    }\r\n    function closePoints(point) {\r\n      return point.distance < tolerance;\r\n    }\r\n    function sortPoints(a, b) {\r\n      if (a.distance < b.distance)\r\n        return -1;\r\n      else if (a.distance > b.distance)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n\r\n    var by_distance = series.map(setDistance).filter(closePoints).sort(sortPoints);\r\n\r\n    return by_distance[0];\r\n  }));\r\n\r\n  function getDistance(a, b) {\r\n    return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n  }\r\n}\r\n\r\nfunction updateActive(active, closest, container) {\r\n  var active_keys = pluck(active, 'key');\r\n  var closest_keys = pluck(closest, 'key');\r\n\r\n  objectEach(closest, function(point) {\r\n    if (contains(active_keys, point.key))\r\n      container.trigger('mousemove:point', point);\r\n    else\r\n      container.trigger('mouseenter:point', point);\r\n  });\r\n  objectEach(active, function(point) {\r\n    if (!contains(closest_keys, point.key))\r\n      container.trigger('mouseleave:point', point);\r\n  });\r\n}\r\n\r\nexport {\r\n  Hover as default,\r\n  HoverPoints\r\n};\r\n","import {\r\n  property\r\n} from '../helpers';\r\nimport {\r\n  isUndefined\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common transition behaviors\r\n\r\n  @class Transition\r\n  @namespace mixins\r\n*/\r\nvar Transition = {\r\n  /**\r\n    Delay start of transition by specified milliseconds.\r\n\r\n    @property delay\r\n    @type Number|Function\r\n    @default (use container value, if available)\r\n  */\r\n  delay: property('delay', {\r\n    set: function(value) {\r\n      // type: 'Function' is desired, but default_value needs to be evaluated\r\n      // wrap value in function\r\n      return {\r\n        override: function() { return value; }\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return this.container && this.container.delay && this.container.delay();\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Transition duration in milliseconds.\r\n\r\n    @property duration\r\n    @type Number|Function\r\n    @default (use container value, if available)\r\n  */\r\n  duration: property('duration', {\r\n    set: function(value) {\r\n      return {\r\n        override: function() { return value; }\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return this.container && this.container.delay && this.container.duration();\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Transition ease function\r\n\r\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n    - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n    @property ease\r\n    @type String|Function\r\n    @default (use container value, if available)\r\n  */\r\n  ease: property('ease', {\r\n    set: function(value) {\r\n      return {\r\n        override: function() { return value; }\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return this.container && this.container.delay && this.container.ease();\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Setup delay, duration, and ease for transition\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Transition, {\r\n      initialize: function() {\r\n        this.layer('circles', this.base, {\r\n          // ...\r\n          events: {\r\n            'merge:transition': function() {\r\n              // Set delay, duration, and ease from properties\r\n              this.chart().setupTransition(this);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }));\r\n    ```\r\n    @method setupTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  setupTransition: function setupTransition(selection) {\r\n    var delay = this.delay();\r\n    var duration = this.duration();\r\n    var ease = this.ease();\r\n\r\n    if (!isUndefined(delay))\r\n      selection.delay(delay);\r\n    if (!isUndefined(duration))\r\n      selection.duration(duration);\r\n    if (!isUndefined(ease))\r\n      selection.ease(ease);\r\n  }\r\n};\r\n\r\nexport default Transition;\r\n","/**\r\n  Mixin to create standard layer to make extending charts straightforward.\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n    initialize: function() {\r\n      this.standardLayer('main', this.base.append('g'))\r\n      // dataBind, insert, events are defined on prototype\r\n    },\r\n\r\n    onDataBind: function(selection, data) {\r\n      // ...\r\n    },\r\n    onInsert: function(selection) {\r\n      // ...\r\n    },\r\n    onEnter: function(selection) {\r\n      // ...\r\n    },\r\n    onUpdateTransition: function(selection) {\r\n      // ...\r\n    },\r\n    // all d3.chart events are available: onMerge, onExit, ...\r\n  }));\r\n  ```\r\n  @class StandardLayer\r\n  @namespace mixins\r\n*/\r\nvar StandardLayer = {\r\n  /**\r\n    extension of `layer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardLayer('circles', this.base.append('g'));\r\n      }\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" layer\r\n    }));\r\n    ```\r\n    @method standardLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardLayer: function standardLayer(name, selection) {\r\n    return createLayer(this, 'layer', name, selection);\r\n  },\r\n\r\n  /**\r\n    extension of `seriesLayer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardSeriesLayer('circles', this.base.append('g'));\r\n      },\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" seriesLayer\r\n    }));\r\n    ```\r\n    @method standardSeriesLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardSeriesLayer: function standardSeriesLayer(name, selection) {\r\n    return createLayer(this, 'series', name, selection);\r\n  },\r\n\r\n  /**\r\n    Called for standard layer's `dataBind`\r\n\r\n    @method onDataBind\r\n    @param {d3.selection} selection\r\n    @param {Any} data\r\n    @return {d3.selection}\r\n  */\r\n  onDataBind: function onDataBind(/* selection, data */) {},\r\n\r\n  /**\r\n    Called for standard layer's `insert`\r\n\r\n    @method onInsert\r\n    @param {d3.selection} selection\r\n    @return {d3.selection}\r\n  */\r\n  onInsert: function onInsert(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter']`\r\n\r\n    @method onEnter\r\n    @param {d3.selection} selection\r\n  */\r\n  onEnter: function onEnter(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter:transition']`\r\n\r\n    @method onEnterTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onEnterTransition: function onEnterTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdate\r\n    @param {d3.selection} selection\r\n  */\r\n  onUpdate: function onUpdate(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdateTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onUpdateTransition: function onUpdateTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge']`\r\n\r\n    @method onMerge\r\n    @param {d3.selection} selection\r\n  */\r\n  onMerge: function onMerge(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge:transition']`\r\n\r\n    @method onMergeTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onMergeTransition: function onMergeTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['exit']`\r\n\r\n    @method onExit\r\n    @param {d3.selection} selection\r\n  */\r\n  onExit: function onExit(/* selection */) {}\r\n\r\n  /**\r\n    Call for standard layer's `events['exit:transition']`\r\n\r\n    @method onExitTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onExitTransition: function onExitTransition(selection) {},\r\n};\r\n\r\nfunction createLayer(chart, type, name, selection) {\r\n  var layer = {\r\n    layer: 'layer',\r\n    series: 'seriesLayer'\r\n  }[type];\r\n\r\n  if (layer && chart[layer]) {\r\n    var events = {};\r\n    [\r\n      'enter',\r\n      'enter:transition',\r\n      'update',\r\n      'update:transition',\r\n      'merge',\r\n      'merge:transition',\r\n      'exit',\r\n      'exit:transition'\r\n    ].forEach(function(event) {\r\n      var method = 'on' + event.split(':').map(function capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }).join('');\r\n\r\n      // Only create events if chart method exists as empty transition events can cause unforeseen issues\r\n      if (chart[method]) {\r\n        events[event] = function() {\r\n          this.chart()[method](this);\r\n        };\r\n      }\r\n    });\r\n\r\n    return chart[layer](name, selection, {\r\n      dataBind: function(data) {\r\n        return this.chart().onDataBind(this, data);\r\n      },\r\n      insert: function() {\r\n        return this.chart().onInsert(this);\r\n      },\r\n      events: events\r\n    });\r\n  }\r\n}\r\n\r\nexport default StandardLayer;\r\n","import {\r\n  contains,\r\n  extend,\r\n  isString\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  style,\r\n  translate,\r\n  rotate,\r\n  mixin\r\n} from '../helpers';\r\nimport { StandardLayer } from '../mixins';\r\nimport Component from '../Component';\r\n\r\n/**\r\n  Add text to a chart.\r\n\r\n  ### Extending\r\n\r\n  To extend the `Text` component, the following methods are available:\r\n\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      return {\r\n        components: {\r\n          title: {\r\n            type: 'Text',\r\n            position: 'top'\r\n            text: 'Main Title',\r\n            textAlign: 'left',\r\n            'class': 'title'\r\n          },\r\n          notes: {\r\n            type: 'Text',\r\n            position: 'bottom',\r\n            text: 'Notes',\r\n            'class': 'notes'\r\n          }\r\n        }\r\n      };\r\n    });\r\n  ```\r\n  @class Text\r\n  @extends Component, StandardLayer\r\n*/\r\nvar Text = Component.extend('Text', mixin(StandardLayer, {\r\n  initialize: function() {\r\n    // Use standard layer for extensibility\r\n    this.standardLayer('Text', this.base.append('g').classed('chart-text', true));\r\n  },\r\n\r\n  /**\r\n    Text to display\r\n\r\n    @property text\r\n    @type String\r\n  */\r\n  text: property('text'),\r\n\r\n  /**\r\n    Rotation of text\r\n\r\n    @property rotation\r\n    @type Number\r\n    @default 0\r\n  */\r\n  rotation: property('rotation', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Horizontal text-alignment of text (`\"left\"`, `\"center\"`, or `\"right\"`)\r\n\r\n    @property textAlign\r\n    @type String\r\n    @default \"center\"\r\n  */\r\n  textAlign: property('textAlign', {\r\n    default_value: 'center',\r\n    validate: function(value) {\r\n      return contains(['left', 'center', 'right'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    text-anchor for text (`\"start\"`, `\"middle\"`, or `\"end\"`)\r\n\r\n    @property anchor\r\n    @type String\r\n    @default (set by `textAlign`)\r\n  */\r\n  anchor: property('anchor', {\r\n    default_value: function() {\r\n      return {\r\n        left: 'start',\r\n        center: 'middle',\r\n        right: 'end'\r\n      }[this.textAlign()];\r\n    },\r\n    validate: function(value) {\r\n      return contains(['start', 'middle', 'end', 'inherit'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Vertical aligment for text (`\"top\"`, `\"middle\"`, `\"bottom\"`)\r\n\r\n    @property verticalAlign\r\n    @type String\r\n    @default \"middle\"\r\n  */\r\n  verticalAlign: property('verticalAlign', {\r\n    default_value: 'middle',\r\n    validate: function(value) {\r\n      return contains(['top', 'middle', 'bottom'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Style object containing styles for text\r\n\r\n    @property style\r\n    @type Object\r\n    @default {}\r\n  */\r\n  style: property('style', {\r\n    default_value: {},\r\n    get: function(value) {\r\n      return style(value) || null;\r\n    }\r\n  }),\r\n\r\n  onDataBind: function onDataBind(selection) {\r\n    return selection.selectAll('text')\r\n      .data([0]);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('text');\r\n  },\r\n  onMerge: function onMerge(selection) {\r\n    selection\r\n      .attr('transform', this.transformation())\r\n      .attr('style', this.style())\r\n      .attr('text-anchor', this.anchor())\r\n      .attr('class', this.options()['class'])\r\n      .text(this.text());\r\n  },\r\n\r\n  transformation: function() {\r\n    var x = {\r\n      left: 0,\r\n      center: this.width() / 2,\r\n      right: this.width()\r\n    }[this.textAlign()];\r\n    var y = {\r\n      top: 0,\r\n      middle: this.height() / 2,\r\n      bottom: this.height()\r\n    }[this.verticalAlign()];\r\n\r\n    var translation = translate(x, y);\r\n    var rotation = rotate(this.rotation());\r\n\r\n    return translation + ' ' + rotation;\r\n  }\r\n}), {\r\n  z_index: 70\r\n});\r\n\r\nfunction textOptions(id, options, default_options) {\r\n  if (!options) {\r\n    options = id;\r\n    id = undefined;\r\n  }\r\n  if (isString(options))\r\n    options = {text: options};\r\n\r\n  return extend({id: id}, default_options, options);\r\n}\r\n\r\nfunction text(id, options) {\r\n  return textOptions(id, options, {type: 'Text'});\r\n}\r\n\r\nexport {\r\n  Text as default,\r\n  text,\r\n  textOptions\r\n};\r\n","import {\r\n  getMargins,\r\n  property\r\n} from '../helpers';\r\nimport Text, { textOptions } from './Text';\r\n\r\n/**\r\n  Title component that extends Text with defaults (styling, sensible margins, and rotated when positioned left or right)\r\n\r\n  @class Title\r\n  @extends Text\r\n*/\r\nvar Title = Text.extend('Title', {\r\n  initialize: function() {\r\n    this.base.select('.chart-text').classed('chart-title', true);\r\n  },\r\n\r\n  /**\r\n    Margins (in pixels) around Title\r\n\r\n    @property margins\r\n    @type Object\r\n    @default (set based on `position`)\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, defaultMargins(this.position()))\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return defaultMargins(this.position());\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Rotation of title. (Default is `-90` for `position = \"right\"`, `90` for `position = \"left\"`, and `0` otherwise).\r\n\r\n    @property rotation\r\n    @type Number\r\n    @default (set based on `position`)\r\n  */\r\n  rotation: property('rotation', {\r\n    default_value: function() {\r\n      var rotate_by_position = {\r\n        right: 90,\r\n        left: -90\r\n      };\r\n\r\n      return rotate_by_position[this.position()] || 0;\r\n    }\r\n  })\r\n});\r\n\r\nfunction defaultMargins(position) {\r\n  var default_margin = 8;\r\n  var margins_by_position = {\r\n    top: {top: default_margin, bottom: default_margin},\r\n    right: {right: default_margin, left: default_margin},\r\n    bottom: {top: default_margin, bottom: default_margin},\r\n    left: {right: default_margin, left: default_margin}\r\n  };\r\n  return getMargins(margins_by_position[position]);\r\n}\r\n\r\nfunction title(id, options) {\r\n  return textOptions(id, options, {type: 'Title'});\r\n}\r\n\r\nexport {\r\n  Title as default,\r\n  title\r\n};\r\n","import d3 from 'd3';\nimport {\n  contains,\n  extend,\n  isUndefined\n} from '../utils';\nimport {\n  property,\n  translate,\n  mixin,\n  createHelper\n} from '../helpers';\nimport {\n  XY,\n  Transition,\n  StandardLayer\n} from '../mixins';\nimport Component from '../Component';\n\n/**\n  Axis component for XY data (wraps `d3.axis`).\n\n  Available d3.axis extensions:\n\n  - `ticks`\n  - `tickValues`\n  - `tickSize`\n  - `innerTickSize`\n  - `outerTickSize`\n  - `tickPadding`\n  - `tickFormat`\n\n  ### Extending\n\n  To extend the `Axis` component, the following methods are available:\n\n  - `onInsert`\n  - `onEnter`\n  - `onEnterTransition`\n  - `onUpdate`\n  - `onUpdateTransition`\n  - `onMerge`\n  - `onMergeTransition`\n  - `onExit`\n  - `onExitTransition`\n\n  @example\n  ```js\n  d3.select('#chart')\n    .chart('Compose', function(data) {\n      var scales = {\n        x: {data: data, key: 'x'},\n        y: {data: data, key: 'y'}\n      };\n\n      return {\n        components: {\n          'x.axis': {\n            type: 'Axis',\n            position: 'bottom',\n            scale: scales.x\n          },\n          'y.axis': {\n            type: 'Axis',\n            position: 'left',\n            scale: scales.y\n          }\n        }\n      };\n    });\n  ```\n  @class Axis\n  @extends Component, XY, Transition, StandardLayer\n*/\nvar Axis = Component.extend('Axis', mixin(XY, Transition, StandardLayer, {\n  initialize: function() {\n    // Store previous values for transitioning\n    this.previous = {};\n\n    // Create two axes (so that layout and transitions work)\n    // 1. Display and transitions\n    // 2. Layout (draw to get width, but separate so that transitions aren't affected)\n    this.axis = d3.svg.axis();\n\n    this.axis_base = this.base.append('g').attr('class', 'chart-axis');\n    this._layout_base = this.base.append('g')\n      .attr('class', 'chart-axis chart-layout')\n      .attr('style', 'display: none;');\n\n    // Use standard layer for extensibility\n    this.standardLayer('Axis', this.axis_base);\n\n    this.layer('_LayoutAxis', this._layout_base, {\n      dataBind: function() {\n        return this.selectAll('g').data([0]);\n      },\n      insert: function() {\n        return this.chart().onInsert(this);\n      },\n      events: {\n        'enter': function() {\n          this.chart().onEnter(this);\n        },\n        'merge': function() {\n          this.chart().onMerge(this);\n        }\n      }\n    });\n  },\n\n  /**\n    Scale to pass to d3.axis\n\n    - If `xScale`/`yScale` are given, `scale` is set automatically based on `position`.\n    - Can be `d3.scale` or, if `Object` is given, `helpers.createScale` is used\n\n    @example\n    ```js\n    // Set with d3.scale directly\n    axis.scale(d3.scale());\n\n    // or with Object passed helpers.createScale\n    axis.scale({data: data, key: 'x'});\n\n    // For x0/y0 position, both xScale and yScale needed\n    // (scale is automatically set by position)\n    axis.xScale({domain: [0, 100]});\n    axis.yScale({domain: [0, 10]});\n    axis.position('y0');\n\n    // -> axis.scale() -> axis.xScale by default\n    ```\n    @property scale\n    @type Object|d3.scale\n  */\n  scale: property('scale', {\n    type: 'Function',\n    set: function(value, previous) {\n      this.previous = this.previous || {};\n      this.previous.scale = previous;\n\n      if (this.orientation() == 'vertical') {\n        this.yScale(value);\n        value = this.yScale();\n      }\n      else {\n        this.xScale(value);\n        value = this.xScale();\n      }\n\n      return {\n        override: value\n      };\n    }\n  }),\n\n  /**\n    Position axis relative to chart\n    (top, right, bottom, left)\n\n    Note: x0 and y0 are currently disabled for more testing\n\n    @property position\n    @type String\n    @default bottom\n  */\n  position: property('position', {\n    default_value: 'bottom',\n    validate: function(value) {\n      return contains(['top', 'right', 'bottom', 'left'], value);\n    },\n    set: function() {\n      // Update scale -> xScale/yScale when position changes\n      if (this.scale())\n        this.scale(this.scale());\n    }\n  }),\n\n  /**\n    {x,y} translation of axis relative to chart\n    (set by default based on position)\n\n    @property translation\n    @type Object\n    @default (set based on position)\n  */\n  translation: property('translation', {\n    default_value: function() {\n      switch (this.position()) {\n        case 'top':\n          return {x: 0, y: 0};\n        case 'right':\n          return {x: this.width(), y: 0};\n        case 'bottom':\n          return {x: 0, y: this.height()};\n        case 'left':\n          return {x: 0, y: 0};\n        case 'x0':\n          return {x: this.x0(), y: 0};\n        case 'y0':\n          return {x: 0, y: this.y0()};\n      }\n    },\n    get: function(value) {\n      return translate(value);\n    }\n  }),\n\n  /**\n    Axis orient for ticks\n    (set by default based on position)\n\n    @property orient\n    @type String\n    @default (set based on position)\n  */\n  orient: property('orient', {\n    default_value: function() {\n      var orient = this.position();\n\n      if (orient == 'x0')\n        orient = 'left';\n      else if (orient == 'y0')\n        orient = 'bottom';\n\n      return orient;\n    }\n  }),\n\n  /**\n    Axis orientation (vertical or horizonal)\n\n    @property orientation\n    @type String\n    @default (set based on position)\n  */\n  orientation: property('orientation', {\n    validate: function(value) {\n      return contains(['horizontal', 'vertical'], value);\n    },\n    default_value: function() {\n      return {\n        top: 'horizontal',\n        right: 'vertical',\n        bottom: 'horizontal',\n        left: 'vertical',\n        x0: 'vertical',\n        y0: 'horizontal'\n      }[this.position()];\n    },\n    set: function() {\n      // Update scale -> xScale/yScale when orientation changes\n      if (this.scale())\n        this.scale(this.scale());\n    }\n  }),\n\n  // d3.axis extensions\n  ticks: property('ticks', {type: 'Function'}),\n  tickValues: property('tickValues', {type: 'Function'}),\n  tickSize: property('tickSize', {type: 'Function'}),\n  innerTickSize: property('innerTickSize', {type: 'Function'}),\n  outerTickSize: property('outerTickSize', {type: 'Function'}),\n  tickPadding: property('tickPadding', {type: 'Function'}),\n  tickFormat: property('tickFormat', {type: 'Function'}),\n\n  // Store previous value for xScale, yScale, and duration\n  xScale: property('xScale', {\n    type: 'Function',\n    set: function(value, previous) {\n      this.previous = this.previous || {};\n      this.previous.xScale = previous;\n\n      return XY.xScale.options.set.call(this, value, previous);\n    },\n    get: function(scale) {\n      return XY.xScale.options.get.call(this, scale);\n    }\n  }),\n\n  yScale: property('yScale', {\n    type: 'Function',\n    set: function(value, previous) {\n      this.previous = this.previous || {};\n      this.previous.yScale = previous;\n\n      return XY.yScale.options.set.call(this, value, previous);\n    },\n    get: function(scale) {\n      return XY.yScale.options.get.call(this, scale);\n    }\n  }),\n\n  duration: property('duration', {\n    set: function(value, previous) {\n      this.previous = this.previous || {};\n      this.previous.duration = previous;\n\n      return Transition.duration.options.set.call(this, value, previous);\n    },\n    default_value: Transition.duration.default_value\n  }),\n\n  onDataBind: function onDataBind(selection) {\n    // Setup axis (scale and properties)\n    this._setupAxis(this.axis);\n\n    // Force addition of just one axis with dummy data array\n    // (Axis will be drawn using underlying chart scales)\n    return selection.selectAll('g').data([0]);\n  },\n  onInsert: function onInsert(selection) {\n    return selection.append('g');\n  },\n  onEnter: function onEnter(selection) {\n    // Place and render axis\n    selection.call(this.axis);\n  },\n  onMerge: function onUpdate(selection) {\n    selection.attr('transform', this.translation());\n  },\n  onUpdateTransition: function onUpdateTransition(selection) {\n    // Render axis (with transition)\n    this.setupTransition(selection);\n\n    if (this._skip_transition) {\n      selection.duration(0);\n      this._skip_transition = undefined;\n    }\n\n    selection.call(this.axis);\n  },\n  onExit: function onExit(selection) {\n    selection.selectAll('g').remove();\n  },\n\n  getLayout: function(data) {\n    // 1. Get previous values to restore after draw for proper transitions\n    var state = this.getState();\n\n    // 2. Draw with current values\n    this.draw(data);\n\n    // 3. Calculate layout\n    // (make layout axis visible for width calculations in Firefox)\n    this._layout_base.attr('style', 'display: block;');\n\n    var label_overhang = this._getLabelOverhang();\n\n    this._layout_base.attr('style', 'display: none;');\n\n    // 4. Draw with previous values\n    if (this._previous_raw_data) {\n      this.setState(extend(state.previous, {duration: 0}));\n\n      this.draw(this._previous_raw_data);\n\n      // 5. Restore current values\n      this.setState(state.current);\n    }\n    else {\n      // Skip transition after layout\n      // (Can transition from unexpected state)\n      this._skip_transition = true;\n    }\n\n    // Store raw data for future layout\n    this._previous_raw_data = data;\n\n    var position = this.position();\n    if (position == 'x0')\n      position = 'bottom';\n    else if (position == 'y0')\n      position = 'right';\n\n    return {\n      position: position,\n      width: label_overhang.width,\n      height: label_overhang.height\n    };\n  },\n  setLayout: function() {\n    // Axis is positioned with chartBase, so don't set layout\n    return;\n  },\n\n  getState: function() {\n    return {\n      previous: this.previous,\n      current: {\n        scale: this.scale(),\n        xScale: this.xScale(),\n        yScale: this.yScale(),\n        duration: this.duration()\n      }\n    };\n  },\n  setState: function(state) {\n    this\n      .xScale(state.xScale)\n      .yScale(state.yScale)\n      .scale(state.scale)\n      .duration(state.duration);\n  },\n\n  _setupAxis: function(axis) {\n    // Setup axis\n    if (this.orientation() == 'vertical')\n      axis.scale(this.yScale());\n    else\n      axis.scale(this.xScale());\n\n    var extensions = ['orient', 'ticks', 'tickValues', 'tickSize', 'innerTickSize', 'outerTickSize', 'tickPadding', 'tickFormat'];\n    var array_extensions = ['tickValues'];\n    extensions.forEach(function(key) {\n      var value = this[key] && this[key]();\n      if (!isUndefined(value)) {\n        // If value is array, treat as arguments array\n        // otherwise, pass in directly\n        if (Array.isArray(value) && !contains(array_extensions, key))\n          axis[key].apply(axis, value);\n        else\n          axis[key](value);\n      }\n    }, this);\n  },\n\n  _getLabelOverhang: function() {\n    // TODO Look into overhang relative to chartBase (for x0, y0)\n    var overhangs = {width: [0], height: [0]};\n    var orientation = this.orientation();\n\n    this._layout_base.selectAll('g').each(function() {\n      try {\n        // There are cases where getBBox may throw\n        // (e.g. not currently displayed in Firefox)\n        var bbox = this.getBBox();\n\n        if (orientation == 'horizontal')\n          overhangs.height.push(bbox.height);\n        else\n          overhangs.width.push(bbox.width);\n      }\n      catch (ex) {\n        // Ignore error\n      }\n    });\n\n    return {\n      width: d3.max(overhangs.width),\n      height: d3.max(overhangs.height)\n    };\n  }\n}), {\n  layer_type: 'chart',\n  z_index: 60\n});\n\nvar axis = createHelper('Axis');\n\nexport {\n  Axis as default,\n  axis\n};\n","import {\r\n  getMargins,\r\n  property\r\n} from '../helpers';\r\nimport { textOptions } from './Text';\r\nimport Title from './Title';\r\n\r\n/**\r\n  Axis title component that extends Title with defaults (styling)\r\n\r\n  @class AxisTitle\r\n  @extends Title\r\n*/\r\nvar AxisTitle = Title.extend('AxisTitle', {\r\n  initialize: function() {\r\n    this.base.select('.chart-text')\r\n      .classed('chart-title', false)\r\n      .classed('chart-axis-title', true);\r\n  },\r\n\r\n  /**\r\n    Margins (in pixels) around axis title\r\n\r\n    @property margins\r\n    @type Object\r\n    @default (set based on `position`)\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, defaultMargins(this.position()))\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return defaultMargins(this.position());\r\n    }\r\n  })\r\n});\r\n\r\nfunction defaultMargins(position) {\r\n  var default_margin = 8;\r\n  var margins_by_position = {\r\n    top: {top: default_margin / 2, bottom: default_margin},\r\n    right: {left: default_margin / 2, right: default_margin},\r\n    bottom: {bottom: default_margin / 2, top: default_margin},\r\n    left: {right: default_margin / 2, left: default_margin}\r\n  };\r\n\r\n  return getMargins(margins_by_position[position]);\r\n}\r\n\r\nfunction axisTitle(id, options) {\r\n  return textOptions(id, options, {type: 'AxisTitle'});\r\n}\r\n\r\nexport {\r\n  AxisTitle as default,\r\n  axisTitle\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  compact,\r\n  contains,\r\n  find\r\n} from '../utils';\r\nimport {\r\n  alignText,\r\n  createHelper,\r\n  di,\r\n  getMargins,\r\n  isSeriesData,\r\n  mixin,\r\n  property,\r\n  stack,\r\n  translate\r\n} from '../helpers';\r\nimport { StandardLayer } from '../mixins';\r\nimport Component from '../Component';\r\nvar default_legend_margins = {top: 8, right: 8, bottom: 8, left: 8};\r\n\r\n/**\r\n  Legend component that can automatically pull chart and series information from d3.compose\r\n\r\n  Notes:\r\n\r\n  - To exclude a chart from the legend, use `exclude_from_legend = true` in chart prototype or options\r\n  - To exclude a series from the legend, use `exclude_from_legend = true` in series object\r\n  - To add swatch for custom chart, use `Legend.registerSwatch()`\r\n\r\n  ### Extending\r\n\r\n  To extend the `Legend` component, the following methods are available:\r\n\r\n  - `itemKey`\r\n  - `itemText`\r\n  - `swatchClass`\r\n  - `createSwatch`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      var input = [{key: 'input', name: 'Input', values: data.input}];\r\n      var output = [\r\n        {key: 'output1', name: 'Output 1', values: data.output1},\r\n        {key: 'output2', name: 'Output 2', values: data.output2}\r\n      ];\r\n\r\n      return {\r\n        charts: {\r\n          a: {type: 'Lines', data: input}, // ...\r\n          b: {type: 'Bars', data: output} // ...\r\n        },\r\n        components: {\r\n          legend: {\r\n            type: 'Legend',\r\n            charts: ['a', 'b']\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n  // -> automatically creates legend from series data for 'a' and 'b'\r\n  //    (Lines Swatch) Input\r\n  //    (Bars Swatch) Output 1\r\n  //    (Bars Swatch) Output 2\r\n\r\n  // or, manually set data for legend\r\n  return {\r\n    components: {\r\n      legend: {\r\n        type: 'Legend',\r\n        data: [\r\n          {type: 'Lines', text: 'Input', class: 'series-index-0'},\r\n          {type: 'Bars', text: 'Output 1', class: 'series-index-0'},\r\n          {type: 'Bars', text: 'Output 2', class: 'series-index-1'},\r\n        ]\r\n      }\r\n    }\r\n  };\r\n  ```\r\n  @class Legend\r\n  @extends Component, StandardLayer\r\n*/\r\nvar Legend = Component.extend('Legend', mixin(StandardLayer, {\r\n  initialize: function() {\r\n    this.legend_base = this.base.append('g').classed('chart-legend', true);\r\n    this.standardLayer('Legend', this.legend_base);\r\n  },\r\n\r\n  /**\r\n    Array of chart keys from container to display in legend\r\n\r\n    @example\r\n    ```js\r\n    d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      return {\r\n        charts: {\r\n          a: {},\r\n          b: {},\r\n          c: {}\r\n        },\r\n        components: {\r\n          legend: {\r\n            type: 'Legend',\r\n            charts: ['a', 'c']\r\n          }\r\n        }\r\n      };\r\n    });\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property('charts'),\r\n\r\n  /**\r\n    Dimensions of \"swatch\"\r\n\r\n    @property swatchDimensions\r\n    @type Object\r\n    @default {width: 20, height: 20}\r\n  */\r\n  swatchDimensions: property('swatchDimensions', {\r\n    default_value: {width: 20, height: 20}\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around legend\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 8, right: 8, bottom: 8, left: 8}\r\n  */\r\n  margins: property('margins', {\r\n    default_value: default_legend_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_legend_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Direction to \"stack\" legend, \"vertical\" or \"horizontal\".\r\n    (Default is set based on position: top/bottom = \"horizontal\", left/right = \"vertical\")\r\n\r\n    @property stackDirection\r\n    @type String\r\n    @default (based on position)\r\n  */\r\n  stackDirection: property('stackDirection', {\r\n    validate: function(value) {\r\n      return contains(['vertical', 'horizontal'], value);\r\n    },\r\n    default_value: function() {\r\n      var direction_by_position = {\r\n        top: 'horizontal',\r\n        right: 'vertical',\r\n        bottom: 'horizontal',\r\n        left: 'vertical'\r\n      };\r\n      return direction_by_position[this.position()];\r\n    }\r\n  }),\r\n\r\n  transform: function(data) {\r\n    if (this.charts()) {\r\n      // Pull legend data from charts\r\n      var charts = this.container.charts();\r\n      data = this.charts().reduce(function(combined_data, chart_id) {\r\n        var chart = find(charts, function(find_chart) { return find_chart.id == chart_id; });\r\n\r\n        // Check for exclude from legend option\r\n        if (!chart || chart.exclude_from_legend || chart.options().exclude_from_legend)\r\n          return combined_data;\r\n\r\n        var chart_data = this.container.demux(chart_id, this.container.data());\r\n        if (!isSeriesData(chart_data))\r\n          chart_data = [chart_data];\r\n\r\n        var legend_data = chart_data.reduce(function(memo, series, index) {\r\n          // Check for exclude from legend option on series\r\n          if (series && !series.exclude_from_legend) {\r\n            memo.push({\r\n              text: series.name || 'Series ' + (index + 1),\r\n              key: chart_id + '.' + (series.key || index),\r\n              type: chart.type,\r\n              'class': compact([\r\n                'chart-series',\r\n                'chart-index-' + index,\r\n                chart.options()['class'],\r\n                series['class']\r\n              ]).join(' ')\r\n            });\r\n          }\r\n\r\n          return memo;\r\n        }, []);\r\n\r\n        return combined_data.concat(legend_data);\r\n      }.bind(this), []);\r\n    }\r\n\r\n    return data;\r\n  },\r\n\r\n  // Key for legend item (default is key from data)\r\n  itemKey: di(function(chart, d) {\r\n    return d.key;\r\n  }),\r\n\r\n  // Text for legend item (default is text from data)\r\n  itemText: di(function(chart, d) {\r\n    return d.text;\r\n  }),\r\n\r\n  // Class to apply to swatch (default is class from data)\r\n  swatchClass: di(function(chart, d) {\r\n    return d['class'];\r\n  }),\r\n\r\n  // Create swatch (using registered swatches based on type from data)\r\n  createSwatch: di(function(chart, d, i) {\r\n    var selection = d3.select(this);\r\n\r\n    // Clear existing swatch\r\n    selection.selectAll('*').remove();\r\n    selection\r\n      .attr('class', chart.swatchClass);\r\n\r\n    var swatches = d3.chart('Legend').swatches;\r\n    if (!swatches)\r\n      return;\r\n\r\n    if (d && d.type && swatches[d.type])\r\n      swatches[d.type].call(selection, chart, d, i);\r\n    else if (swatches['default'])\r\n      swatches['default'].call(selection, chart, d, i);\r\n  }),\r\n\r\n  onDataBind: function onDataBind(selection, data) {\r\n    return selection.selectAll('.chart-legend-group')\r\n      .data(data, this.itemKey);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    var groups = selection.append('g')\r\n      .attr('class', 'chart-legend-group')\r\n      .style('pointer-events', 'all')\r\n      .on('mouseenter', function(d, i) {\r\n        this.container.trigger('mouseenter:legend', this._itemDetails(d, i));\r\n      }.bind(this))\r\n      .on('mousemove', function(d, i) {\r\n        this.container.trigger('mousemove:legend', this._itemDetails(d, i));\r\n      }.bind(this))\r\n      .on('mouseleave', function(d, i) {\r\n        this.container.trigger('mouseleave:legend', this._itemDetails(d, i));\r\n      }.bind(this));\r\n\r\n    groups.append('g')\r\n      .attr('width', this.swatchDimensions().width)\r\n      .attr('height', this.swatchDimensions().height)\r\n      .attr('class', 'chart-legend-swatch');\r\n    groups.append('text')\r\n      .attr('class', 'chart-legend-label');\r\n\r\n    groups.append('rect')\r\n      .attr('class', 'chart-legend-hover')\r\n      .style('visibility', 'hidden');\r\n\r\n    return groups;\r\n  },\r\n  onMerge: function onMerge(selection) {\r\n    var swatch = this.swatchDimensions();\r\n\r\n    selection.select('.chart-legend-swatch').each(this.createSwatch);\r\n\r\n    selection.select('.chart-legend-label')\r\n      .text(this.itemText)\r\n      .each(function() {\r\n        // Vertically center text\r\n        var offset = alignText(this, swatch.height);\r\n        d3.select(this)\r\n          .attr('transform', translate(swatch.width + 5, offset));\r\n      });\r\n\r\n    // Position groups after positioning everything inside\r\n    selection.call(stack({\r\n      direction: this.stackDirection(),\r\n      origin: 'top',\r\n      padding: 5,\r\n      min_height: swatch.height,\r\n      min_width: swatch.width\r\n    }));\r\n\r\n    // Position hover listeners\r\n    var sizes = [];\r\n    selection.each(function() {\r\n      sizes.push(this.getBBox());\r\n    });\r\n    selection.select('.chart-legend-hover').each(function() {\r\n      var size = sizes.shift();\r\n      d3.select(this)\r\n        .attr('width', size.width)\r\n        .attr('height', size.height);\r\n    });\r\n  },\r\n  onExit: function onExit(selection) {\r\n    selection.remove();\r\n  },\r\n\r\n  _itemDetails: function _itemDetails(d, i) {\r\n    return {\r\n      legend: this,\r\n      d: d,\r\n      i: i\r\n    };\r\n  }\r\n}), {\r\n  z_index: 200,\r\n  swatches: {\r\n    'default': function(chart) {\r\n      var swatch_dimensions = chart.swatchDimensions();\r\n\r\n      this.append('circle')\r\n        .attr('cx', swatch_dimensions.width / 2)\r\n        .attr('cy', swatch_dimensions.height / 2)\r\n        .attr('r', d3.min([swatch_dimensions.width, swatch_dimensions.height]) / 2)\r\n        .attr('class', 'chart-swatch');\r\n    }\r\n  },\r\n\r\n  /**\r\n    Register a swatch create function for the given chart type\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Legend').registerSwatch(['Lines'], function(chart, d, i) {\r\n      var dimensions = chart.swatchDimensions();\r\n\r\n      return this.append('line')\r\n        .attr('x1', 0).attr('y1', dimensions.height / 2)\r\n        .attr('x2', dimensions.width).attr('y2', dimensions.height / 2)\r\n        .attr('class', 'chart-line');\r\n    });\r\n    ```\r\n    @method registerSwatch\r\n    @static\r\n    @param {Array|String} types Chart type(s)\r\n    @param {Function} create \"di\" function that inserts swatch\r\n  */\r\n  registerSwatch: function(types, create) {\r\n    if (!Array.isArray(types))\r\n      types = [types];\r\n\r\n    types.forEach(function(type) {\r\n      this.swatches[type] = create;\r\n    }, this);\r\n  }\r\n});\r\n\r\n// Create line swatch for Line and LineValues\r\nLegend.registerSwatch(['Lines'], function(chart) {\r\n  var swatch_dimensions = chart.swatchDimensions();\r\n\r\n  return this.append('line')\r\n    .attr('x1', 0).attr('y1', swatch_dimensions.height / 2)\r\n    .attr('x2', swatch_dimensions.width).attr('y2', swatch_dimensions.height / 2)\r\n    .attr('class', 'chart-line');\r\n});\r\n\r\n// Create bars swatch for Bars and StackedBars\r\nLegend.registerSwatch(['Bars', 'StackedBars', 'HorizontalBars', 'HorizontalStackedBars'], function(chart) {\r\n  var swatch_dimensions = chart.swatchDimensions();\r\n\r\n  return this.append('rect')\r\n    .attr('x', 0).attr('y', 0)\r\n    .attr('width', swatch_dimensions.width).attr('height', swatch_dimensions.height)\r\n    .attr('class', 'chart-bar');\r\n});\r\n\r\nvar legend = createHelper('Legend');\r\n\r\nexport {\r\n  Legend as default,\r\n  legend\r\n};\r\n","import {\r\n  extend,\r\n  isString,\r\n  defaults,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  Extensions are used for defining options for d3.compose that wrap common behavior, reduce boilerplate,\r\n  and provide helpers for composing charts and components.\r\n\r\n  @class extensions\r\n*/\r\n\r\n// TODO Integrate xy defaults (e.g. margins) into standard charts/components\r\n/**\r\n  XY extension (DEPRECATED)\r\n  Generate d3.compose options for XY charts\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      var scales = {\r\n        x: {}, // ...\r\n        y: {}, // ...\r\n        y2: {} // ...\r\n      };\r\n\r\n      return d3.compose.xy({\r\n        // charts and components as normal\r\n        charts: {\r\n          bars: {type: 'Bars'}, // ...\r\n          lines: {type: 'Lines'} // ...\r\n        },\r\n        components: {}, // ...\r\n\r\n        // Axes:\r\n        // type: 'Axis'\r\n        // position: x -> 'bottom', y -> 'left', x2 -> 'top', y2: 'right'\r\n        axes: {\r\n          x: {scale: scales.x, title: 'X Axis'},\r\n          y: {scale: scales.y, title: 'Y Axis'},\r\n          y2: {scale: scales.y2, title: 'Y2 Axis'}\r\n        },\r\n        title: 'Chart Title',\r\n        legend: true\r\n      });\r\n\r\n      // transforms to\r\n      return {\r\n        charts: {\r\n          bars: {type: 'Bars'},\r\n          lines: {type: 'Lines'}\r\n        },\r\n        components: {\r\n          // ...\r\n          'axis.x': {type: 'Axis', position: 'bottom', scale: scales.x},\r\n          'axis.x.title': {type: 'Title', position: 'bottom', text: 'X Axis'},\r\n          'axis.y': {type: 'Axis', position: 'left', scale: scales.y},\r\n          'axis.y.title': {type: 'Title', position: 'left', text: 'Y Axis'},\r\n          'axis.y2': {type: 'Axis', position: 'right', scale: scales.y2},\r\n          'axis.y2.title': {type: 'Title', position: 'right', text: 'Y2 Axis'},\r\n          title: {type: 'Title', position: 'top', text: 'Chart Title'},\r\n          legend: {type: 'Legend', position: 'right', charts: ['bars', 'lines']}\r\n        }\r\n      };\r\n    })\r\n  ```\r\n  @method d3.compose.xy\r\n  @for extensions\r\n  @param {Object} options\r\n  @param {Object} [options.charts] Standard d3.compose charts options\r\n  @param {Object} [options.components] Standard d3.compose components options\r\n  @param {Object} [options.axes] Set of axes components with defaults (type: 'Axis', position: (by key: x -> 'bottom', y -> 'left', x2 -> 'top', y2: 'right')) and 'title' that creates matched title component\r\n  @param {String|Object} [options.title] Title text (with defaults) or options\r\n  @param {Boolean|Object} [options.legend] Show legend (with defaults) or legend options\r\n*/\r\nexport default function xy(options) {\r\n  options = options || {};\r\n  var charts = extend({}, options.charts);\r\n  var components = {};\r\n  var default_margin = 8;\r\n  var default_margins = {top: default_margin, right: default_margin, bottom: default_margin, left: default_margin};\r\n\r\n  // Title\r\n  if (options.title) {\r\n    var title_options = options.title;\r\n    if (isString(title_options))\r\n      title_options = {text: title_options};\r\n\r\n    title_options = defaults({}, title_options, {\r\n      type: 'Title',\r\n      position: 'top',\r\n      margins: default_margins\r\n    });\r\n\r\n    components.title = title_options;\r\n  }\r\n\r\n  // Axes\r\n  objectEach(options.axes, function(axis_options, key) {\r\n    var positionByKey = {\r\n      x: 'bottom',\r\n      y: 'left',\r\n      x2: 'top',\r\n      y2: 'right',\r\n      secondaryX: 'top',\r\n      secondaryY: 'right'\r\n    };\r\n\r\n    axis_options = defaults({}, axis_options, {\r\n      type: 'Axis',\r\n      position: positionByKey[key]\r\n    });\r\n\r\n    components['axis.' + key] = axis_options;\r\n\r\n    if (axis_options.title) {\r\n      var axis_title_options = axis_options.title;\r\n      if (isString(axis_title_options))\r\n        axis_title_options = {text: axis_title_options};\r\n\r\n      axis_title_options = defaults({}, axis_title_options, {\r\n        type: 'AxisTitle',\r\n        position: axis_options.position,\r\n        margins: defaults({\r\n          top: {top: default_margin / 2},\r\n          right: {left: default_margin / 2},\r\n          bottom: {bottom: default_margin / 2},\r\n          left: {right: default_margin / 2}\r\n        }[axis_options.position], default_margins)\r\n      });\r\n\r\n      components['axis.' + key + '.title'] = axis_title_options;\r\n    }\r\n  });\r\n\r\n  // Legend\r\n  if (options.legend) {\r\n    var legend_options = options.legend;\r\n    if (legend_options === true)\r\n      legend_options = {};\r\n\r\n    legend_options = defaults({}, legend_options, {\r\n      type: 'Legend',\r\n      position: 'right',\r\n      margins: default_margins\r\n    });\r\n\r\n    // By default, use all charts for legend\r\n    if (!legend_options.data && !legend_options.charts)\r\n      legend_options.charts = Object.keys(charts);\r\n\r\n    components.legend = legend_options;\r\n  }\r\n\r\n  return {\r\n    charts: charts,\r\n    components: extend(components, options.components)\r\n  };\r\n}\r\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nimport mixins from './src/mixins';\r\n\r\nimport Lines, { lines } from './src/charts/Lines';\r\nimport Bars, { bars } from './src/charts/Bars';\r\nimport StackedBars, { stackedBars } from './src/charts/StackedBars';\r\nimport HorizontalBars, { horizontalBars } from './src/charts/HorizontalBars';\r\nimport HorizontalStackedBars, { horizontalStackedBars } from './src/charts/HorizontalStackedBars';\r\nimport Labels, { labels } from './src/charts/Labels';\r\nimport HoverLabels, { hoverLabels } from './src/charts/HoverLabels';\r\n\r\nimport Text, { text } from './src/components/Text';\r\nimport Title, { title } from './src/components/Title';\r\nimport Axis, { axis } from './src/components/Axis';\r\nimport AxisTitle, { axisTitle } from './src/components/AxisTitle';\r\nimport Legend, { legend } from './src/components/Legend';\r\nimport InsetLegend, { insetLegend } from './src/components/InsetLegend';\r\n\r\nimport xy from './src/extensions/xy';\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered,\r\n\r\n  mixins: mixins,\r\n\r\n  Lines: Lines,\r\n  lines: lines,\r\n  Bars: Bars,\r\n  bars: bars,\r\n  StackedBars: StackedBars,\r\n  stackedBars: stackedBars,\r\n  HorizontalBars: HorizontalBars,\r\n  horizontalBars: horizontalBars,\r\n  HorizontalStackedBars: HorizontalStackedBars,\r\n  horizontalStackedBars: horizontalStackedBars,\r\n  Labels: Labels,\r\n  labels: labels,\r\n  HoverLabels: HoverLabels,\r\n  hoverLabels: hoverLabels,\r\n\r\n  Text: Text,\r\n  text: text,\r\n  Title: Title,\r\n  title: title,\r\n  Axis: Axis,\r\n  axis: axis,\r\n  AxisTitle: AxisTitle,\r\n  axisTitle: axisTitle,\r\n  Legend: Legend,\r\n  legend: legend,\r\n  InsetLegend: InsetLegend,\r\n  insetLegend: insetLegend,\r\n\r\n  xy: xy\r\n};\r\n\r\nexport default d3c;\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\n\r\n/**\r\n  TEMP Clear namespace from mixins\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nexport default d3.chart('Base', {\r\n  initialize: function(options) {\r\n    // Bind all di-functions to this chart\r\n    bindAllDi(this);\r\n\r\n    if (options)\r\n      this.options(options);\r\n  },\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property('data'),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property('a'),\r\n      b: property('b', {\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property('options', {\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  },\r\n\r\n  // Store fully-transformed data for reference\r\n  // (Base is last transform to be called, so stored data has been fully transformed)\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    this.data(data);\r\n    return data;\r\n  },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    this.trigger('before:draw', data);\r\n    d3.chart().prototype.draw.apply(this, arguments);\r\n    this.trigger('draw', data);\r\n  }\r\n});\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property('centered', {\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Chart', {}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: false` and the static `layer_type: 'Chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Component', {\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property('position', {\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property('width', {\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property('height', {\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property('centered', {\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      if (options.height)\r\n        y += (options.height - this.height()) / 2;\r\n      if (options.width)\r\n        x += (options.width - this.width()) / 2;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nexport default Component.extend('Overlay', {\r\n  initialize: function() {\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property('x', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property('y', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property('hidden', {\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property('style', {\r\n    default_value: function() {\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        transform: translate(this.x() + 'px', this.y() + 'px')\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n","import {\r\n  extend,\r\n  isUndefined,\r\n  isObject,\r\n  valueOrDefault\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  isSeriesData,\r\n  createScale,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling XY data\r\n\r\n  @class XY\r\n  @namespace mixins\r\n*/\r\nvar XY = {\r\n  initialize: function() {\r\n    // Set scale ranges once chart is ready to be rendered\r\n    this.on('before:draw', this.setScales.bind(this));\r\n  },\r\n\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    // Transform series data from values to x,y\r\n    if (isSeriesData(data)) {\r\n      data = data.map(function(series) {\r\n        return extend({}, series, {\r\n          values: series.values.map(normalizeData)\r\n        });\r\n      });\r\n    }\r\n    else if (Array.isArray(data)) {\r\n      data = data.map(normalizeData);\r\n    }\r\n\r\n    return data;\r\n\r\n    function normalizeData(point, index) {\r\n      if (!isObject(point))\r\n        point = {x: index, y: point};\r\n      else if (!Array.isArray(point) && isUndefined(point.x))\r\n        point.x = index;\r\n\r\n      return point;\r\n    }\r\n  },\r\n\r\n  /**\r\n    Get/set x-scale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  xScale: property('xScale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setXScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultXScale();\r\n        this.setXScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set yscale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  yScale: property('yScale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setYScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultYScale();\r\n        this.setYScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Key on data object for x-value\r\n\r\n    @property xKey\r\n    @type String\r\n    @default 'x'\r\n  */\r\n  xKey: property('xKey', {\r\n    default_value: 'x'\r\n  }),\r\n\r\n  /**\r\n    Key on data object for y-value\r\n\r\n    @property yKey\r\n    @type String\r\n    @default 'y'\r\n  */\r\n  yKey: property('yKey', {\r\n    default_value: 'y'\r\n  }),\r\n\r\n  /**\r\n    Get scaled x-value for given data-point\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y-value for given data-point\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get key for data-point. Looks for \"key\" on `d` first, otherwise uses x-value.\r\n\r\n    @method key\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Any}\r\n  */\r\n  key: di(function(chart, d, i) {\r\n    return valueOrDefault(d.key, chart.xValue.call(this, d, i));\r\n  }),\r\n\r\n  /**\r\n    Get scaled `x = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled `y = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get x-value for data-point. Checks for `xKey()` on `d` first, otherwise uses `d[0]`.\r\n\r\n    @example\r\n    ```js\r\n    xValue({x: 10, y: 20}); // -> 10\r\n    xValue([10, 20]); // -> 10\r\n    ```\r\n    @method xValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  xValue: di(function(chart, d) {\r\n    var key = chart.xKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[0];\r\n  }),\r\n\r\n  /**\r\n    Get y-value for data-point. Checks for `yKey()` on `d` first, otherwise uses `d[1]`.\r\n\r\n    @example\r\n    ```js\r\n    yValue({x: 10, y: 20}); // -> 20\r\n    yValue([10, 20]); // -> 20\r\n    ```\r\n    @method yValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  yValue: di(function(chart, d) {\r\n    var key = chart.yKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[1];\r\n  }),\r\n\r\n  /**\r\n    Set x- and y-scale ranges (using `setXScaleRange` and `setYScaleRange`)\r\n\r\n    @method setScales\r\n  */\r\n  setScales: function() {\r\n    this.setXScaleRange(this.xScale());\r\n    this.setYScaleRange(this.yScale());\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([0, this.width()]);\r\n  },\r\n\r\n  /**\r\n    Set range(height, 0) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Get default x-scale: `{data: this.data(), key: 'x'}`\r\n\r\n    @method getDefaultXScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'x'\r\n    });\r\n  },\r\n\r\n  /**\r\n    Get default y-scale: `{data: this.data(), key: 'y'}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultYScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'y'\r\n    });\r\n  }\r\n};\r\n\r\nexport default XY;\r\n","import { createScale } from '../helpers';\r\nimport { extend } from '../utils';\r\nimport XY from './xy';\r\n\r\n/**\r\n  Mixin for charts of centered key,value data (x: index, y: value, key)\r\n\r\n  @class XYValues\r\n  @namespace mixins\r\n  @extends XY\r\n*/\r\nvar XYValues = extend({}, XY, {\r\n  /**\r\n    Determine width of data-point when displayed adjacent\r\n\r\n    @method adjacentWidth\r\n    @return {Number}\r\n  */\r\n  adjacentWidth: function() {\r\n    var series_count = this.seriesCount ? this.seriesCount() : 1;\r\n    return this.layeredWidth() / series_count;\r\n  },\r\n\r\n  /**\r\n    Determine layered width (width of group for adjacent)\r\n\r\n    @method layeredWidth\r\n    @return {Number}\r\n  */\r\n  layeredWidth: function() {\r\n    var range_band = this.xScale() && this.xScale().rangeBand && this.xScale().rangeBand();\r\n    var width = isFinite(range_band) ? range_band : 0;\r\n\r\n    return width;\r\n  },\r\n\r\n  /**\r\n    Determine item width based on series display type (adjacent or layered)\r\n\r\n    @method itemWidth\r\n    @return {Number}\r\n  */\r\n  itemWidth: function() {\r\n    var scale = this.xScale();\r\n    return scale && scale.width ? scale.width() : this.layeredWidth();\r\n  },\r\n\r\n  // Override default x-scale to use ordinal type\r\n  /**\r\n    Override default x-scale to use ordinal type: `{type: 'ordinal', data: this.data(), key: 'y', centered: true}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      type: 'ordinal',\r\n      data: this.data(),\r\n      key: 'x',\r\n      centered: true\r\n    });\r\n  }\r\n});\r\n\r\nexport default XYValues;\r\n","import { di } from '../helpers';\r\n\r\n/**\r\n  Mixin for inverting XY calculations with x vertical, increasing bottom-to-top and y horizontal, increasing left-to-right\r\n\r\n  @class XYInverted\r\n  @namespace mixins\r\n*/\r\nvar XYInverted = {\r\n  /**\r\n    Get x-value for plotting (scaled y-value)\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get y-value for plotting (scaled x-value)\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y = 0 value (along x-axis)\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled x = 0 value (along y-axis)\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Set range (height, 0) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([0, this.width()]);\r\n  }\r\n};\r\n\r\nexport default XYInverted;\r\n","import d3 from 'd3';\r\nimport { property } from '../helpers';\r\nimport {\r\n  extend,\r\n  defaults,\r\n  isBoolean\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling labels in charts\r\n\r\n  @class Labels\r\n  @namespace mixins\r\n*/\r\nvar Labels = {\r\n  /**\r\n    Call during chart initialization to add labels to chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      initialize: function() {\r\n        // this.layer()...\r\n\r\n        // Attach labels layer\r\n        this.attachLabels();\r\n      }\r\n    }));\r\n    ```\r\n    @method attachLabels\r\n  */\r\n  attachLabels: function() {\r\n    var options = this.labels();\r\n    options.parent = this;\r\n\r\n    var LabelsClass = d3.chart(options.type);\r\n    var base = this.base.append('g').attr('class', 'chart-labels');\r\n    var labels = this._labels = new LabelsClass(base, options);\r\n\r\n    // Proxy x and y to parent chart\r\n    this.proxyLabelMethods.forEach(function(method) {\r\n      labels[method] = this[method];\r\n    }, this);\r\n\r\n    this.on('draw', function(data) {\r\n      options = this.labels();\r\n      options.parent = this;\r\n\r\n      labels.options(options);\r\n\r\n      if (options.display !== false)\r\n        labels.draw(options.data || data);\r\n      else\r\n        labels.draw([]);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Options passed to labels chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      // ...\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.labels(true); // -> display labels with defaults\r\n    chart.labels(false); // -> hide labels\r\n    chart.labels({offset: 10}); // -> pass options to labels chart\r\n\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        return {\r\n          charts: {\r\n            custom: {labels: {offset: 10}}\r\n          }\r\n        };\r\n      });\r\n    ```\r\n    @property labels\r\n    @type Object\r\n  */\r\n  labels: property('labels', {\r\n    get: function(value) {\r\n      if (isBoolean(value))\r\n        value = {display: value};\r\n      else if (!value)\r\n        value = {display: false};\r\n\r\n      return defaults({}, value, {\r\n        type: 'Labels'\r\n      });\r\n    }\r\n  }),\r\n\r\n  // Array of methods to proxy on labels chart\r\n  proxyLabelMethods: []\r\n};\r\n\r\n/**\r\n  Mixin for handling labels in XY charts\r\n  (proxies `x` and `y` to properly place labels for XY charts)\r\n\r\n  @class LabelsXY\r\n  @namespace mixins\r\n  @extends Labels\r\n*/\r\nvar LabelsXY = extend({}, Labels, {\r\n  proxyLabelMethods: ['x', 'y']\r\n});\r\n\r\nexport {\r\n  Labels as default,\r\n  LabelsXY\r\n};\r\n","import Series from './series';\r\nimport XY from './xy';\r\nimport XYValues from './xy-values';\r\nimport XYInverted from './xy-inverted';\r\nimport Labels, { LabelsXY } from './labels';\r\nimport Hover, { HoverPoints } from './hover';\r\nimport Transition from './transition';\r\nimport StandardLayer from './standard-layer';\r\n\r\nvar mixins = {\r\n  Series: Series,\r\n  XY: XY,\r\n  XYValues: XYValues,\r\n  XYInverted: XYInverted,\r\n  Labels: Labels,\r\n  LabelsXY: LabelsXY,\r\n  Hover: Hover,\r\n  HoverPoints: HoverPoints,\r\n  Transition: Transition,\r\n  StandardLayer: StandardLayer,\r\n\r\n  // DEPRECATED: renamed to XYInverted\r\n  InvertedXY: XYInverted,\r\n  // DEPRECATED: renamed to LabelsXY\r\n  XYLabels: LabelsXY\r\n};\r\n\r\nexport {\r\n  mixins as default,\r\n  Series,\r\n  XY,\r\n  XYValues,\r\n  XYInverted,\r\n  Labels,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  property,\r\n  di,\r\n  mixin,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XY,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Create an XY Lines chart with single or series data.\r\n\r\n  ### Extending\r\n\r\n  Great care has been taken in making the standard charts in d3.compose extensible.\r\n  To extend the `Lines` chart, the following methods are available:\r\n\r\n  - `createLine`\r\n  - `lineKey`\r\n  - `lineData`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  View the `Lines.js` source for the default implementation and more information on these methods.\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    return {\r\n      charts: {\r\n        input: {\r\n          type: 'Lines'\r\n          data: data.input,\r\n          // xScale: ...,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([1, 2, 3]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 3}]}\r\n    {values: [{x: 0, y: 3}, {x: 1, y: 2}, {x: 2, y: 1}]}\r\n  ]);\r\n  ```\r\n  @class Lines\r\n  @extends Chart, Series, XY, LabelsXY, Hover, HoverPoints, Transition, StandardLayer\r\n*/\r\nvar Lines = Chart.extend('Lines', mixin(\r\n  Series,\r\n  XY,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer,\r\n  {\r\n    initialize: function() {\r\n      this.lines = {};\r\n\r\n      // Use standard series layer for extensibility\r\n      // (dataBind, insert, and events defined in prototype)\r\n      this.standardSeriesLayer('Lines', this.base.append('g').classed('chart-lines', true));\r\n\r\n      this.attachLabels();\r\n    },\r\n\r\n    /**\r\n      Set interpolation mode for line\r\n\r\n      - See: [SVG-Shapes#line_interpolate](https://github.com/mbostock/d3/wiki/SVG-Shapes#line_interpolate)\r\n      - Set to `null` or `'linear'` for no interpolation\r\n\r\n      @property interpolate\r\n      @type String\r\n      @default monotone\r\n    */\r\n    interpolate: property('interpolate', {\r\n      default_value: 'monotone'\r\n    }),\r\n\r\n    // Create line on insert (keyed by series/index)\r\n    createLine: di(function(chart, d, i, j) {\r\n      var key = chart.lineKey.call(this, d, i, j);\r\n      var line = chart.lines[key] = d3.svg.line()\r\n        .x(chart.x)\r\n        .y(chart.y);\r\n\r\n      var interpolate = d.interpolate || chart.interpolate();\r\n      if (interpolate)\r\n        line.interpolate(interpolate);\r\n    }),\r\n\r\n    // Get key for line (from series key or index)\r\n    lineKey: di(function(chart, d, i, j) {\r\n      var key = chart.seriesKey(chart.seriesData.call(this, d, i, j));\r\n      return key != null ? key : chart.seriesIndex.call(this, d, i, j);\r\n    }),\r\n\r\n    // Get data for line\r\n    lineData: di(function(chart, d, i, j) {\r\n      var key = chart.lineKey.call(this, d, i, j);\r\n      if (chart.lines[key])\r\n        return chart.lines[key](d);\r\n    }),\r\n\r\n    // Override StandardLayer\r\n    onDataBind: function onDataBind(selection, data) {\r\n      return selection.selectAll('path')\r\n        .data(function(d, i, j) {\r\n          return [data.call(selection, d, i, j)];\r\n        });\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onInsert: function onInsert(selection) {\r\n      return selection.append('path')\r\n        .classed('chart-line', true)\r\n        .each(this.createLine);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onMergeTransition: function onMergeTransition(selection) {\r\n      this.setupTransition(selection);\r\n\r\n      selection\r\n        .attr('d', this.lineData)\r\n        .attr('style', this.itemStyle);\r\n    }\r\n  }\r\n));\r\n\r\nvar lines = createHelper('Lines');\r\n\r\nexport {\r\n  Lines as default,\r\n  lines\r\n};\r\n","import {\r\n  objectFind\r\n} from '../utils';\r\nimport {\r\n  mixin,\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XYValues,\r\n  LabelsXY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Bars chart with centered or adjacent display for single or series data.\r\n\r\n  To display bars for different series next to each other (adjacent),\r\n  use the `adjacent` option when creating the `xScale` (see example below).\r\n\r\n  ### Extending\r\n\r\n  To extend the `Bars` chart, the following methods are available:\r\n\r\n  - `barHeight`\r\n  - `barWidth`\r\n  - `barX`\r\n  - `barY`\r\n  - `barClass`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'Bars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class Bars\r\n  @extends Chart, Series, XYValues, LabelsXY, Hover, Transition, StandardLayer\r\n*/\r\nvar Bars = Chart.extend('Bars', mixin(\r\n  Series,\r\n  XYValues,\r\n  LabelsXY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer,\r\n  {\r\n    initialize: function() {\r\n      this.on('before:draw', function() {\r\n        this.offset_axis = this.getOffsetAxis();\r\n      }.bind(this));\r\n\r\n      // Use standard series layer for extensibility\r\n      // (dataBind, insert, and events defined in prototype)\r\n      this.standardSeriesLayer('Bars', this.base.append('g').classed('chart-bars', true));\r\n      this.attachLabels();\r\n    },\r\n\r\n    barHeight: di(function(chart, d, i) {\r\n      var height = Math.abs(chart.y0() - chart.y.call(this, d, i)) - chart.barOffset();\r\n      return height > 0 ? height : 0;\r\n    }),\r\n    barWidth: di(function(chart) {\r\n      return chart.itemWidth();\r\n    }),\r\n    barX: di(function(chart, d, i) {\r\n      return chart.x.call(this, d, i) - chart.itemWidth() / 2;\r\n    }),\r\n    barY: di(function(chart, d, i) {\r\n      var y = chart.y.call(this, d, i);\r\n      var y0 = chart.y0();\r\n\r\n      return y < y0 ? y : y0 + chart.barOffset();\r\n    }),\r\n    bar0: di(function(chart, d, i) {\r\n      var y0 = chart.y0();\r\n      var offset = chart.barOffset();\r\n      return chart.y.call(this, d, i) <= y0 ? y0 - offset : y0 + offset;\r\n    }),\r\n    barClass: di(function(chart, d) {\r\n      return 'chart-bar' + (d['class'] ? ' ' + d['class'] : '');\r\n    }),\r\n\r\n    // Shift bars slightly to account for axis thickness\r\n    barOffset: function barOffset() {\r\n      if (this.offset_axis) {\r\n        var axis_thickness = parseInt(this.offset_axis.base.select('.domain').style('stroke-width')) || 0;\r\n        return axis_thickness / 2;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n\r\n    getOffsetAxis: function getOffsetAxis() {\r\n      var components = this.container && this.container.components();\r\n      return objectFind(components, function(component) {\r\n        if (component.type == 'Axis' && component.position() == 'bottom')\r\n          return component;\r\n      });\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onDataBind: function onDataBind(selection, data) {\r\n      return selection.selectAll('rect')\r\n        .data(data, this.key);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onInsert: function onInsert(selection) {\r\n      return selection.append('rect')\r\n        .on('mouseenter', this.mouseEnterPoint)\r\n        .on('mouseleave', this.mouseLeavePoint);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onEnter: function onEnter(selection) {\r\n      selection\r\n        .attr('y', this.bar0)\r\n        .attr('height', 0);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onMerge: function onMerge(selection) {\r\n      selection\r\n        .attr('class', this.barClass)\r\n        .attr('style', this.itemStyle)\r\n        .attr('x', this.barX)\r\n        .attr('width', this.barWidth);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onMergeTransition: function onMergeTransition(selection) {\r\n      this.setupTransition(selection);\r\n\r\n      selection\r\n        .attr('y', this.barY)\r\n        .attr('height', this.barHeight);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onExit: function onExit(selection) {\r\n      selection.remove();\r\n    }\r\n  }\r\n));\r\n\r\nvar bars = createHelper('Bars');\r\n\r\nexport {\r\n  Bars as default,\r\n  bars\r\n};\r\n","import {\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport Bars from './Bars';\r\n\r\n/**\r\n  Bars chart with values stacked on top of each other\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        stacked_output: {\r\n          type: 'StackedBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class StackedBars\r\n  @extends Bars\r\n*/\r\nvar StackedBars = Bars.extend('StackedBars', {\r\n  transform: function(data) {\r\n    // Re-initialize bar positions each time data changes\r\n    this.bar_positions = [];\r\n    return data;\r\n  },\r\n\r\n  barHeight: di(function(chart, d, i) {\r\n    var height = Math.abs(chart.y0() - chart.y.call(this, d, i));\r\n    var offset = chart.seriesIndex.call(this, d, i) === 0 ? chart.barOffset() : 0;\r\n    return height > 0 ? height - offset : 0;\r\n  }),\r\n  barY: di(function(chart, d, i) {\r\n    var y = chart.y.call(this, d, i);\r\n    var y0 = chart.y0();\r\n\r\n    // Only handle positive y-values\r\n    if (y > y0)\r\n      return;\r\n\r\n    if (chart.bar_positions.length <= i)\r\n      chart.bar_positions.push(0);\r\n\r\n    var previous = chart.bar_positions[i] || y0;\r\n    var new_position = previous - (y0 - y);\r\n\r\n    chart.bar_positions[i] = new_position;\r\n\r\n    return new_position;\r\n  })\r\n});\r\n\r\nvar stackedBars = createHelper('StackedBars');\r\n\r\nexport {\r\n  StackedBars as default,\r\n  stackedBars\r\n};\r\n","import { objectFind } from '../utils';\r\nimport {\r\n  mixin,\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport { XYInverted } from '../mixins';\r\nimport Bars from './Bars';\r\n\r\n/**\r\n  Bars chart with bars that group from left-to-right\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'HorizontalBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class HorizontalBars\r\n  @extends Bars, XYInverted\r\n*/\r\nvar HorizontalBars = Bars.extend('HorizontalBars', mixin(XYInverted, {\r\n  barX: di(function(chart, d, i) {\r\n    var x = chart.x.call(this, d, i);\r\n    var x0 = chart.x0();\r\n\r\n    return x < x0 ? x : x0 + chart.barOffset();\r\n  }),\r\n  barY: di(function(chart, d, i) {\r\n    return chart.y.call(this, d, i) - chart.itemWidth() / 2;\r\n  }),\r\n  barWidth: di(function(chart, d, i) {\r\n    var width = Math.abs(chart.x0() - chart.x.call(this, d, i)) - chart.barOffset();\r\n    return width > 0 ? width : 0;\r\n  }),\r\n  barHeight: di(function(chart) {\r\n    return chart.itemWidth();\r\n  }),\r\n  bar0: di(function(chart, d, i) {\r\n    var x0 = chart.x0();\r\n    var offset = chart.barOffset();\r\n    return chart.x.call(this, d, i) >= x0 ? x0 + offset : x0 - offset;\r\n  }),\r\n\r\n  getOffsetAxis: function getOffsetAxis() {\r\n    var components = this.container && this.container.components();\r\n    return objectFind(components, function(component) {\r\n      if (component.type == 'Axis' && component.position() == 'left')\r\n        return component;\r\n    });\r\n  },\r\n\r\n  onEnter: function onEnter(selection) {\r\n    selection\r\n      .attr('x', this.bar0)\r\n      .attr('width', 0);\r\n  },\r\n\r\n  onMerge: function onMerge(selection) {\r\n    selection\r\n      .attr('class', this.barClass)\r\n      .attr('style', this.itemStyle)\r\n      .attr('y', this.barY)\r\n      .attr('height', this.barHeight);\r\n  },\r\n\r\n  onMergeTransition: function onMergeTransition(selection) {\r\n    this.setupTransition(selection);\r\n\r\n    selection\r\n      .attr('x', this.barX)\r\n      .attr('width', this.barWidth);\r\n  }\r\n}));\r\n\r\nvar horizontalBars = createHelper('HorizontalBars');\r\n\r\nexport {\r\n  HorizontalBars as default,\r\n  horizontalBars\r\n};\r\n","import {\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport HorizontalBars from './HorizontalBars';\r\n\r\n/**\r\n  Horizontal Stacked Bars\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'HorizontalStackedBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class HorizontalStackedBars\r\n  @extends HorizontalBars\r\n*/\r\nvar HorizontalStackedBars = HorizontalBars.extend('HorizontalStackedBars', {\r\n  transform: function(data) {\r\n    // Re-initialize bar positions each time data changes\r\n    this.bar_positions = [];\r\n    return data;\r\n  },\r\n\r\n  barWidth: di(function(chart, d, i) {\r\n    var width = Math.abs(chart.x0() - chart.x.call(this, d, i));\r\n    var offset = chart.seriesIndex.call(this, d, i) === 0 ? chart.barOffset() : 0;\r\n    return width > 0 ? width - offset : 0;\r\n  }),\r\n  barX: di(function(chart, d, i) {\r\n    var x = chart.x.call(this, d, i);\r\n    var x0 = chart.x0();\r\n\r\n    // Only handle positive x-values\r\n    if (x < x0)\r\n      return;\r\n\r\n    if (chart.bar_positions.length <= i)\r\n      chart.bar_positions.push(0);\r\n\r\n    var previous = chart.bar_positions[i] || (x0 + chart.barOffset());\r\n    var new_position = previous + (x - x0);\r\n\r\n    chart.bar_positions[i] = new_position;\r\n\r\n    return previous;\r\n  })\r\n});\r\n\r\nvar horizontalStackedBars = createHelper('HorizontalStackedBars');\r\n\r\nexport {\r\n  HorizontalStackedBars as default,\r\n  horizontalStackedBars\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  contains,\r\n  first,\r\n  isString,\r\n  isNumber,\r\n  objectEach,\r\n  valueOrDefault\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  di,\r\n  mixin,\r\n  createHelper,\r\n  isSeriesData,\r\n  translate,\r\n  alignText\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Standalone or \"embeddable\" labels (uses `mixins.Labels` and `attachLabels` to embed in chart)\r\n\r\n  ### Extending\r\n\r\n  To extend the `Labels` chart, the following methods are available:\r\n\r\n  - `insertLabels`\r\n  - `mergeLabels`\r\n  - `layoutLabels`\r\n  - `transitionLabels`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  View the `Labels.js` source for the default implementation and more information on these methods.\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    return {\r\n      charts: {\r\n        input: {\r\n          type: 'Lines',\r\n          data: data.input,\r\n          // xScale, yScale, other properties...\r\n\r\n          // Show labels with default properties\r\n          labels: true\r\n        },\r\n        output: {\r\n          type: 'Bars',\r\n          data: data.output,\r\n          // xScale, yScale, other properties...\r\n\r\n          // Pass options to labels\r\n          labels: {\r\n            offset: 2,\r\n            position: 'top',\r\n            style: {\r\n              'font-size': '14px'\r\n            },\r\n            format: d3.format(',0d')\r\n          }\r\n        },\r\n        labels: {\r\n          type: 'Labels',\r\n          data: data.labels,\r\n\r\n          // xScale, yScale, other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  chart.draw({\r\n    input: [1, 2, 3],\r\n    output: [10, 20, 30],\r\n    labels: [\r\n      {x: 0, y: 0},\r\n      {x: 0, y: 30, label: 'Override (y by default)'},\r\n      {x: 2, y: 0},\r\n      {x: 2, y: 30}\r\n    ]\r\n  });\r\n  ```\r\n  @class Labels\r\n  @extends Chart, Series, XY, Hover, Transition, StandardLayer\r\n*/\r\nvar Labels = Chart.extend('Labels', mixin(\r\n  Series,\r\n  XY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer,\r\n  {\r\n    initialize: function() {\r\n      // Proxy attach to parent for hover\r\n      var parent = this.options().parent;\r\n      if (parent) {\r\n        this.parent = parent;\r\n        parent.on('attach', function() {\r\n          this.container = parent.container;\r\n          this.trigger('attach');\r\n        }.bind(this));\r\n      }\r\n\r\n      // Use StandardLayer for extensibility\r\n      this.standardSeriesLayer('Labels', this.base);\r\n    },\r\n\r\n    transform: function(data) {\r\n      if (!isSeriesData(data))\r\n        data = [{key: 'labels', name: 'Labels', values: data}];\r\n\r\n      // TODO Use ticks / domain from xScale\r\n      // ticks = scale.ticks ? scale.ticks.apply(scale, [10]) : scale.domain()\r\n      return data;\r\n    },\r\n\r\n    /**\r\n      Formatting function or string (string is passed to `d3.format`) for label values\r\n\r\n      @property format\r\n      @type String|Function\r\n    */\r\n    format: property('format', {\r\n      type: 'Function',\r\n      set: function(value) {\r\n        if (isString(value)) {\r\n          return {\r\n            override: d3.format(value)\r\n          };\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Label position relative to data point\r\n      (top, right, bottom, or left)\r\n\r\n      @property position\r\n      @type String\r\n      @default top\r\n    */\r\n    position: property('position', {\r\n      default_value: 'top',\r\n      validate: function(value) {\r\n        return contains(['top', 'right', 'bottom', 'left'], value);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Offset between data point and label\r\n      (if `Number` is given, offset is set based on position)\r\n\r\n      @property offset\r\n      @type Number|Object\r\n      @default {x: 0, y: 0}\r\n    */\r\n    offset: property('offset', {\r\n      default_value: {x: 0, y: 0},\r\n      set: function(offset) {\r\n        if (isNumber(offset)) {\r\n          offset = {\r\n            top: {x: 0, y: -offset},\r\n            right: {x: offset, y: 0},\r\n            bottom: {x: 0, y: offset},\r\n            left: {x: -offset, y: 0}\r\n          }[this.position()];\r\n\r\n          if (!offset)\r\n            offset = {x: 0, y: 0};\r\n\r\n          return {\r\n            override: offset\r\n          };\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Padding between text and label background\r\n\r\n      @property padding\r\n      @type Number\r\n      @default 1\r\n    */\r\n    padding: property('padding', {default_value: 1}),\r\n\r\n    /**\r\n      Define text anchor (start, middle, or end)\r\n\r\n      (set by default based on label position)\r\n\r\n      @property anchor\r\n      @type String\r\n      @default middle\r\n    */\r\n    anchor: property('anchor', {\r\n      default_value: function() {\r\n        return {\r\n          'top': 'middle',\r\n          'right': 'start',\r\n          'bottom': 'middle',\r\n          'left': 'end'\r\n        }[this.position()];\r\n      },\r\n      validate: function(value) {\r\n        return contains(['start', 'middle', 'end'], value);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Define text-aligmment (top, middle, or bottom)\r\n\r\n      (set by default based on label position)\r\n\r\n      @property alignment\r\n      @type String\r\n      @default middle\r\n    */\r\n    alignment: property('alignment', {\r\n      default_value: function() {\r\n        return {\r\n          'top': 'bottom',\r\n          'right': 'middle',\r\n          'bottom': 'top',\r\n          'left': 'middle'\r\n        }[this.position()];\r\n      },\r\n      validate: function(value) {\r\n        return contains(['top', 'middle', 'bottom'], value);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get label text for data-point (uses \"label\" property or y-value)\r\n\r\n      @method labelText\r\n      @param {Any} d\r\n      @param {Number} i\r\n      @return {String}\r\n    */\r\n    labelText: di(function(chart, d, i) {\r\n      var value = valueOrDefault(d.label, chart.yValue.call(this, d, i));\r\n      var format = chart.format();\r\n\r\n      return format ? format(value) : value;\r\n    }),\r\n\r\n    /**\r\n      Get class for label group\r\n\r\n      @method labelClass\r\n      @param {Any} d\r\n      @param {Number} i\r\n      @return {String}\r\n    */\r\n    labelClass: di(function(chart, d) {\r\n      return 'chart-label' + (d['class'] ? ' ' + d['class'] : '');\r\n    }),\r\n\r\n    onDataBind: function onDataBind(selection, data) {\r\n      return selection.selectAll('g')\r\n        .data(data, this.key);\r\n    },\r\n    onInsert: function onInsert(selection) {\r\n      return selection.append('g')\r\n        .call(this.insertLabels);\r\n    },\r\n    onMerge: function onMerge(selection) {\r\n      selection.attr('class', this.labelClass);\r\n\r\n      this.mergeLabels(selection);\r\n      this.layoutLabels(selection);\r\n    },\r\n    onMergeTransition: function onMergeTransition(selection) {\r\n      // Transition labels into position\r\n      this.setupTransition(selection);\r\n      this.transitionLabels(selection);\r\n    },\r\n\r\n    // (Override for custom labels)\r\n    insertLabels: function(selection) {\r\n      selection.append('rect')\r\n        .attr('class', 'chart-label-bg');\r\n      selection.append('text')\r\n        .attr('class', 'chart-label-text');\r\n    },\r\n\r\n    // (Override for custom labels)\r\n    mergeLabels: function(selection) {\r\n      selection.selectAll('text')\r\n        .text(this.labelText);\r\n    },\r\n\r\n    // (Override for custom labels)\r\n    layoutLabels: function(selection) {\r\n      // Calculate layout\r\n      var chart = this;\r\n      var labels = [];\r\n      var options = {\r\n        offset: chart.offset(),\r\n        padding: chart.padding(),\r\n        anchor: chart.anchor(),\r\n        alignment: chart.alignment()\r\n      };\r\n      selection.each(function(d, i, j) {\r\n        if (!labels[j])\r\n          labels[j] = [];\r\n\r\n        // Store values for label and calculate layout\r\n        var label = chart._prepareLabel(chart, this, d, i, j);\r\n        labels[j].push(label);\r\n\r\n        chart._calculateLayout(chart, options, label);\r\n      });\r\n\r\n      // Collision detection\r\n      this._handleCollisions(chart, labels);\r\n\r\n      // Layout labels\r\n      labels.forEach(function(series) {\r\n        series.forEach(function(label) {\r\n          this._setLayout(chart, label);\r\n        }, this);\r\n      }, this);\r\n    },\r\n\r\n    // (Override for custom labels)\r\n    transitionLabels: function(selection) {\r\n      selection.attr('opacity', 1);\r\n    },\r\n\r\n    //\r\n    // Internal\r\n    //\r\n\r\n    _prepareLabel: function(chart, element, d, i) {\r\n      var selection = d3.select(element);\r\n      var text = selection.select('text');\r\n      var bg = selection.select('rect');\r\n\r\n      return {\r\n        x: chart.x.call(element, d, i),\r\n        y: chart.y.call(element, d, i),\r\n        element: element,\r\n        selection: selection,\r\n        text: {\r\n          element: text.node(),\r\n          selection: text\r\n        },\r\n        bg: {\r\n          element: bg.node(),\r\n          selection: bg\r\n        }\r\n      };\r\n    },\r\n\r\n    _calculateLayout: function(chart, options, label) {\r\n      var text_bounds = label.text.element.getBBox();\r\n\r\n      // Need to adjust text for line-height\r\n      var text_y_adjustment = alignText(label.text.element);\r\n\r\n      // Position background\r\n      var layout = label.bg.layout = {\r\n        x: options.offset.x,\r\n        y: options.offset.y,\r\n        width: text_bounds.width + (2 * options.padding),\r\n        height: text_bounds.height + (2 * options.padding)\r\n      };\r\n\r\n      // Set width / height of label\r\n      label.width = layout.width;\r\n      label.height = layout.height;\r\n\r\n      if (options.anchor == 'end')\r\n        layout.x -= layout.width;\r\n      else if (options.anchor == 'middle')\r\n        layout.x -= (layout.width / 2);\r\n\r\n      if (options.alignment == 'bottom')\r\n        layout.y -= layout.height;\r\n      else if (options.alignment == 'middle')\r\n        layout.y -= (layout.height / 2);\r\n\r\n      // Center text in background\r\n      label.text.layout = {\r\n        x: layout.x + (layout.width / 2) - (text_bounds.width / 2),\r\n        y: layout.y + (layout.height / 2) - (text_bounds.height / 2) + text_y_adjustment\r\n      };\r\n    },\r\n\r\n    _handleCollisions: function(chart, labels) {\r\n      labels.forEach(function(series, seriesIndex) {\r\n        // Check through remaining series for collisions\r\n        labels.slice(seriesIndex + 1).forEach(function(compareSeries) {\r\n          compareSeries.forEach(function(compareLabel) {\r\n            series.forEach(function(label) {\r\n              if (checkForOverlap(label, compareLabel))\r\n                groupLabels(label, compareLabel);\r\n            });\r\n          });\r\n        });\r\n      });\r\n\r\n      function checkForOverlap(labelA, labelB) {\r\n        var a = getEdges(labelA);\r\n        var b = getEdges(labelB);\r\n\r\n        var contained_LR = (b.left < a.left && b.right > a.right);\r\n        var contained_TB = (b.bottom < a.bottom && b.top > a.top);\r\n        var overlap_LR = (b.left >= a.left && b.left < a.right) || (b.right > a.left && b.right <= a.right) || contained_LR;\r\n        var overlap_TB = (b.top >= a.top && b.top < a.bottom) || (b.bottom > a.top && b.bottom <= a.bottom) || contained_TB;\r\n\r\n        return overlap_LR && overlap_TB;\r\n\r\n        function getEdges(label) {\r\n          return {\r\n            left: label.x,\r\n            right: label.x + label.width,\r\n            top: label.y,\r\n            bottom: label.y + label.height\r\n          };\r\n        }\r\n      }\r\n\r\n      function groupLabels(labelA, labelB) {\r\n        if (labelA.group && labelB.group) {\r\n          // Move labelB group labels into labelA group\r\n          objectEach(labelB.group.labels, function(label) {\r\n            labelA.group.labels.push(label);\r\n            label.group = labelA.group;\r\n          });\r\n\r\n          updateGroupPositions(labelA.group);\r\n        }\r\n        else if (labelA.group) {\r\n          addLabelToGroup(labelB, labelA.group);\r\n        }\r\n        else if (labelB.group) {\r\n          addLabelToGroup(labelA, labelB.group);\r\n        }\r\n        else {\r\n          var group = {labels: []};\r\n          addLabelToGroup(labelA, group);\r\n          addLabelToGroup(labelB, group);\r\n        }\r\n      }\r\n\r\n      function addLabelToGroup(label, group) {\r\n        group.labels.push(label);\r\n        label.group = group;\r\n        label.originalY = label.y;\r\n\r\n        updateGroupPositions(group);\r\n      }\r\n\r\n      function updateGroupPositions(group) {\r\n        function reset(label) {\r\n          // Reset to original y\r\n          label.y = label.originalY;\r\n          return label;\r\n        }\r\n        function sortY(a, b) {\r\n          if (a.y < b.y)\r\n            return -1;\r\n          else if (a.y > b.y)\r\n            return 1;\r\n          else\r\n            return 0;\r\n        }\r\n\r\n        var byY = group.labels.map(reset).sort(sortY).reverse();\r\n\r\n        byY.forEach(function(label, index) {\r\n          var prev = first(byY, index);\r\n          var overlap;\r\n\r\n          for (var i = prev.length - 1; i >= 0; i--) {\r\n            if (checkForOverlap(label, prev[i])) {\r\n              overlap = prev[i];\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (overlap)\r\n            label.y = overlap.y - label.height;\r\n        });\r\n      }\r\n    },\r\n\r\n    _setLayout: function(chart, label) {\r\n      label.bg.selection\r\n        .attr('transform', translate(label.bg.layout.x, label.bg.layout.y))\r\n        .attr('width', label.bg.layout.width)\r\n        .attr('height', label.bg.layout.height);\r\n\r\n      label.text.selection\r\n        .attr('transform', translate(label.text.layout.x, label.text.layout.y));\r\n\r\n      // Position label and set opacity to fade-in\r\n      label.selection\r\n        .attr('transform', translate(label.x, label.y))\r\n        .attr('opacity', 0);\r\n    }\r\n  }\r\n), {\r\n  z_index: 150\r\n});\r\n\r\nvar labels = createHelper('Labels');\r\n\r\nexport {\r\n  Labels as default,\r\n  labels\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  property,\r\n  mixin,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Hover\r\n} from '../mixins';\r\nimport Labels from './Labels';\r\n/**\r\n  (in-progress)\r\n\r\n  @class HoverLabels\r\n*/\r\nvar HoverLabels = Labels.extend('HoverLabels', mixin(Hover, {\r\n  initialize: function() {\r\n    this.on('attach', function() {\r\n      this.container.on('mouseenter:point', this.onMouseEnterPoint.bind(this));\r\n      this.container.on('mouseleave:point', this.onMouseLeavePoint.bind(this));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Maximum distance to find active points\r\n\r\n    @property hoverTolerance\r\n    @type Number\r\n    @default Infinity\r\n  */\r\n  hoverTolerance: property('hoverTolerance', {\r\n    set: function(value) {\r\n      // Pass through hover tolerance to parent (if present)\r\n      if (this.parent && this.parent.hoverTolerance)\r\n        this.parent.hoverTolerance(value);\r\n    },\r\n    default_value: Infinity\r\n  }),\r\n\r\n  // Don't fade in labels, hidden until hover\r\n  transitionLabels: function() {},\r\n\r\n  onMouseEnterPoint: function(point) {\r\n    var label = this.findLabelForPoint(point);\r\n    if (label)\r\n      d3.select(label).attr('opacity', 1);\r\n  },\r\n  onMouseLeavePoint: function(point) {\r\n    var label = this.findLabelForPoint(point);\r\n    if (label)\r\n      d3.select(label).attr('opacity', 0);\r\n  },\r\n\r\n  findLabelForPoint: function(point) {\r\n    var labels = this.base.selectAll('g.chart-series').selectAll('g');\r\n    var chart = this;\r\n    var label;\r\n\r\n    labels.each(function(d, i, j) {\r\n      var series = chart.seriesData.call(this, d, i, j);\r\n      if (d === point.d && series === point.series)\r\n        label = this;\r\n    });\r\n\r\n    return label;\r\n  }\r\n}));\r\n\r\nvar hoverLabels = createHelper('HoverLabels');\r\n\r\nexport {\r\n  HoverLabels as default,\r\n  hoverLabels\r\n};\r\n","import {\r\n  property,\r\n  dimensions,\r\n  translate,\r\n  createHelper\r\n} from '../helpers';\r\nimport Legend from './Legend';\r\n\r\n/**\r\n  Legend positioned within chart bounds.\r\n\r\n  @class InsetLegend\r\n  @extends Legend\r\n*/\r\nvar InsetLegend = Legend.extend('InsetLegend', {\r\n  initialize: function() {\r\n    this.on('draw', function() {\r\n      // Position legend on draw\r\n      // (Need actual width/height for relative_to)\r\n      var translation = this.translation();\r\n      this.legend_base.attr('transform', translate(translation.x, translation.y));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Position legend within chart layer `{x, y, relative_to}`\r\n    Use `relative_to` to use x,y values relative to x-y origin\r\n    (e.g. `\"left-top\"` is default)\r\n\r\n    @example\r\n    ```js\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        return {\r\n          components: {\r\n            legend: {\r\n              type: 'InsetLegend',\r\n              // Position legend 10px away from right-bottom corner of chart\r\n              translation: {x: 10, y: 10, relative_to: 'right-bottom'}\r\n            }\r\n          }\r\n        }\r\n      });\r\n    ```\r\n    @property translation\r\n    @type Object {x,y}\r\n    @default {x: 10, y: 10, relative_to: 'left-top'}\r\n  */\r\n  translation: property('translation', {\r\n    default_value: {x: 10, y: 0, relative_to: 'left-top'},\r\n    get: function(value) {\r\n      var x = value.x || 0;\r\n      var y = value.y || 0;\r\n      var relative_to_x = (value.relative_to && value.relative_to.split('-')[0]) || 'left';\r\n      var relative_to_y = (value.relative_to && value.relative_to.split('-')[1]) || 'top';\r\n\r\n      if (relative_to_x === 'right') {\r\n        x = this.width() - dimensions(this.legend_base).width - x;\r\n      }\r\n      if (relative_to_y === 'bottom') {\r\n        y = this.height() - dimensions(this.legend_base).height - y;\r\n      }\r\n\r\n      return {\r\n        x: x,\r\n        y: y\r\n      };\r\n    }\r\n  }),\r\n\r\n  skip_layout: true\r\n}, {\r\n  layer_type: 'chart'\r\n});\r\n\r\nvar insetLegend = createHelper('InsetLegend');\r\n\r\nexport {\r\n  InsetLegend as default,\r\n  insetLegend\r\n};\r\n"],"sourceRoot":"/source/"}