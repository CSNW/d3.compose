{"version":3,"sources":["d3.compose-all.min.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers/index.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/src/mixins/series.js","../C:/dev/d3.compose/src/mixins/hover.js","../C:/dev/d3.compose/src/mixins/transition.js","../C:/dev/d3.compose/src/mixins/standard-layer.js","../C:/dev/d3.compose/src/components/Text.js","../C:/dev/d3.compose/src/components/Title.js","../C:/dev/d3.compose/src/components/Axis.js","../C:/dev/d3.compose/src/components/AxisTitle.js","../C:/dev/d3.compose/src/components/Legend.js","../C:/dev/d3.compose/src/extensions/xy.js","../C:/dev/d3.compose/index-all.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js","../C:/dev/d3.compose/src/mixins/xy.js","../C:/dev/d3.compose/src/mixins/xy-values.js","../C:/dev/d3.compose/src/mixins/xy-inverted.js","../C:/dev/d3.compose/src/mixins/labels.js","../C:/dev/d3.compose/src/mixins/index.js","../C:/dev/d3.compose/src/charts/Lines.js","../C:/dev/d3.compose/src/charts/Bars.js","../C:/dev/d3.compose/src/charts/StackedBars.js","../C:/dev/d3.compose/src/charts/HorizontalBars.js","../C:/dev/d3.compose/src/charts/HorizontalStackedBars.js","../C:/dev/d3.compose/src/charts/Labels.js","../C:/dev/d3.compose/src/charts/HoverLabels.js","../C:/dev/d3.compose/src/components/InsetLegend.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","valueOrDefault","default_value","property","name","options","prop_key","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","isArray","mixed","constructor","initialize","args","forEach","extension","transform","reduceRight","bind","stack","elements","direction","origin","element_dimensions","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","id","layered","items","_layered","findById","getPoints","getPoint","sort","meta","getClosestPoints","points","position","tolerance","getDistance","Math","sqrt","pow","setDistance","point","distance","closePoints","sortPoints","by_distance","updateActive","active","closest","container","active_keys","closest_keys","trigger","createLayer","layer","events","event","method","split","str","charAt","toUpperCase","dataBind","onDataBind","insert","onInsert","textOptions","default_options","text","components_Title__defaultMargins","default_margin","margins_by_position","title","components_AxisTitle__defaultMargins","axisTitle","xy","charts","components","title_options","axes","axis_options","positionByKey","x2","y2","secondaryX","secondaryY","axis_title_options","legend","legend_options","Int8Array","utils","helpers","style","Base","isProperty","unset","base","draw","Chart","z_index","layer_type","Component","skip_layout","prepareLayout","getLayout","setLayout","Overlay","hidden","display","getAbsolutePosition","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","rawData","tagName","append","classed","attachHoverListeners","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","chart_options","_attachItems","component_options","config","_prepareConfig","_updateDimensions","layout","redraw","demux","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","chart_position","parts","part","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","was_inside","on","getBoundingClientRect","scrollY","is_inside","attach","detach","remove","_attached","_positionComponents","_positionByZIndex","remove_ids","remove_id","Item","layer_options","component","overlay","prepareComponent","row_index","col_index","extractData","normalized","found","row","row_components","chart_index","unshift","selectAll","index","previousPart","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","appendChild","overall_layout","Series","seriesKey","seriesValues","seriesIndex","seriesClass","seriesData","itemStyle","seriesCount","seriesLayer","exit","XY","setScales","normalizeData","xScale","setXScaleRange","getDefaultXScale","yScale","setYScaleRange","getDefaultYScale","xKey","yKey","xValue","yValue","x0","y0","x_scale","y_scale","XYValues","adjacentWidth","layeredWidth","itemWidth","XYInverted","mixins_labels__Labels","attachLabels","labels","LabelsClass","_labels","proxyLabelMethods","LabelsXY","Hover","onMouseEnter","onMouseMove","onMouseLeave","mouseEnterPoint","mouseLeavePoint","HoverPoints","update","hoverTolerance","Transition","delay","duration","ease","setupTransition","StandardLayer","standardLayer","standardSeriesLayer","onEnter","onUpdate","onMerge","onExit","Labels","InvertedXY","XYLabels","Lines","lines","interpolate","createLine","lineKey","line","svg","lineData","each","onMergeTransition","Bars","offset_axis","getOffsetAxis","barHeight","abs","barOffset","barWidth","barX","barY","bar0","barClass","axis_thickness","bars","StackedBars","bar_positions","new_position","stackedBars","HorizontalBars","horizontalBars","HorizontalStackedBars","horizontalStackedBars","charts_Labels__Labels","format","anchor","alignment","labelText","label","labelClass","insertLabels","mergeLabels","layoutLabels","transitionLabels","_prepareLabel","_calculateLayout","_handleCollisions","_setLayout","bg","text_bounds","text_y_adjustment","checkForOverlap","labelA","labelB","getEdges","contained_LR","contained_TB","overlap_LR","overlap_TB","groupLabels","group","updateGroupPositions","addLabelToGroup","originalY","reset","sortY","byY","reverse","overlap","prev","compareSeries","compareLabel","HoverLabels","onMouseEnterPoint","onMouseLeavePoint","findLabelForPoint","hoverLabels","Text","textAlign","verticalAlign","transformation","middle","translation","Title","rotate_by_position","Axis","axis","axis_base","_layout_base","merge","orientation","orient","ticks","tickValues","tickSize","innerTickSize","outerTickSize","tickPadding","tickFormat","_setupAxis","onUpdateTransition","_skip_transition","state","getState","label_overhang","_getLabelOverhang","_previous_raw_data","setState","current","array_extensions","overhangs","AxisTitle","default_legend_margins","Legend","legend_base","swatchDimensions","combined_data","chart_id","find_chart","exclude_from_legend","chart_data","legend_data","class","itemKey","itemText","swatchClass","createSwatch","swatches","groups","swatch","direction_by_position","default","swatch_dimensions","registerSwatch","types","create","InsetLegend","relative_to","relative_to_x","relative_to_y","insetLegend","compose","VERSION","index_all"],"mappings":"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","file":"d3.compose-all.min.js","sourcesContent":[null,"// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\r\n  isFunction,\r\n  isUndefined,\r\n  valueOrDefault\r\n} from '../utils';\r\n\r\n/**\r\n  Helper for creating properties for charts/components\r\n\r\n  @example\r\n  ```javascript\r\n  var Custom = d3.chart('Chart').extend('Custom', {\r\n    // Create property that's stored internally as 'simple'\r\n    simple: property('simple')\r\n  });\r\n  var custom; // = new Custom(...);\r\n\r\n  // set\r\n  custom.simple('Howdy');\r\n\r\n  // get\r\n  console.log(custom.simple()); // -> 'Howdy'\r\n\r\n  // Advanced\r\n  // --------\r\n  // Default values:\r\n  Custom.prototype.message = property('message', {\r\n    default_value: 'Howdy!'\r\n  });\r\n\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n  custom.message('Goodbye');\r\n  console.log(custom.message()); // -> 'Goodbye'\r\n\r\n  // Set to undefined to reset to default value\r\n  custom.message(undefined);\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n\r\n  // Custom getter:\r\n  Custom.prototype.exclaimed = property('exclaimed', {\r\n    get: function(value) {\r\n      // Value is the underlying set value\r\n      return value + '!';\r\n    }\r\n  });\r\n\r\n  custom.exclaimed('Howdy');\r\n  console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n  // Custom setter:\r\n  Custom.prototype.feeling = property('feeling', {\r\n    set: function(value, previous) {\r\n      if (value == 'Hate') {\r\n        // To override value, return Object with override specified\r\n        return {\r\n          override: 'Love',\r\n\r\n          // To do something after override, use after callback\r\n          after: function() {\r\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    custom.feeling('Hate'); // -> 'After: Love'\r\n    console.log(custom.feeling()); // -> 'Love'\r\n  });\r\n  ```\r\n  @method property\r\n  @for helpers\r\n  @param {String} name of stored property\r\n  @param {Object} [options]\r\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`)\r\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n  @param {String} [options.type] `get` is evaluated by default, use `\"Function\"` to skip evaluation\r\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n  @param {String} [options.prop_key='__properties'] underlying key on object to store property\r\n  @return {Function} `()`: get, `(value)`: set\r\n*/\r\nexport default function property(name, options) {\r\n  options = options || {};\r\n  var prop_key = options.prop_key || '__properties';\r\n\r\n  var property = function(value) {//eslint-disable-line no-shadow\r\n    var properties = this[prop_key] = this[prop_key] || {};\r\n    var context = valueOrDefault(property.context, this);\r\n\r\n    if (arguments.length)\r\n      return set.call(this);\r\n    else\r\n      return get.call(this);\r\n\r\n    function get() {\r\n      value = valueOrDefault(properties[name], property.default_value);\r\n\r\n      // Unwrap value if its type is not a function\r\n      if (isFunction(value) && options.type != 'Function')\r\n        value = value.call(this);\r\n\r\n      return isFunction(options.get) ? options.get.call(context, value) : value;\r\n    }\r\n\r\n    function set() {\r\n      // Validate\r\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(this, value))\r\n        throw new Error('Invalid value for ' + name + ': ' + JSON.stringify(value));\r\n\r\n      property.previous = properties[name];\r\n      properties[name] = value;\r\n\r\n      if (isFunction(options.set) && !isUndefined(value)) {\r\n        var response = options.set.call(context, value, property.previous);\r\n\r\n        if (response && 'override' in response)\r\n          properties[name] = response.override;\r\n        if (response && isFunction(response.after))\r\n          response.after.call(context, properties[name]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // For checking if function is a property\r\n  property.is_property = true;\r\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n  property.default_value = options.default_value;\r\n  property.context = options.context;\r\n\r\n  return property;\r\n}\r\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector\r\n\r\n  @method dimensions\r\n  @for helpers\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from './index';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05]\r\n  });\r\n  ```\r\n  @method createScale\r\n  @for helpers\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import { extend } from '../utils';\r\n\r\n/**\r\n  Mix prototypes into single combined prototype for chart/component\r\n\r\n  Designed specifically to work with d3.chart:\r\n\r\n  - transform is called from last to first\r\n  - initialize is called from first to last\r\n  - remaining are overriden from first to last\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  d3.chart('Chart').extend('Custom', mixin(a, b, c, {\r\n    initialize: function() {\r\n      // d\r\n    },\r\n    transform: function() {\r\n      // d\r\n    }\r\n  }));\r\n\r\n  // initialize: Chart -> b -> d\r\n  // transform: d -> a -> Chart\r\n  ```\r\n  @method mixin\r\n  @for helpers\r\n  @param {Array|Object...} mixins... Array of mixins or mixins as separate arguments\r\n  @return {Object}\r\n*/\r\nexport default function mixin(mixins) {\r\n  mixins = Array.isArray(mixins) ? mixins : Array.prototype.slice.call(arguments);\r\n  var mixed = extend.apply(null, [{}].concat(mixins));\r\n\r\n  // Don't mixin constructor with prototype\r\n  delete mixed.constructor;\r\n\r\n  if (mixed.initialize) {\r\n    mixed.initialize = function initialize() {\r\n      var args = Array.prototype.slice.call(arguments);\r\n\r\n      mixins.forEach(function(extension) {\r\n        if (extension.initialize)\r\n          extension.initialize.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n  if (mixed.transform) {\r\n    mixed.transform = function transform(data) {\r\n      return mixins.reduceRight(function(memo, extension) {\r\n        if (extension && extension.transform)\r\n          return extension.transform.call(this, memo);\r\n        else\r\n          return memo;\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return mixed;\r\n}\r\n","import { translate } from './index';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack)\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack.bind(this, {\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n*/\r\nexport default function stack(options, elements) {\r\n  if (options && !elements) {\r\n    elements = options;\r\n    options = {\r\n      direction: 'vertical',\r\n      origin: 'top',\r\n      padding: 0\r\n    };\r\n  }\r\n\r\n  function padding(d, i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  if (elements && elements.attr) {\r\n    var previous = 0;\r\n    elements\r\n      .attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var x = 0;\r\n        var y = 0;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          if (!(options.origin == 'left' || options.origin == 'right'))\r\n            options.origin = 'left';\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(d, i);\r\n          else\r\n            x = previous + element_dimensions.width + padding(d, i);\r\n\r\n          previous = previous + element_dimensions.width + padding(d, i);\r\n        }\r\n        else {\r\n          if (!(options.origin == 'top' || options.origin == 'bottom'))\r\n            options.origin = 'top';\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(d, i);\r\n          else\r\n            y = previous + element_dimensions.height + padding(d, i);\r\n\r\n          previous = previous + element_dimensions.height + padding(d, i);\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n  }\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  defaults,\r\n  extend,\r\n  first,\r\n  isNumber,\r\n  isObject,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './property';\r\nimport dimensions from './dimensions';\r\nimport createScale from './create-scale';\r\nimport mixin from './mixin';\r\nimport stack from './stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Get formatted margins for varying input\r\n\r\n  @method getMargins\r\n  @example\r\n  ```js\r\n  getMargins(4);\r\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n  getMargins({top: 20}, {top: 8, bottom: 8});\r\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n  ```\r\n  @param {Number|Object} margins\r\n  @param {Object} default_margins\r\n  @return {Object}\r\n*/\r\nexport function getMargins(margins, default_margins) {\r\n  if (isNumber(margins))\r\n    return {top: margins, right: margins, bottom: margins, left: margins};\r\n  else\r\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  getMargins: getMargins,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  contains,\r\n  find,\r\n  defaults,\r\n  extend,\r\n  objectEach,\r\n  difference,\r\n  pluck\r\n} from './utils';\r\nimport {\r\n  getMargins,\r\n  property,\r\n  style,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n/**\r\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n  @example\r\n  ```html\r\n  <div id=\"#chart\"></div>\r\n  ```\r\n  ```js\r\n  var chart = d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      // Process data...\r\n\r\n      // Create shared scales\r\n      var scales = {\r\n        x: {data: data.input, key: 'x', adjacent: true},\r\n        y: {data: data.input, key: 'y'},\r\n        y2: {data: data.output, key: 'y'}\r\n      };\r\n\r\n      return {\r\n        charts: {\r\n          input: {\r\n            type: 'Bars', data: data.input, xScale: scales.x, yScale: scales.y\r\n          },\r\n          output: {\r\n            type: 'Lines', data: data.output, xScale: scales.x, yScale: scales.y2}\r\n          }\r\n        },\r\n        components: {\r\n          'axis.y': {\r\n            type: 'Axis', scale: scales.y, position: 'left'\r\n          },\r\n          'axis.y2': {\r\n            type: 'Axis', scale: scales.y2, position: 'right'\r\n          }\r\n          title: {\r\n            type: 'Title', position: 'top', text: 'd3.compose'\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n  chart.draw({input: [...], output: [...]});\r\n  ```\r\n  @class Compose\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Compose', {\r\n  initialize: function() {\r\n    // Overriding transform in init jumps it to the top of the transform cascade\r\n    // Therefore, data coming in hasn't been transformed and is raw\r\n    // (Save raw data for redraw)\r\n    this.transform = function(data) {\r\n      this.rawData(data);\r\n      return data;\r\n    };\r\n\r\n    // Responsive svg based on the following approach (embedded + padding hack)\r\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n    // (not enabled if selection is svg)\r\n    if (this.base.node().tagName != 'svg') {\r\n      this.container = this.base.append('div')\r\n        .attr('class', 'chart-compose-container');\r\n\r\n      this.base = this.container.append('svg')\r\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n        .attr('version', '1.1')\r\n        .attr('class', 'chart-compose');\r\n    }\r\n    else {\r\n      this.base.classed('chart-compose', true);\r\n    }\r\n\r\n    this.attachHoverListeners();\r\n  },\r\n\r\n  /**\r\n    Get/set the options `object/function` for the chart that takes `data` and\r\n    returns `{charts, components}` for composing child charts and components.\r\n\r\n    @example\r\n    ```js\r\n    // get\r\n    chart.options();\r\n\r\n    // set (static)\r\n    chart.options({\r\n      charts: {},\r\n      components: {}\r\n    });\r\n\r\n    // set (dynamic, takes data and returns options)\r\n    chart.options(function(data) {\r\n      // process data...\r\n\r\n      return {\r\n        charts: {},\r\n        components: {}\r\n      };\r\n    });\r\n\r\n    // Set directly from d3.chart creation\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n    ```\r\n    @property options\r\n    @type Function|Object\r\n  */\r\n  options: property('options', {\r\n    default_value: function() {},\r\n    type: 'Function',\r\n    set: function(options) {\r\n      // If options is plain object,\r\n      // return from generic options function\r\n      if (!isFunction(options)) {\r\n        return {\r\n          override: function() {\r\n            return options;\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Store raw data for container before it has been transformed\r\n  rawData: property('rawData'),\r\n\r\n  /**\r\n    Margins between edge of container and components/chart\r\n\r\n    @example\r\n    ```js\r\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n    ```\r\n    @property margins\r\n    @type Object {top, right, bottom, left}\r\n    @default {top: 10, right: 10, bottom: 10, left: 10}\r\n  */\r\n  margins: property('margins', {\r\n    default_value: default_compose_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_compose_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  // Chart position\r\n  chartPosition: property('chartPosition', {\r\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n    set: function(values) {\r\n      return {\r\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    },\r\n    get: function(values) {\r\n      values.width = this._width() - values.right - values.left;\r\n      values.height = this._height() - values.bottom - values.top;\r\n\r\n      return values;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set overall width of chart\r\n\r\n    @property width\r\n    @type Number\r\n  */\r\n  width: property('width', {\r\n    default_value: null\r\n  }),\r\n\r\n  /**\r\n    Get/set overall height of chart\r\n\r\n    @property height\r\n    @type Number\r\n  */\r\n  height: property('height', {\r\n    default_value: null\r\n  }),\r\n\r\n  _width: function() {\r\n    var width = this.width();\r\n    return width != null ? width : Base.prototype.width.call(this);\r\n  },\r\n  _height: function() {\r\n    var height = this.height();\r\n    return height != null ? height : Base.prototype.height.call(this);\r\n  },\r\n\r\n  /**\r\n    Enable responsive container + viewBox so that chart scales to fill width\r\n    (only works if selection is not an svg)\r\n\r\n    @property responsive\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  responsive: property('responsive', {\r\n    default_value: true\r\n  }),\r\n\r\n  // Set svg viewBox attribute\r\n  viewBox: property('viewBox', {\r\n    default_value: function() {\r\n      if (this.responsive() && this.width() && this.height())\r\n        return '0 0 ' + this.width() + ' ' + this.height();\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set svg preserveAspectRatio attribute\r\n  preserveAspectRatio: property('preserveAspectRatio', {\r\n    default_value: function() {\r\n      if (this.responsive())\r\n        return 'xMidYMid meet';\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set container style\r\n  containerStyle: property('containerStyle', {\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        var aspect_ratio = 1;\r\n        if (this.width() && this.height())\r\n          aspect_ratio = this.height() / this.width();\r\n\r\n        return style({\r\n          width: '100%',\r\n          height: 0,\r\n          'padding-top': (aspect_ratio * 100) + '%',\r\n          position: 'relative'\r\n        });\r\n      }\r\n      else {\r\n        return style({position: 'relative'});\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Set base style\r\n  baseStyle: property('baseStyle', {\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        return style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0\r\n        });\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Set charts from options or get chart instances.\r\n    Each chart should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n    @example\r\n    ```js\r\n    chart.charts([\r\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n    ]);\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property('charts', {\r\n    set: function(chart_options, charts) {\r\n      // Store actual charts rather than options\r\n      return {\r\n        override: this._attachItems(chart_options, charts, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Set components from options or get components instances.\r\n    Each component should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n    @example\r\n    ```js\r\n    chart.components([\r\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n      {id: 'title', type: 'Title'} // options to pass to Title component\r\n    ])\r\n    ```\r\n    @property components\r\n    @type Array\r\n  */\r\n  components: property('components', {\r\n    set: function(component_options, components) {\r\n      // Store actual components rather than options\r\n      return {\r\n        override: this._attachItems(component_options, components, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Draw chart with given data\r\n\r\n    @example\r\n    ```js\r\n    var chart = d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n\r\n    chart.draw([1, 2, 3]);\r\n\r\n    chart.draw({values: [1, 2, 3]});\r\n\r\n    chart.draw([\r\n      {values: [1, 2, 3]},\r\n      {values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method draw\r\n    @param {Any} data\r\n  */\r\n  draw: function(data) {\r\n    var config = this._prepareConfig(this.options(), data);\r\n\r\n    // Set charts and components from config\r\n    if (config.charts)\r\n      this.charts(config.charts);\r\n    if (config.components)\r\n      this.components(config.components);\r\n\r\n    // Add config data\r\n    data = {\r\n      original: data,\r\n      config: config.data\r\n    };\r\n    this.data(data);\r\n\r\n    this._updateDimensions();\r\n\r\n    // Layout components\r\n    this.layout(data);\r\n\r\n    // Full draw now that everything has been laid out\r\n    d3.chart().prototype.draw.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Redraw chart with current data\r\n\r\n    @method redraw\r\n  */\r\n  redraw: function() {\r\n    if (this.rawData())\r\n      this.draw(this.rawData().original);\r\n  },\r\n\r\n  demux: function(name, data) {\r\n    if (!data || !data.config || !data.original)\r\n      return data;\r\n\r\n    if (findById(this.charts(), name) && data.config.charts[name])\r\n      return data.config.charts[name];\r\n    else if (findById(this.components(), name) && data.config.components[name])\r\n      return data.config.components[name];\r\n    else\r\n      return data.original;\r\n  },\r\n\r\n  // Create chart layer (for laying out charts)\r\n  createChartLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create component layer\r\n  createComponentLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-component-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create overlay layer\r\n  createOverlayLayer: function() {\r\n    if (!this.container)\r\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n    return this.container.append('div')\r\n      .attr('class', 'chart-overlay-layer');\r\n  },\r\n\r\n  // Layout components and charts for given data\r\n  layout: function(data) {\r\n    // 1. Place chart layers\r\n    this._positionChartLayers();\r\n\r\n    // 2. Extract layout from components\r\n    var layout = this._extractLayout(data);\r\n\r\n    // 3. Set chart position from layout\r\n    var chart_position = extend({}, this.margins());\r\n    objectEach(layout, function(parts, key) {\r\n      parts.forEach(function(part) {\r\n        chart_position[key] += part.offset || 0;\r\n      });\r\n    });\r\n    this.chartPosition(chart_position);\r\n\r\n    // 4. Position layers with layout\r\n    this.positionLayers(layout);\r\n  },\r\n\r\n  attachHoverListeners: function() {\r\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n    // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n    var trigger = this.trigger.bind(this);\r\n    var chartPosition = this.chartPosition.bind(this);\r\n    var container = this.container || this.base;\r\n    var base = this.base.node();\r\n    var chart_position, bounds, was_inside;\r\n\r\n    container.on('mouseenter', function() {\r\n      // Calculate chart position and bounds on enter and cache during move\r\n      chart_position = chartPosition();\r\n      bounds = extend({}, base.getBoundingClientRect());\r\n      bounds.top += window.scrollY;\r\n      bounds.bottom += window.scrollY;\r\n\r\n      was_inside = inside(bounds);\r\n      if (was_inside)\r\n        enter();\r\n    });\r\n    container.on('mousemove', function() {\r\n      var is_inside = inside(bounds);\r\n      if (was_inside && is_inside)\r\n        move();\r\n      else if (was_inside)\r\n        leave();\r\n      else if (is_inside)\r\n        enter();\r\n\r\n      was_inside = is_inside;\r\n    });\r\n    container.on('mouseleave', function() {\r\n      if (was_inside) {\r\n        was_inside = false;\r\n        leave();\r\n      }\r\n    });\r\n\r\n    function inside() {\r\n      var mouse = d3.mouse(document.documentElement);\r\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n    }\r\n    function enter() {\r\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n    }\r\n    function move() {\r\n      trigger('mousemove', translateToXY(d3.mouse(base)));\r\n    }\r\n    function leave() {\r\n      trigger('mouseleave');\r\n    }\r\n\r\n    function translateToXY(coordinates) {\r\n      var x = coordinates[0];\r\n      var y = coordinates[1];\r\n      var chart_x = x - chart_position.left;\r\n      var chart_y = y - chart_position.top;\r\n\r\n      // Set at chart bounds if outside of chart\r\n      if (x > (chart_position.left + chart_position.width))\r\n        chart_x = chart_position.width;\r\n      else if (x < chart_position.left)\r\n        chart_x = 0;\r\n\r\n      if (y > (chart_position.top + chart_position.height))\r\n        chart_y = chart_position.height;\r\n      else if (y < chart_position.top)\r\n        chart_y = 0;\r\n\r\n      return {\r\n        container: {x: x, y: y},\r\n        chart: {x: chart_x, y: chart_y}\r\n      };\r\n    }\r\n  },\r\n\r\n  // Attach chart/component child item with id\r\n  attach: function(id, item) {\r\n    item.id = id;\r\n    item.base.attr('data-id', id);\r\n    item.container = this;\r\n\r\n    Base.prototype.attach.call(this, id, item);\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('attach');\r\n  },\r\n\r\n  // Detach chart/component child item by id\r\n  detach: function(id, item) {\r\n    item.base.remove();\r\n\r\n    delete this._attached[id];\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('detach');\r\n  },\r\n\r\n  // Position chart and component layers\r\n  positionLayers: function(layout) {\r\n    this._positionChartLayers();\r\n    this._positionComponents(layout);\r\n    this._positionByZIndex();\r\n  },\r\n\r\n  //\r\n  // Internal\r\n  //\r\n\r\n  _updateDimensions: function() {\r\n    // Set container and svg dimensions\r\n    // (if original selection is svg, no container and skip responsiveness)\r\n    if (this.container) {\r\n      this.container\r\n        .attr('style', this.containerStyle());\r\n    }\r\n\r\n    this.base\r\n      .attr('viewBox', this.viewBox())\r\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n      .attr('style', this.baseStyle())\r\n      .attr('width', this.responsive() ? null : this.width())\r\n      .attr('height', this.responsive() ? null : this.height());\r\n  },\r\n\r\n  _attachItems: function(items, container, context) {\r\n    items = items || [];\r\n    container = container || [];\r\n\r\n    // Remove charts that are no longer needed\r\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n    remove_ids.forEach(function(remove_id) {\r\n      context.detach(remove_id, findById(container, remove_id));\r\n    });\r\n\r\n    // Create or update charts\r\n    return items.map(function(options) {\r\n      // TODO May not have id, might need to auto-generate\r\n      // (might be during another step)\r\n      var id = options.id;\r\n      var item = findById(container, id);\r\n\r\n      if (options instanceof d3.chart()) {\r\n        // If chart instance, replace with instance\r\n        if (item)\r\n          context.detach(id, item);\r\n\r\n        context.attach(id, options);\r\n        return options;\r\n      }\r\n      else {\r\n        if (item && item.type != options.type) {\r\n          // If chart type has changed, detach and re-create\r\n          context.detach(id, item);\r\n          item = undefined;\r\n        }\r\n\r\n        if (!item) {\r\n          var Item = d3.chart(options.type);\r\n\r\n          if (!Item)\r\n            throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n          var layer_options = {z_index: Item.z_index || 0};\r\n          var createLayer = {\r\n            'chart': 'createChartLayer',\r\n            'component': 'createComponentLayer',\r\n            'overlay': 'createOverlayLayer'\r\n          }[Item.layer_type];\r\n\r\n          if (!createLayer)\r\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n          var base = context[createLayer](layer_options);\r\n\r\n          item = new Item(base, options);\r\n          item.type = options.type;\r\n\r\n          context.attach(id, item);\r\n        }\r\n        else {\r\n          item.options(options);\r\n        }\r\n\r\n        return item;\r\n      }\r\n    });\r\n  },\r\n\r\n  _prepareConfig: function(options, data) {\r\n    // Load config from options fn\r\n    var config = options(data);\r\n    var normalized = {\r\n      data: {\r\n        charts: {},\r\n        components: {}\r\n      }\r\n    };\r\n\r\n    if (!config) {\r\n      return normalized;\r\n    }\r\n    else {\r\n      normalized.charts = [];\r\n      normalized.components = [];\r\n    }\r\n\r\n    if (Array.isArray(config)) {\r\n      // TEMP Idenfify charts from layered,\r\n      // eventually no distinction between charts and components\r\n      var found = {\r\n        row: false,\r\n        charts: false\r\n      };\r\n\r\n      config.forEach(function(row, row_index) {\r\n        // Components are added from inside-out\r\n        // so for position: top, position: left, use unshift\r\n\r\n        if (Array.isArray(row)) {\r\n          found.row = true;\r\n          var row_components = [];\r\n\r\n          row.forEach(function(item, col_index) {\r\n            if (item._layered) {\r\n              found.charts = true;\r\n              normalized.charts = item.items.map(function(chart, chart_index) {\r\n                return defaults({}, chart, {id: 'chart-' + (chart_index + 1)});\r\n              });\r\n            }\r\n            else if (!found.charts) {\r\n              row_components.unshift(prepareComponent(item, 'left', row_index, col_index));\r\n            }\r\n            else {\r\n              row_components.push(prepareComponent(item, 'right', row_index, col_index));\r\n            }\r\n          });\r\n\r\n          normalized.components = normalized.components.concat(row_components);\r\n        }\r\n        else {\r\n          if (row._layered) {\r\n            found.row = found.charts = true;\r\n            normalized.charts = row.items.slice();\r\n          }\r\n          else {\r\n            if (!found.row)\r\n              normalized.components.unshift(prepareComponent(row, 'top', row_index, 0));\r\n            else\r\n              normalized.components.push(prepareComponent(row, 'bottom', row_index, 0));\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      // DEPRECATED\r\n      objectEach(config.charts, function(chart_options, id) {\r\n        normalized.charts.push(extend({id: id}, chart_options));\r\n      });\r\n\r\n      objectEach(config.components, function(component_options, id) {\r\n        normalized.components.push(extend({id: id}, component_options));\r\n      });\r\n    }\r\n\r\n    normalized.charts.forEach(extractData('charts'));\r\n    normalized.components.forEach(extractData('components'));\r\n\r\n    return normalized;\r\n\r\n    function prepareComponent(component, position, row_index, col_index) {\r\n      if (component && isFunction(component.position))\r\n        component.position(position);\r\n      else\r\n        component = extend({position: position}, component);\r\n\r\n      return defaults(component, {id: 'component-' + (row_index + 1) + '-' + (col_index + 1)});\r\n    }\r\n\r\n    function extractData(type) {\r\n      return function(item) {\r\n        if (item.data && !isFunction(item.data)) {\r\n          normalized.data[type][item.id] = item.data;\r\n          delete item.data;\r\n        }\r\n      };\r\n    }\r\n  },\r\n\r\n  _positionChartLayers: function() {\r\n    var position = this.chartPosition();\r\n    this.base.selectAll('.chart-layer')\r\n      .attr('transform', translate(position.left, position.top))\r\n      .attr('width', position.width)\r\n      .attr('height', position.height);\r\n  },\r\n\r\n  _positionComponents: function(layout) {\r\n    var chart = this.chartPosition();\r\n    var width = this._width();\r\n    var height = this._height();\r\n\r\n    layout.top.reduce(function(previous, part) {\r\n      var y = previous - part.offset;\r\n      setLayout(part.component, chart.left, y, {width: chart.width});\r\n\r\n      return y;\r\n    }, chart.top);\r\n\r\n    layout.right.reduce(function(previous, part, index, parts) {\r\n      var previousPart = parts[index - 1] || {offset: 0};\r\n      var x = previous + previousPart.offset;\r\n      setLayout(part.component, x, chart.top, {height: chart.height});\r\n\r\n      return x;\r\n    }, width - chart.right);\r\n\r\n    layout.bottom.reduce(function(previous, part, index, parts) {\r\n      var previousPart = parts[index - 1] || {offset: 0};\r\n      var y = previous + previousPart.offset;\r\n      setLayout(part.component, chart.left, y, {width: chart.width});\r\n\r\n      return y;\r\n    }, height - chart.bottom);\r\n\r\n    layout.left.reduce(function(previous, part) {\r\n      var x = previous - part.offset;\r\n      setLayout(part.component, x, chart.top, {height: chart.height});\r\n\r\n      return x;\r\n    }, chart.left);\r\n\r\n    function setLayout(component, x, y, options) {\r\n      if (component && isFunction(component.setLayout))\r\n        component.setLayout(x, y, options);\r\n    }\r\n  },\r\n\r\n  _positionByZIndex: function() {\r\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n    // Sort by z-index\r\n    function setZIndex(layer) {\r\n      return {\r\n        layer: layer,\r\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n      };\r\n    }\r\n    function sortZIndex(a, b) {\r\n      if (a.zIndex < b.zIndex)\r\n        return -1;\r\n      else if (a.zIndex > b.zIndex)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n    function getLayer(wrapped) {\r\n      return wrapped.layer;\r\n    }\r\n\r\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n    // Move layers to z-index order\r\n    layers.forEach(function(layer) {\r\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n        layer.parentNode.appendChild(layer);\r\n    });\r\n  },\r\n\r\n  _extractLayout: function(data) {\r\n    var overall_layout = {top: [], right: [], bottom: [], left: []};\r\n    this.components().forEach(function(component) {\r\n      if (component.skip_layout || !component.getLayout)\r\n        return;\r\n\r\n      var layout = component.getLayout(this.demux(component.id, data));\r\n      var position = layout && layout.position;\r\n\r\n      if (!contains(['top', 'right', 'bottom', 'left'], position))\r\n        return;\r\n\r\n      overall_layout[position].push({\r\n        offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\r\n        component: component\r\n      });\r\n    }, this);\r\n\r\n    return overall_layout;\r\n  }\r\n});\r\n\r\n// TODO Find better place for this\r\nexport function layered(items) {\r\n  if (!Array.isArray(items))\r\n    items = Array.prototype.slice.call(arguments);\r\n\r\n  return {_layered: true, items: items};\r\n}\r\n\r\nfunction findById(items, id) {\r\n  return find(items, function(item) {\r\n    return item.id == id;\r\n  });\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  getParentData,\r\n  style,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling series data\r\n\r\n  @class Series\r\n  @namespace mixins\r\n*/\r\nvar Series = {\r\n  /**\r\n    Get key for given series data\r\n\r\n    @method seriesKey\r\n    @param {Any} d Series object with `key`\r\n    @return {Any}\r\n  */\r\n  seriesKey: di(function(chart, d) {\r\n    return d.key;\r\n  }),\r\n\r\n  /**\r\n    Get values for given series data\r\n\r\n    @method seriesValues\r\n    @param {Any} d Series object with `values` array\r\n    @return {Array}\r\n  */\r\n  seriesValues: di(function(chart, d, i) {\r\n    // Store seriesIndex on series\r\n    d.seriesIndex = i;\r\n    return d.values;\r\n  }),\r\n\r\n  /**\r\n    Get class for given series data\r\n\r\n    @method seriesClass\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {String}\r\n  */\r\n  seriesClass: di(function(chart, d, i) {\r\n    return 'chart-series chart-index-' + i + (d['class'] ? ' ' + d['class'] : '');\r\n  }),\r\n\r\n  /**\r\n    Get index for given data-point of series\r\n\r\n    @method seriesIndex\r\n    @param {Any} d\r\n    @param {Number} i\r\n  */\r\n  seriesIndex: di(function(chart, d, i) {\r\n    var series = chart.seriesData.call(this, d, i);\r\n    return series && series.seriesIndex || 0;\r\n  }),\r\n\r\n  /**\r\n    Get parent series data for given data-point\r\n\r\n    @method seriesData\r\n    @return {Any}\r\n  */\r\n  seriesData: di(function() {\r\n    return getParentData(this);\r\n  }),\r\n\r\n  /**\r\n    (di) Get style given series data or data-point\r\n    (Uses \"style\" object on `d`, if defined)\r\n\r\n    @method itemStyle\r\n    @param {Any} d\r\n    @param {Number} [i]\r\n    @param {Number} [j]\r\n    @return {String}\r\n  */\r\n  itemStyle: di(function(chart, d) {\r\n    return style(d.style) || null;\r\n  }),\r\n\r\n  /**\r\n    Get series count for chart\r\n\r\n    @method seriesCount\r\n    @return {Number}\r\n  */\r\n  seriesCount: function() {\r\n    var data = this.data();\r\n    return (data && isSeriesData(data)) ? data.length : 1;\r\n  },\r\n\r\n  /**\r\n    Extension of layer() that handles data-binding and layering for series data.\r\n\r\n    - Updates `dataBind` method to access underlying series values\r\n    - Creates group layer for each series in chart\r\n    - Should be used just like layer()\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(mixins.Series, {\r\n      initialize: function() {\r\n        this.seriesLayer('Circles', this.base, {\r\n          // Create group for each series on this.base\r\n          // and calls the following for each series item\r\n          // (entire layer is called twice: series-1 and series-2)\r\n\r\n          dataBind: function(data) {\r\n            // 1. data = [1, 2, 3]\r\n            // 2. data = [4, 5, 6]\r\n          },\r\n          insert: function() {\r\n            // Same as chart.layer\r\n            // (where \"this\" is series group layer)\r\n          },\r\n          events: {\r\n            // Same as chart.layer\r\n          }\r\n        });\r\n      }\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.draw([\r\n      {key: 'series-1', values: [1, 2, 3]},\r\n      {key: 'series-2', values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method seriesLayer\r\n    @param {String} name\r\n    @param {Selection} selection\r\n    @param {Object} options (`dataBind` and `insert` required)\r\n    @return {d3.chart.layer}\r\n  */\r\n  seriesLayer: function(name, selection, options) {\r\n    if (options && options.dataBind) {\r\n      var dataBind = options.dataBind;\r\n\r\n      options.dataBind = function(data) {\r\n        var chart = this.chart();\r\n        var series = this.selectAll('g')\r\n          .data(data, chart.seriesKey);\r\n\r\n        series.enter()\r\n          .append('g');\r\n\r\n        series\r\n          .attr('class', chart.seriesClass)\r\n          .attr('style', chart.itemStyle);\r\n\r\n        series.exit()\r\n          .remove();\r\n\r\n        series.chart = function() { return chart; };\r\n\r\n        return dataBind.call(series, chart.seriesValues);\r\n      };\r\n    }\r\n\r\n    return d3.chart().prototype.layer.call(this, name, selection, options);\r\n  },\r\n\r\n  // Ensure data is in series form\r\n  transform: function(data) {\r\n    return !isSeriesData(data) ? [{values: data}] : data;\r\n  }\r\n};\r\n\r\nexport default Series;\r\n","import {\r\n  property,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\nimport {\r\n  compact,\r\n  pluck,\r\n  objectEach,\r\n  contains\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common hover behavior that adds standard `onMouseEnter`, `onMouseMove`, and `onMouseLeave` handlers\r\n  and `getPoint` helper for adding helpful meta information to raw data point.\r\n\r\n  @class Hover\r\n  @namespace mixins\r\n*/\r\nvar Hover = {\r\n  initialize: function() {\r\n    this.on('attach', function() {\r\n      this.container.on('mouseenter', this.onMouseEnter.bind(this));\r\n      this.container.on('mousemove', this.onMouseMove.bind(this));\r\n      this.container.on('mouseleave', this.onMouseLeave.bind(this));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Get point information for given data-point\r\n\r\n    @method getPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n    @return {key, series, d, meta {chart, i, j, x, y}}\r\n  */\r\n  getPoint: di(function(chart, d, i, j) {\r\n    var key = chart.key && chart.key.call(this, d, i, j);\r\n    var series = chart.seriesData && chart.seriesData.call(this, d, i, j) || {};\r\n\r\n    return {\r\n      key: (series.key || j) + '.' + (key || i),\r\n      series: series,\r\n      d: d,\r\n      meta: {\r\n        chart: chart,\r\n        i: i,\r\n        j: j,\r\n        x: chart.x && chart.x.call(this, d, i, j),\r\n        y: chart.y && chart.y.call(this, d, i, j)\r\n      }\r\n    };\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseenter:point when mouse enters data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseEnterPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseEnterPoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseenter:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseleave:point when mouse leaves data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseleavePoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseLeavePoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseleave:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    (Override) Called when mouse enters container\r\n\r\n    @method onMouseEnter\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseEnter: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse moves within container\r\n\r\n    @method onMouseMove\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseMove: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse leaves container\r\n\r\n    @method onMouseLeave\r\n  */\r\n  onMouseLeave: function() {}\r\n};\r\n\r\n/**\r\n  Mixin for automatically triggering \"mouseenter:point\"/\"mouseleave:point\" for chart data points that are within given `hoverTolerance`.\r\n\r\n  @class HoverPoints\r\n  @namespace mixins\r\n*/\r\nvar HoverPoints = {\r\n  initialize: function() {\r\n    var points, tolerance, active;\r\n\r\n    this.on('draw', function() {\r\n      // Clear cache on draw\r\n      points = null;\r\n    });\r\n\r\n    this.on('attach', function() {\r\n      var update = function update(position) {\r\n        var closest = [];\r\n        if (position)\r\n          closest = getClosestPoints(points, position.chart, tolerance);\r\n\r\n        updateActive(active, closest, this.container);\r\n        active = closest;\r\n      }.bind(this);\r\n\r\n      this.container.on('mouseenter', function(position) {\r\n        if (!points)\r\n          points = getPoints(this, this.data());\r\n\r\n        tolerance = this.hoverTolerance();\r\n        update(position);\r\n      }.bind(this));\r\n\r\n      this.container.on('mousemove', update);\r\n      this.container.on('mouseleave', update);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Hover tolerance (in px) for calculating close points\r\n\r\n    @property hoverTolerance\r\n    @type Number\r\n    @default Infinity\r\n  */\r\n  hoverTolerance: property('hoverTolerance', {\r\n    default_value: Infinity\r\n  })\r\n};\r\n\r\nfunction getPoints(chart, data) {\r\n  if (data) {\r\n    if (!isSeriesData(data))\r\n      data = [{values: data}];\r\n\r\n    return data.map(function(series, j) {\r\n      return series.values.map(function(d, i) {\r\n        return chart.getPoint.call({_parent_data: series}, d, i, j);\r\n      }).sort(function(a, b) {\r\n        // Sort by x\r\n        return a.meta.x - b.meta.x;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction getClosestPoints(points, position, tolerance) {\r\n  return compact(points.map(function(series) {\r\n    function setDistance(point) {\r\n      point.distance = getDistance(point.meta, position);\r\n      return point;\r\n    }\r\n    function closePoints(point) {\r\n      return point.distance < tolerance;\r\n    }\r\n    function sortPoints(a, b) {\r\n      if (a.distance < b.distance)\r\n        return -1;\r\n      else if (a.distance > b.distance)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n\r\n    var by_distance = series.map(setDistance).filter(closePoints).sort(sortPoints);\r\n\r\n    return by_distance[0];\r\n  }));\r\n\r\n  function getDistance(a, b) {\r\n    return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n  }\r\n}\r\n\r\nfunction updateActive(active, closest, container) {\r\n  var active_keys = pluck(active, 'key');\r\n  var closest_keys = pluck(closest, 'key');\r\n\r\n  objectEach(closest, function(point) {\r\n    if (contains(active_keys, point.key))\r\n      container.trigger('mousemove:point', point);\r\n    else\r\n      container.trigger('mouseenter:point', point);\r\n  });\r\n  objectEach(active, function(point) {\r\n    if (!contains(closest_keys, point.key))\r\n      container.trigger('mouseleave:point', point);\r\n  });\r\n}\r\n\r\nexport {\r\n  Hover as default,\r\n  HoverPoints\r\n};\r\n","import {\r\n  property\r\n} from '../helpers';\r\nimport {\r\n  isUndefined\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common transition behaviors\r\n\r\n  @class Transition\r\n  @namespace mixins\r\n*/\r\nvar Transition = {\r\n  /**\r\n    Delay start of transition by specified milliseconds.\r\n\r\n    @property delay\r\n    @type Number|Function\r\n    @default d3 default: 0\r\n  */\r\n  delay: property('delay', {type: 'Function'}),\r\n\r\n  /**\r\n    Transition duration in milliseconds.\r\n\r\n    @property duration\r\n    @type Number|Function\r\n    @default d3 default: 250ms\r\n  */\r\n  duration: property('duration', {type: 'Function'}),\r\n\r\n  /**\r\n    Transition ease function\r\n\r\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n    - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n    @property ease\r\n    @type String|Function\r\n    @default d3 default: 'cubic-in-out'\r\n  */\r\n  ease: property('ease', {type: 'Function'}),\r\n\r\n  /**\r\n    Setup delay, duration, and ease for transition\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Transition, {\r\n      initialize: function() {\r\n        this.layer('circles', this.base, {\r\n          // ...\r\n          events: {\r\n            'merge:transition': function() {\r\n              // Set delay, duration, and ease from properties\r\n              this.chart().setupTransition(this);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }));\r\n    ```\r\n    @method setupTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  setupTransition: function setupTransition(selection) {\r\n    var delay = this.delay();\r\n    var duration = this.duration();\r\n    var ease = this.ease();\r\n\r\n    if (!isUndefined(delay))\r\n      selection.delay(delay);\r\n    if (!isUndefined(duration))\r\n      selection.duration(duration);\r\n    if (!isUndefined(ease))\r\n      selection.ease(ease);\r\n  }\r\n};\r\n\r\nexport default Transition;\r\n","/**\r\n  Mixin to create standard layer to make extending charts straightforward.\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n    initialize: function() {\r\n      this.standardLayer('main', this.base.append('g'))\r\n      // dataBind, insert, events are defined on prototype\r\n    },\r\n\r\n    onDataBind: function(selection, data) {\r\n      // ...\r\n    },\r\n    onInsert: function(selection) {\r\n      // ...\r\n    },\r\n    onEnter: function(selection) {\r\n      // ...\r\n    },\r\n    onUpdateTransition: function(selection) {\r\n      // ...\r\n    },\r\n    // all d3.chart events are available: onMerge, onExit, ...\r\n  }));\r\n  ```\r\n  @class StandardLayer\r\n  @namespace mixins\r\n*/\r\nvar StandardLayer = {\r\n  /**\r\n    extension of `layer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardLayer('circles', this.base.append('g'));\r\n      }\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" layer\r\n    }));\r\n    ```\r\n    @method standardLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardLayer: function standardLayer(name, selection) {\r\n    return createLayer(this, 'layer', name, selection);\r\n  },\r\n\r\n  /**\r\n    extension of `seriesLayer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardSeriesLayer('circles', this.base.append('g'));\r\n      },\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" seriesLayer\r\n    }));\r\n    ```\r\n    @method standardSeriesLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardSeriesLayer: function standardSeriesLayer(name, selection) {\r\n    return createLayer(this, 'series', name, selection);\r\n  },\r\n\r\n  /**\r\n    Called for standard layer's `dataBind`\r\n\r\n    @method onDataBind\r\n    @param {d3.selection} selection\r\n    @param {Any} data\r\n    @return {d3.selection}\r\n  */\r\n  onDataBind: function onDataBind(/* selection, data */) {},\r\n\r\n  /**\r\n    Called for standard layer's `insert`\r\n\r\n    @method onInsert\r\n    @param {d3.selection} selection\r\n    @return {d3.selection}\r\n  */\r\n  onInsert: function onInsert(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter']`\r\n\r\n    @method onEnter\r\n    @param {d3.selection} selection\r\n  */\r\n  onEnter: function onEnter(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter:transition']`\r\n\r\n    @method onEnterTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onEnterTransition: function onEnterTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdate\r\n    @param {d3.selection} selection\r\n  */\r\n  onUpdate: function onUpdate(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdateTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onUpdateTransition: function onUpdateTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge']`\r\n\r\n    @method onMerge\r\n    @param {d3.selection} selection\r\n  */\r\n  onMerge: function onMerge(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge:transition']`\r\n\r\n    @method onMergeTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onMergeTransition: function onMergeTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['exit']`\r\n\r\n    @method onExit\r\n    @param {d3.selection} selection\r\n  */\r\n  onExit: function onExit(/* selection */) {}\r\n\r\n  /**\r\n    Call for standard layer's `events['exit:transition']`\r\n\r\n    @method onExitTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onExitTransition: function onExitTransition(selection) {},\r\n};\r\n\r\nfunction createLayer(chart, type, name, selection) {\r\n  var layer = {\r\n    layer: 'layer',\r\n    series: 'seriesLayer'\r\n  }[type];\r\n\r\n  if (layer && chart[layer]) {\r\n    var events = {};\r\n    [\r\n      'enter',\r\n      'enter:transition',\r\n      'update',\r\n      'update:transition',\r\n      'merge',\r\n      'merge:transition',\r\n      'exit',\r\n      'exit:transition'\r\n    ].forEach(function(event) {\r\n      var method = 'on' + event.split(':').map(function capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }).join('');\r\n\r\n      // Only create events if chart method exists as empty transition events can cause unforeseen issues\r\n      if (chart[method]) {\r\n        events[event] = function() {\r\n          this.chart()[method](this);\r\n        };\r\n      }\r\n    });\r\n\r\n    return chart[layer](name, selection, {\r\n      dataBind: function(data) {\r\n        return this.chart().onDataBind(this, data);\r\n      },\r\n      insert: function() {\r\n        return this.chart().onInsert(this);\r\n      },\r\n      events: events\r\n    });\r\n  }\r\n}\r\n\r\nexport default StandardLayer;\r\n","import {\r\n  contains,\r\n  extend,\r\n  isString\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  style,\r\n  translate,\r\n  rotate,\r\n  mixin\r\n} from '../helpers';\r\nimport { StandardLayer } from '../mixins';\r\nimport Component from '../Component';\r\n\r\n/**\r\n  Add text to a chart.\r\n\r\n  ### Extending\r\n\r\n  To extend the `Text` component, the following methods are available:\r\n\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      return {\r\n        components: {\r\n          title: {\r\n            type: 'Text',\r\n            position: 'top'\r\n            text: 'Main Title',\r\n            textAlign: 'left',\r\n            'class': 'title'\r\n          },\r\n          notes: {\r\n            type: 'Text',\r\n            position: 'bottom',\r\n            text: 'Notes',\r\n            'class': 'notes'\r\n          }\r\n        }\r\n      };\r\n    });\r\n  ```\r\n  @class Text\r\n  @extends Component, StandardLayer\r\n*/\r\nvar Text = Component.extend('Text', mixin(StandardLayer, {\r\n  initialize: function() {\r\n    // Use standard layer for extensibility\r\n    this.standardLayer('Text', this.base.append('g').classed('chart-text', true));\r\n  },\r\n\r\n  /**\r\n    Text to display\r\n\r\n    @property text\r\n    @type String\r\n  */\r\n  text: property('text'),\r\n\r\n  /**\r\n    Rotation of text\r\n\r\n    @property rotation\r\n    @type Number\r\n    @default 0\r\n  */\r\n  rotation: property('rotation', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Horizontal text-alignment of text (`\"left\"`, `\"center\"`, or `\"right\"`)\r\n\r\n    @property textAlign\r\n    @type String\r\n    @default \"center\"\r\n  */\r\n  textAlign: property('textAlign', {\r\n    default_value: 'center',\r\n    validate: function(value) {\r\n      return contains(['left', 'center', 'right'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    text-anchor for text (`\"start\"`, `\"middle\"`, or `\"end\"`)\r\n\r\n    @property anchor\r\n    @type String\r\n    @default (set by `textAlign`)\r\n  */\r\n  anchor: property('anchor', {\r\n    default_value: function() {\r\n      return {\r\n        left: 'start',\r\n        center: 'middle',\r\n        right: 'end'\r\n      }[this.textAlign()];\r\n    },\r\n    validate: function(value) {\r\n      return contains(['start', 'middle', 'end', 'inherit'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Vertical aligment for text (`\"top\"`, `\"middle\"`, `\"bottom\"`)\r\n\r\n    @property verticalAlign\r\n    @type String\r\n    @default \"middle\"\r\n  */\r\n  verticalAlign: property('verticalAlign', {\r\n    default_value: 'middle',\r\n    validate: function(value) {\r\n      return contains(['top', 'middle', 'bottom'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Style object containing styles for text\r\n\r\n    @property style\r\n    @type Object\r\n    @default {}\r\n  */\r\n  style: property('style', {\r\n    default_value: {},\r\n    get: function(value) {\r\n      return style(value) || null;\r\n    }\r\n  }),\r\n\r\n  onDataBind: function onDataBind(selection) {\r\n    return selection.selectAll('text')\r\n      .data([0]);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('text');\r\n  },\r\n  onMerge: function onMerge(selection) {\r\n    selection\r\n      .attr('transform', this.transformation())\r\n      .attr('style', this.style())\r\n      .attr('text-anchor', this.anchor())\r\n      .attr('class', this.options()['class'])\r\n      .text(this.text());\r\n  },\r\n\r\n  transformation: function() {\r\n    var x = {\r\n      left: 0,\r\n      center: this.width() / 2,\r\n      right: this.width()\r\n    }[this.textAlign()];\r\n    var y = {\r\n      top: 0,\r\n      middle: this.height() / 2,\r\n      bottom: this.height()\r\n    }[this.verticalAlign()];\r\n\r\n    var translation = translate(x, y);\r\n    var rotation = rotate(this.rotation());\r\n\r\n    return translation + ' ' + rotation;\r\n  }\r\n}), {\r\n  z_index: 70\r\n});\r\n\r\nfunction textOptions(id, options, default_options) {\r\n  if (!options) {\r\n    options = id;\r\n    id = undefined;\r\n  }\r\n  if (isString(options))\r\n    options = {text: options};\r\n\r\n  return extend({id: id}, default_options, options);\r\n}\r\n\r\nfunction text(id, options) {\r\n  return textOptions(id, options, {type: 'Text'});\r\n}\r\n\r\nexport {\r\n  Text as default,\r\n  text,\r\n  textOptions\r\n};\r\n","import {\r\n  getMargins,\r\n  property\r\n} from '../helpers';\r\nimport Text, { textOptions } from './Text';\r\n\r\n/**\r\n  Title component that extends Text with defaults (styling, sensible margins, and rotated when positioned left or right)\r\n\r\n  @class Title\r\n  @extends Text\r\n*/\r\nvar Title = Text.extend('Title', {\r\n  initialize: function() {\r\n    this.base.select('.chart-text').classed('chart-title', true);\r\n  },\r\n\r\n  /**\r\n    Margins (in pixels) around Title\r\n\r\n    @property margins\r\n    @type Object\r\n    @default (set based on `position`)\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, defaultMargins(this.position()))\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return defaultMargins(this.position());\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Rotation of title. (Default is `-90` for `position = \"right\"`, `90` for `position = \"left\"`, and `0` otherwise).\r\n\r\n    @property rotation\r\n    @type Number\r\n    @default (set based on `position`)\r\n  */\r\n  rotation: property('rotation', {\r\n    default_value: function() {\r\n      var rotate_by_position = {\r\n        right: 90,\r\n        left: -90\r\n      };\r\n\r\n      return rotate_by_position[this.position()] || 0;\r\n    }\r\n  })\r\n});\r\n\r\nfunction defaultMargins(position) {\r\n  var default_margin = 8;\r\n  var margins_by_position = {\r\n    top: {top: default_margin, bottom: default_margin},\r\n    right: {right: default_margin, left: default_margin},\r\n    bottom: {top: default_margin, bottom: default_margin},\r\n    left: {right: default_margin, left: default_margin}\r\n  };\r\n  return getMargins(margins_by_position[position]);\r\n}\r\n\r\nfunction title(id, options) {\r\n  return textOptions(id, options, {type: 'Title'});\r\n}\r\n\r\nexport {\r\n  Title as default,\r\n  title\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  contains,\r\n  extend,\r\n  isUndefined\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  translate,\r\n  mixin,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  XY,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Component from '../Component';\r\n\r\n/**\r\n  Axis component for XY data (wraps `d3.axis`).\r\n\r\n  Available d3.axis extensions:\r\n\r\n  - `ticks`\r\n  - `tickValues`\r\n  - `tickSize`\r\n  - `innerTickSize`\r\n  - `outerTickSize`\r\n  - `tickPadding`\r\n  - `tickFormat`\r\n\r\n  ### Extending\r\n\r\n  To extend the `Axis` component, the following methods are available:\r\n\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      var scales = {\r\n        x: {data: data, key: 'x'},\r\n        y: {data: data, key: 'y'}\r\n      };\r\n\r\n      return {\r\n        components: {\r\n          'x.axis': {\r\n            type: 'Axis',\r\n            position: 'bottom',\r\n            scale: scales.x\r\n          },\r\n          'y.axis': {\r\n            type: 'Axis',\r\n            position: 'left',\r\n            scale: scales.y\r\n          }\r\n        }\r\n      };\r\n    });\r\n  ```\r\n  @class Axis\r\n  @extends Component, XY, Transition, StandardLayer\r\n*/\r\nvar Axis = Component.extend('Axis', mixin(XY, Transition, StandardLayer, {\r\n  initialize: function() {\r\n    // Create two axes (so that layout and transitions work)\r\n    // 1. Display and transitions\r\n    // 2. Layout (draw to get width, but separate so that transitions aren't affected)\r\n    this.axis = d3.svg.axis();\r\n\r\n    this.axis_base = this.base.append('g').attr('class', 'chart-axis');\r\n    this._layout_base = this.base.append('g')\r\n      .attr('class', 'chart-axis chart-layout')\r\n      .attr('style', 'display: none;');\r\n\r\n    // Use standard layer for extensibility\r\n    this.standardLayer('Axis', this.axis_base);\r\n\r\n    this.layer('_LayoutAxis', this._layout_base, {\r\n      dataBind: function() {\r\n        return this.selectAll('g').data([0]);\r\n      },\r\n      insert: function() {\r\n        return this.chart().onInsert(this);\r\n      },\r\n      events: {\r\n        'enter': function() {\r\n          this.chart().onEnter(this);\r\n        },\r\n        'merge': function() {\r\n          this.chart().onMerge(this);\r\n        }\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n    Scale to pass to d3.axis\r\n\r\n    - If `xScale`/`yScale` are given, `scale` is set automatically based on `position`.\r\n    - Can be `d3.scale` or, if `Object` is given, `helpers.createScale` is used\r\n\r\n    @example\r\n    ```js\r\n    // Set with d3.scale directly\r\n    axis.scale(d3.scale());\r\n\r\n    // or with Object passed helpers.createScale\r\n    axis.scale({data: data, key: 'x'});\r\n\r\n    // For x0/y0 position, both xScale and yScale needed\r\n    // (scale is automatically set by position)\r\n    axis.xScale({domain: [0, 100]});\r\n    axis.yScale({domain: [0, 10]});\r\n    axis.position('y0');\r\n\r\n    // -> axis.scale() -> axis.xScale by default\r\n    ```\r\n    @property scale\r\n    @type Object|d3.scale\r\n  */\r\n  scale: property('scale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      if (this.orientation() == 'vertical') {\r\n        this.yScale(value);\r\n        value = this.yValue();\r\n      }\r\n      else {\r\n        this.xScale(value);\r\n        value = this.xScale();\r\n      }\r\n\r\n      return {\r\n        override: value\r\n      };\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position axis relative to chart\r\n    (top, right, bottom, left, x0, y0)\r\n\r\n    @property position\r\n    @type String\r\n    @default bottom\r\n  */\r\n  position: property('position', {\r\n    default_value: 'bottom',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left', 'x0', 'y0'], value);\r\n    },\r\n    set: function() {\r\n      // Update scale -> xScale/yScale when position changes\r\n      if (this.scale())\r\n        this.scale(this.scale());\r\n    }\r\n  }),\r\n\r\n  /**\r\n    {x,y} translation of axis relative to chart\r\n    (set by default based on position)\r\n\r\n    @property translation\r\n    @type Object\r\n    @default (set based on position)\r\n  */\r\n  translation: property('translation', {\r\n    default_value: function() {\r\n      switch (this.position()) {\r\n        case 'top':\r\n          return {x: 0, y: 0};\r\n        case 'right':\r\n          return {x: this.width(), y: 0};\r\n        case 'bottom':\r\n          return {x: 0, y: this.height()};\r\n        case 'left':\r\n          return {x: 0, y: 0};\r\n        case 'x0':\r\n          return {x: this.x0(), y: 0};\r\n        case 'y0':\r\n          return {x: 0, y: this.y0()};\r\n      }\r\n    },\r\n    get: function(value) {\r\n      return translate(value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Axis orient for ticks\r\n    (set by default based on position)\r\n\r\n    @property orient\r\n    @type String\r\n    @default (set based on position)\r\n  */\r\n  orient: property('orient', {\r\n    default_value: function() {\r\n      var orient = this.position();\r\n\r\n      if (orient == 'x0')\r\n        orient = 'left';\r\n      else if (orient == 'y0')\r\n        orient = 'bottom';\r\n\r\n      return orient;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Axis orientation (vertical or horizonal)\r\n\r\n    @property orientation\r\n    @type String\r\n    @default (set based on position)\r\n  */\r\n  orientation: property('orientation', {\r\n    validate: function(value) {\r\n      return contains(['horizontal', 'vertical'], value);\r\n    },\r\n    default_value: function() {\r\n      return {\r\n        top: 'horizontal',\r\n        right: 'vertical',\r\n        bottom: 'horizontal',\r\n        left: 'vertical',\r\n        x0: 'vertical',\r\n        y0: 'horizontal'\r\n      }[this.position()];\r\n    },\r\n    set: function() {\r\n      // Update scale -> xScale/yScale when orientation changes\r\n      if (this.scale())\r\n        this.scale(this.scale());\r\n    }\r\n  }),\r\n\r\n  // d3.axis extensions\r\n  ticks: property('ticks', {type: 'Function'}),\r\n  tickValues: property('tickValues', {type: 'Function'}),\r\n  tickSize: property('tickSize', {type: 'Function'}),\r\n  innerTickSize: property('innerTickSize', {type: 'Function'}),\r\n  outerTickSize: property('outerTickSize', {type: 'Function'}),\r\n  tickPadding: property('tickPadding', {type: 'Function'}),\r\n  tickFormat: property('tickFormat', {type: 'Function'}),\r\n\r\n  onDataBind: function onDataBind(selection) {\r\n    // Setup axis (scale and properties)\r\n    this._setupAxis(this.axis);\r\n\r\n    // Force addition of just one axis with dummy data array\r\n    // (Axis will be drawn using underlying chart scales)\r\n    return selection.selectAll('g').data([0]);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    return selection.append('g');\r\n  },\r\n  onEnter: function onEnter(selection) {\r\n    // Place and render axis\r\n    selection.call(this.axis);\r\n  },\r\n  onMerge: function onUpdate(selection) {\r\n    selection.attr('transform', this.translation());\r\n  },\r\n  onUpdateTransition: function onUpdateTransition(selection) {\r\n    // Render axis (with transition)\r\n    this.setupTransition(selection);\r\n\r\n    if (this._skip_transition) {\r\n      selection.duration(0);\r\n      this._skip_transition = undefined;\r\n    }\r\n\r\n    selection.call(this.axis);\r\n  },\r\n  onExit: function onExit(selection) {\r\n    selection.selectAll('g').remove();\r\n  },\r\n\r\n  getLayout: function(data) {\r\n    // 1. Get previous values to restore after draw for proper transitions\r\n    var state = this.getState();\r\n\r\n    // 2. Draw with current values\r\n    this.draw(data);\r\n\r\n    // 3. Calculate layout\r\n    // (make layout axis visible for width calculations in Firefox)\r\n    this._layout_base.attr('style', 'display: block;');\r\n\r\n    var label_overhang = this._getLabelOverhang();\r\n\r\n    this._layout_base.attr('style', 'display: none;');\r\n\r\n    // 4. Draw with previous values\r\n    if (this._previous_raw_data) {\r\n      this.setState(extend(state.previous, {duration: 0}));\r\n\r\n      this.draw(this._previous_raw_data);\r\n\r\n      // 5. Restore current values\r\n      this.setState(state.current);\r\n    }\r\n    else {\r\n      // Skip transition after layout\r\n      // (Can transition from unexpected state)\r\n      this._skip_transition = true;\r\n    }\r\n\r\n    // Store raw data for future layout\r\n    this._previous_raw_data = data;\r\n\r\n    var position = this.position();\r\n    if (position == 'x0')\r\n      position = 'bottom';\r\n    else if (position == 'y0')\r\n      position = 'right';\r\n\r\n    return {\r\n      position: position,\r\n      width: label_overhang.width,\r\n      height: label_overhang.height\r\n    };\r\n  },\r\n  setLayout: function() {\r\n    // Axis is positioned with chartBase, so don't set layout\r\n    return;\r\n  },\r\n\r\n  getState: function() {\r\n    return {\r\n      previous: {\r\n        scale: this.scale.previous,\r\n        xScale: this.xScale.previous,\r\n        yScale: this.yScale.previous,\r\n        duration: this.duration.previous\r\n      },\r\n      current: {\r\n        scale: this.scale(),\r\n        xScale: this.xScale(),\r\n        yScale: this.yScale(),\r\n        duration: this.duration()\r\n      }\r\n    };\r\n  },\r\n  setState: function(state) {\r\n    this\r\n      .xScale(state.xScale)\r\n      .yScale(state.yScale)\r\n      .scale(state.scale)\r\n      .duration(state.duration);\r\n  },\r\n\r\n  _setupAxis: function(axis) {\r\n    // Setup axis\r\n    if (this.orientation() == 'vertical')\r\n      axis.scale(this.yScale());\r\n    else\r\n      axis.scale(this.xScale());\r\n\r\n    var extensions = ['orient', 'ticks', 'tickValues', 'tickSize', 'innerTickSize', 'outerTickSize', 'tickPadding', 'tickFormat'];\r\n    var array_extensions = ['tickValues'];\r\n    extensions.forEach(function(key) {\r\n      var value = this[key] && this[key]();\r\n      if (!isUndefined(value)) {\r\n        // If value is array, treat as arguments array\r\n        // otherwise, pass in directly\r\n        if (Array.isArray(value) && !contains(array_extensions, key))\r\n          axis[key].apply(axis, value);\r\n        else\r\n          axis[key](value);\r\n      }\r\n    }, this);\r\n  },\r\n\r\n  _getLabelOverhang: function() {\r\n    // TODO Look into overhang relative to chartBase (for x0, y0)\r\n    var overhangs = {width: [0], height: [0]};\r\n    var orientation = this.orientation();\r\n\r\n    this._layout_base.selectAll('.tick').each(function() {\r\n      try {\r\n        // There are cases where getBBox may throw\r\n        // (e.g. not currently displayed in Firefox)\r\n        var bbox = this.getBBox();\r\n\r\n        if (orientation == 'horizontal')\r\n          overhangs.height.push(bbox.height);\r\n        else\r\n          overhangs.width.push(bbox.width);\r\n      }\r\n      catch (ex) {\r\n        // Ignore error\r\n      }\r\n    });\r\n\r\n    return {\r\n      width: d3.max(overhangs.width),\r\n      height: d3.max(overhangs.height)\r\n    };\r\n  }\r\n}), {\r\n  layer_type: 'chart',\r\n  z_index: 60\r\n});\r\n\r\nvar axis = createHelper('Axis');\r\n\r\nexport {\r\n  Axis as default,\r\n  axis\r\n};\r\n","import {\r\n  getMargins,\r\n  property\r\n} from '../helpers';\r\nimport { textOptions } from './Text';\r\nimport Title from './Title';\r\n\r\n/**\r\n  Axis title component that extends Title with defaults (styling)\r\n\r\n  @class AxisTitle\r\n  @extends Title\r\n*/\r\nvar AxisTitle = Title.extend('AxisTitle', {\r\n  initialize: function() {\r\n    this.base.select('.chart-text')\r\n      .classed('chart-title', false)\r\n      .classed('chart-axis-title', true);\r\n  },\r\n\r\n  /**\r\n    Margins (in pixels) around axis title\r\n\r\n    @property margins\r\n    @type Object\r\n    @default (set based on `position`)\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, defaultMargins(this.position()))\r\n      };\r\n    },\r\n    default_value: function() {\r\n      return defaultMargins(this.position());\r\n    }\r\n  })\r\n});\r\n\r\nfunction defaultMargins(position) {\r\n  var default_margin = 8;\r\n  var margins_by_position = {\r\n    top: {top: default_margin / 2, bottom: default_margin},\r\n    right: {left: default_margin / 2, right: default_margin},\r\n    bottom: {bottom: default_margin / 2, top: default_margin},\r\n    left: {right: default_margin / 2, left: default_margin}\r\n  };\r\n\r\n  return getMargins(margins_by_position[position]);\r\n}\r\n\r\nfunction axisTitle(id, options) {\r\n  return textOptions(id, options, {type: 'AxisTitle'});\r\n}\r\n\r\nexport {\r\n  AxisTitle as default,\r\n  axisTitle\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  find,\r\n  compact\r\n} from '../utils';\r\nimport {\r\n  alignText,\r\n  createHelper,\r\n  di,\r\n  getMargins,\r\n  isSeriesData,\r\n  mixin,\r\n  property,\r\n  stack,\r\n  translate\r\n} from '../helpers';\r\nimport { StandardLayer } from '../mixins';\r\nimport Component from '../Component';\r\nvar default_legend_margins = {top: 8, right: 8, bottom: 8, left: 8};\r\n\r\n/**\r\n  Legend component that can automatically pull chart and series information from d3.compose\r\n\r\n  Notes:\r\n\r\n  - To exclude a chart from the legend, use `exclude_from_legend = true` in chart prototype or options\r\n  - To exclude a series from the legend, use `exclude_from_legend = true` in series object\r\n  - To add swatch for custom chart, use `Legend.registerSwatch()`\r\n\r\n  ### Extending\r\n\r\n  To extend the `Legend` component, the following methods are available:\r\n\r\n  - `itemKey`\r\n  - `itemText`\r\n  - `swatchClass`\r\n  - `createSwatch`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      var input = [{key: 'input', name: 'Input', values: data.input}];\r\n      var output = [\r\n        {key: 'output1', name: 'Output 1', values: data.output1},\r\n        {key: 'output2', name: 'Output 2', values: data.output2}\r\n      ];\r\n\r\n      return {\r\n        charts: {\r\n          a: {type: 'Lines', data: input}, // ...\r\n          b: {type: 'Bars', data: output} // ...\r\n        },\r\n        components: {\r\n          legend: {\r\n            type: 'Legend',\r\n            charts: ['a', 'b']\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n  // -> automatically creates legend from series data for 'a' and 'b'\r\n  //    (Lines Swatch) Input\r\n  //    (Bars Swatch) Output 1\r\n  //    (Bars Swatch) Output 2\r\n\r\n  // or, manually set data for legend\r\n  return {\r\n    components: {\r\n      legend: {\r\n        type: 'Legend',\r\n        data: [\r\n          {type: 'Lines', text: 'Input', class: 'series-index-0'},\r\n          {type: 'Bars', text: 'Output 1', class: 'series-index-0'},\r\n          {type: 'Bars', text: 'Output 2', class: 'series-index-1'},\r\n        ]\r\n      }\r\n    }\r\n  };\r\n  ```\r\n  @class Legend\r\n  @extends Component, StandardLayer\r\n*/\r\nvar Legend = Component.extend('Legend', mixin(StandardLayer, {\r\n  initialize: function() {\r\n    this.legend_base = this.base.append('g').classed('chart-legend', true);\r\n    this.standardLayer('Legend', this.legend_base);\r\n  },\r\n\r\n  /**\r\n    Array of chart keys from container to display in legend\r\n\r\n    @example\r\n    ```js\r\n    d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      return {\r\n        charts: {\r\n          a: {},\r\n          b: {},\r\n          c: {}\r\n        },\r\n        components: {\r\n          legend: {\r\n            type: 'Legend',\r\n            charts: ['a', 'c']\r\n          }\r\n        }\r\n      };\r\n    });\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property('charts'),\r\n\r\n  /**\r\n    Dimensions of \"swatch\"\r\n\r\n    @property swatchDimensions\r\n    @type Object\r\n    @default {width: 20, height: 20}\r\n  */\r\n  swatchDimensions: property('swatchDimensions', {\r\n    default_value: {width: 20, height: 20}\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around legend\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 8, right: 8, bottom: 8, left: 8}\r\n  */\r\n  margins: property('margins', {\r\n    default_value: default_legend_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_legend_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  transform: function(data) {\r\n    if (this.charts()) {\r\n      // Pull legend data from charts\r\n      var charts = this.container.charts();\r\n      data = this.charts().reduce(function(combined_data, chart_id) {\r\n        var chart = find(charts, function(find_chart) { return find_chart.id == chart_id; });\r\n\r\n        // Check for exclude from legend option\r\n        if (!chart || chart.exclude_from_legend || chart.options().exclude_from_legend)\r\n          return combined_data;\r\n\r\n        var chart_data = this.container.demux(chart_id, this.container.data());\r\n        if (!isSeriesData(chart_data))\r\n          chart_data = [chart_data];\r\n\r\n        var legend_data = chart_data.reduce(function(memo, series, index) {\r\n          // Check for exclude from legend option on series\r\n          if (series && !series.exclude_from_legend) {\r\n            memo.push({\r\n              text: series.name || 'Series ' + (index + 1),\r\n              key: chart_id + '.' + (series.key || index),\r\n              type: chart.type,\r\n              'class': compact([\r\n                'chart-series',\r\n                'chart-index-' + index,\r\n                chart.options()['class'],\r\n                series['class']\r\n              ]).join(' ')\r\n            });\r\n          }\r\n\r\n          return memo;\r\n        }, []);\r\n\r\n        return combined_data.concat(legend_data);\r\n      }.bind(this), []);\r\n    }\r\n\r\n    return data;\r\n  },\r\n\r\n  // Key for legend item (default is key from data)\r\n  itemKey: di(function(chart, d) {\r\n    return d.key;\r\n  }),\r\n\r\n  // Text for legend item (default is text from data)\r\n  itemText: di(function(chart, d) {\r\n    return d.text;\r\n  }),\r\n\r\n  // Class to apply to swatch (default is class from data)\r\n  swatchClass: di(function(chart, d) {\r\n    return d['class'];\r\n  }),\r\n\r\n  // Create swatch (using registered swatches based on type from data)\r\n  createSwatch: di(function(chart, d, i) {\r\n    var selection = d3.select(this);\r\n\r\n    // Clear existing swatch\r\n    selection.selectAll('*').remove();\r\n    selection\r\n      .attr('class', chart.swatchClass);\r\n\r\n    var swatches = d3.chart('Legend').swatches;\r\n    if (!swatches)\r\n      return;\r\n\r\n    if (d && d.type && swatches[d.type])\r\n      swatches[d.type].call(selection, chart, d, i);\r\n    else if (swatches['default'])\r\n      swatches['default'].call(selection, chart, d, i);\r\n  }),\r\n\r\n  onDataBind: function onDataBind(selection, data) {\r\n    return selection.selectAll('.chart-legend-group')\r\n      .data(data, this.itemKey);\r\n  },\r\n  onInsert: function onInsert(selection) {\r\n    var groups = selection.append('g')\r\n      .attr('class', 'chart-legend-group');\r\n\r\n    groups.append('g')\r\n      .attr('width', this.swatchDimensions().width)\r\n      .attr('height', this.swatchDimensions().height)\r\n      .attr('class', 'chart-legend-swatch');\r\n    groups.append('text')\r\n      .attr('class', 'chart-legend-label');\r\n\r\n    return groups;\r\n  },\r\n  onMerge: function onMerge(selection) {\r\n    var swatch = this.swatchDimensions();\r\n\r\n    selection.select('g').each(this.createSwatch);\r\n    selection.select('text')\r\n      .text(this.itemText)\r\n      .each(function() {\r\n        // Vertically center text\r\n        var offset = alignText(this, swatch.height);\r\n        d3.select(this)\r\n          .attr('transform', translate(swatch.width + 5, offset));\r\n      });\r\n\r\n    // Position groups after positioning everything inside\r\n    var direction_by_position = {\r\n      top: 'horizontal',\r\n      right: 'vertical',\r\n      bottom: 'horizontal',\r\n      left: 'vertical'\r\n    };\r\n    selection.call(stack.bind(selection, {direction: direction_by_position[this.position()], origin: 'top', padding: 5}));\r\n  },\r\n  onExit: function onExit(selection) {\r\n    selection.remove();\r\n  }\r\n}), {\r\n  z_index: 200,\r\n  swatches: {\r\n    'default': function(chart) {\r\n      var swatch_dimensions = chart.swatchDimensions();\r\n\r\n      this.append('circle')\r\n        .attr('cx', swatch_dimensions.width / 2)\r\n        .attr('cy', swatch_dimensions.height / 2)\r\n        .attr('r', d3.min([swatch_dimensions.width, swatch_dimensions.height]) / 2)\r\n        .attr('class', 'chart-swatch');\r\n    }\r\n  },\r\n\r\n  /**\r\n    Register a swatch create function for the given chart type\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Legend').registerSwatch(['Lines'], function(chart, d, i) {\r\n      var dimensions = chart.swatchDimensions();\r\n\r\n      return this.append('line')\r\n        .attr('x1', 0).attr('y1', dimensions.height / 2)\r\n        .attr('x2', dimensions.width).attr('y2', dimensions.height / 2)\r\n        .attr('class', 'chart-line');\r\n    });\r\n    ```\r\n    @method registerSwatch\r\n    @static\r\n    @param {Array|String} types Chart type(s)\r\n    @param {Function} create \"di\" function that inserts swatch\r\n  */\r\n  registerSwatch: function(types, create) {\r\n    if (!Array.isArray(types))\r\n      types = [types];\r\n\r\n    types.forEach(function(type) {\r\n      this.swatches[type] = create;\r\n    }, this);\r\n  }\r\n});\r\n\r\n// Create line swatch for Line and LineValues\r\nLegend.registerSwatch(['Lines'], function(chart) {\r\n  var swatch_dimensions = chart.swatchDimensions();\r\n\r\n  return this.append('line')\r\n    .attr('x1', 0).attr('y1', swatch_dimensions.height / 2)\r\n    .attr('x2', swatch_dimensions.width).attr('y2', swatch_dimensions.height / 2)\r\n    .attr('class', 'chart-line');\r\n});\r\n\r\n// Create bars swatch for Bars and StackedBars\r\nLegend.registerSwatch(['Bars', 'StackedBars', 'HorizontalBars', 'HorizontalStackedBars'], function(chart) {\r\n  var swatch_dimensions = chart.swatchDimensions();\r\n\r\n  return this.append('rect')\r\n    .attr('x', 0).attr('y', 0)\r\n    .attr('width', swatch_dimensions.width).attr('height', swatch_dimensions.height)\r\n    .attr('class', 'chart-bar');\r\n});\r\n\r\nvar legend = createHelper('Legend');\r\n\r\nexport {\r\n  Legend as default,\r\n  legend\r\n};\r\n","import {\r\n  extend,\r\n  isString,\r\n  defaults,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  Extensions are used for defining options for d3.compose that wrap common behavior, reduce boilerplate,\r\n  and provide helpers for composing charts and components.\r\n\r\n  @class extensions\r\n*/\r\n\r\n// TODO Integrate xy defaults (e.g. margins) into standard charts/components\r\n/**\r\n  XY extension (DEPRECATED)\r\n  Generate d3.compose options for XY charts\r\n\r\n  @example\r\n  ```js\r\n  d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      var scales = {\r\n        x: {}, // ...\r\n        y: {}, // ...\r\n        y2: {} // ...\r\n      };\r\n\r\n      return d3.compose.xy({\r\n        // charts and components as normal\r\n        charts: {\r\n          bars: {type: 'Bars'}, // ...\r\n          lines: {type: 'Lines'} // ...\r\n        },\r\n        components: {}, // ...\r\n\r\n        // Axes:\r\n        // type: 'Axis'\r\n        // position: x -> 'bottom', y -> 'left', x2 -> 'top', y2: 'right'\r\n        axes: {\r\n          x: {scale: scales.x, title: 'X Axis'},\r\n          y: {scale: scales.y, title: 'Y Axis'},\r\n          y2: {scale: scales.y2, title: 'Y2 Axis'}\r\n        },\r\n        title: 'Chart Title',\r\n        legend: true\r\n      });\r\n\r\n      // transforms to\r\n      return {\r\n        charts: {\r\n          bars: {type: 'Bars'},\r\n          lines: {type: 'Lines'}\r\n        },\r\n        components: {\r\n          // ...\r\n          'axis.x': {type: 'Axis', position: 'bottom', scale: scales.x},\r\n          'axis.x.title': {type: 'Title', position: 'bottom', text: 'X Axis'},\r\n          'axis.y': {type: 'Axis', position: 'left', scale: scales.y},\r\n          'axis.y.title': {type: 'Title', position: 'left', text: 'Y Axis'},\r\n          'axis.y2': {type: 'Axis', position: 'right', scale: scales.y2},\r\n          'axis.y2.title': {type: 'Title', position: 'right', text: 'Y2 Axis'},\r\n          title: {type: 'Title', position: 'top', text: 'Chart Title'},\r\n          legend: {type: 'Legend', position: 'right', charts: ['bars', 'lines']}\r\n        }\r\n      };\r\n    })\r\n  ```\r\n  @method d3.compose.xy\r\n  @for extensions\r\n  @param {Object} options\r\n  @param {Object} [options.charts] Standard d3.compose charts options\r\n  @param {Object} [options.components] Standard d3.compose components options\r\n  @param {Object} [options.axes] Set of axes components with defaults (type: 'Axis', position: (by key: x -> 'bottom', y -> 'left', x2 -> 'top', y2: 'right')) and 'title' that creates matched title component\r\n  @param {String|Object} [options.title] Title text (with defaults) or options\r\n  @param {Boolean|Object} [options.legend] Show legend (with defaults) or legend options\r\n*/\r\nexport default function xy(options) {\r\n  options = options || {};\r\n  var charts = extend({}, options.charts);\r\n  var components = {};\r\n  var default_margin = 8;\r\n  var default_margins = {top: default_margin, right: default_margin, bottom: default_margin, left: default_margin};\r\n\r\n  // Title\r\n  if (options.title) {\r\n    var title_options = options.title;\r\n    if (isString(title_options))\r\n      title_options = {text: title_options};\r\n\r\n    title_options = defaults({}, title_options, {\r\n      type: 'Title',\r\n      position: 'top',\r\n      margins: default_margins\r\n    });\r\n\r\n    components.title = title_options;\r\n  }\r\n\r\n  // Axes\r\n  objectEach(options.axes, function(axis_options, key) {\r\n    var positionByKey = {\r\n      x: 'bottom',\r\n      y: 'left',\r\n      x2: 'top',\r\n      y2: 'right',\r\n      secondaryX: 'top',\r\n      secondaryY: 'right'\r\n    };\r\n\r\n    axis_options = defaults({}, axis_options, {\r\n      type: 'Axis',\r\n      position: positionByKey[key]\r\n    });\r\n\r\n    components['axis.' + key] = axis_options;\r\n\r\n    if (axis_options.title) {\r\n      var axis_title_options = axis_options.title;\r\n      if (isString(axis_title_options))\r\n        axis_title_options = {text: axis_title_options};\r\n\r\n      axis_title_options = defaults({}, axis_title_options, {\r\n        type: 'AxisTitle',\r\n        position: axis_options.position,\r\n        margins: defaults({\r\n          top: {top: default_margin / 2},\r\n          right: {left: default_margin / 2},\r\n          bottom: {bottom: default_margin / 2},\r\n          left: {right: default_margin / 2}\r\n        }[axis_options.position], default_margins)\r\n      });\r\n\r\n      components['axis.' + key + '.title'] = axis_title_options;\r\n    }\r\n  });\r\n\r\n  // Legend\r\n  if (options.legend) {\r\n    var legend_options = options.legend;\r\n    if (legend_options === true)\r\n      legend_options = {};\r\n\r\n    legend_options = defaults({}, legend_options, {\r\n      type: 'Legend',\r\n      position: 'right',\r\n      margins: default_margins\r\n    });\r\n\r\n    // By default, use all charts for legend\r\n    if (!legend_options.data && !legend_options.charts)\r\n      legend_options.charts = Object.keys(charts);\r\n\r\n    components.legend = legend_options;\r\n  }\r\n\r\n  return {\r\n    charts: charts,\r\n    components: extend(components, options.components)\r\n  };\r\n}\r\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nimport mixins from './src/mixins';\r\n\r\nimport Lines, { lines } from './src/charts/Lines';\r\nimport Bars, { bars } from './src/charts/Bars';\r\nimport StackedBars, { stackedBars } from './src/charts/StackedBars';\r\nimport HorizontalBars, { horizontalBars } from './src/charts/HorizontalBars';\r\nimport HorizontalStackedBars, { horizontalStackedBars } from './src/charts/HorizontalStackedBars';\r\nimport Labels, { labels } from './src/charts/Labels';\r\nimport HoverLabels, { hoverLabels } from './src/charts/HoverLabels';\r\n\r\nimport Text, { text } from './src/components/Text';\r\nimport Title, { title } from './src/components/Title';\r\nimport Axis, { axis } from './src/components/Axis';\r\nimport AxisTitle, { axisTitle } from './src/components/AxisTitle';\r\nimport Legend, { legend } from './src/components/Legend';\r\nimport InsetLegend, { insetLegend } from './src/components/InsetLegend';\r\n\r\nimport xy from './src/extensions/xy';\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered,\r\n\r\n  mixins: mixins,\r\n\r\n  Lines: Lines,\r\n  lines: lines,\r\n  Bars: Bars,\r\n  bars: bars,\r\n  StackedBars: StackedBars,\r\n  stackedBars: stackedBars,\r\n  HorizontalBars: HorizontalBars,\r\n  horizontalBars: horizontalBars,\r\n  HorizontalStackedBars: HorizontalStackedBars,\r\n  horizontalStackedBars: horizontalStackedBars,\r\n  Labels: Labels,\r\n  labels: labels,\r\n  HoverLabels: HoverLabels,\r\n  hoverLabels: hoverLabels,\r\n\r\n  Text: Text,\r\n  text: text,\r\n  Title: Title,\r\n  title: title,\r\n  Axis: Axis,\r\n  axis: axis,\r\n  AxisTitle: AxisTitle,\r\n  axisTitle: axisTitle,\r\n  Legend: Legend,\r\n  legend: legend,\r\n  InsetLegend: InsetLegend,\r\n  insetLegend: insetLegend,\r\n\r\n  xy: xy\r\n};\r\n\r\nexport default d3c;\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\n\r\n/**\r\n  TEMP Clear namespace from mixins\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nexport default d3.chart('Base', {\r\n  initialize: function(options) {\r\n    // Bind all di-functions to this chart\r\n    bindAllDi(this);\r\n\r\n    if (options)\r\n      this.options(options);\r\n  },\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property('data'),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property('a'),\r\n      b: property('b', {\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property('options', {\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  },\r\n\r\n  // Store fully-transformed data for reference\r\n  // (Base is last transform to be called, so stored data has been fully transformed)\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    this.data(data);\r\n    return data;\r\n  },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    this.trigger('before:draw', data);\r\n    d3.chart().prototype.draw.apply(this, arguments);\r\n    this.trigger('draw', data);\r\n  }\r\n});\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property('centered', {\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Chart', {}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: false` and the static `layer_type: 'Chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Component', {\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property('position', {\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property('width', {\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property('height', {\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property('centered', {\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      if (options.height)\r\n        y += (options.height - this.height()) / 2;\r\n      if (options.width)\r\n        x += (options.width - this.width()) / 2;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nexport default Component.extend('Overlay', {\r\n  initialize: function() {\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property('x', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property('y', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property('hidden', {\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property('style', {\r\n    default_value: function() {\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        transform: translate(this.x() + 'px', this.y() + 'px')\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n","import {\r\n  extend,\r\n  isUndefined,\r\n  isObject,\r\n  valueOrDefault\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  isSeriesData,\r\n  createScale,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling XY data\r\n\r\n  @class XY\r\n  @namespace mixins\r\n*/\r\nvar XY = {\r\n  initialize: function() {\r\n    // Set scale ranges once chart is ready to be rendered\r\n    this.on('before:draw', this.setScales.bind(this));\r\n  },\r\n\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    // Transform series data from values to x,y\r\n    if (isSeriesData(data)) {\r\n      data = data.map(function(series) {\r\n        return extend({}, series, {\r\n          values: series.values.map(normalizeData)\r\n        });\r\n      });\r\n    }\r\n    else if (Array.isArray(data)) {\r\n      data = data.map(normalizeData);\r\n    }\r\n\r\n    return data;\r\n\r\n    function normalizeData(point, index) {\r\n      if (!isObject(point))\r\n        point = {x: index, y: point};\r\n      else if (!Array.isArray(point) && isUndefined(point.x))\r\n        point.x = index;\r\n\r\n      return point;\r\n    }\r\n  },\r\n\r\n  /**\r\n    Get/set x-scale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  xScale: property('xScale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setXScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultXScale();\r\n        this.setXScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set yscale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  yScale: property('yScale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setYScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultYScale();\r\n        this.setYScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Key on data object for x-value\r\n\r\n    @property xKey\r\n    @type String\r\n    @default 'x'\r\n  */\r\n  xKey: property('xKey', {\r\n    default_value: 'x'\r\n  }),\r\n\r\n  /**\r\n    Key on data object for y-value\r\n\r\n    @property yKey\r\n    @type String\r\n    @default 'y'\r\n  */\r\n  yKey: property('yKey', {\r\n    default_value: 'y'\r\n  }),\r\n\r\n  /**\r\n    Get scaled x-value for given data-point\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y-value for given data-point\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get key for data-point. Looks for \"key\" on `d` first, otherwise uses x-value.\r\n\r\n    @method key\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Any}\r\n  */\r\n  key: di(function(chart, d, i) {\r\n    return valueOrDefault(d.key, chart.xValue.call(this, d, i));\r\n  }),\r\n\r\n  /**\r\n    Get scaled `x = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled `y = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get x-value for data-point. Checks for `xKey()` on `d` first, otherwise uses `d[0]`.\r\n\r\n    @example\r\n    ```js\r\n    xValue({x: 10, y: 20}); // -> 10\r\n    xValue([10, 20]); // -> 10\r\n    ```\r\n    @method xValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  xValue: di(function(chart, d) {\r\n    var key = chart.xKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[0];\r\n  }),\r\n\r\n  /**\r\n    Get y-value for data-point. Checks for `yKey()` on `d` first, otherwise uses `d[1]`.\r\n\r\n    @example\r\n    ```js\r\n    yValue({x: 10, y: 20}); // -> 20\r\n    yValue([10, 20]); // -> 20\r\n    ```\r\n    @method yValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  yValue: di(function(chart, d) {\r\n    var key = chart.yKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[1];\r\n  }),\r\n\r\n  /**\r\n    Set x- and y-scale ranges (using `setXScaleRange` and `setYScaleRange`)\r\n\r\n    @method setScales\r\n  */\r\n  setScales: function() {\r\n    this.setXScaleRange(this.xScale());\r\n    this.setYScaleRange(this.yScale());\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([0, this.width()]);\r\n  },\r\n\r\n  /**\r\n    Set range(height, 0) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Get default x-scale: `{data: this.data(), key: 'x'}`\r\n\r\n    @method getDefaultXScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'x'\r\n    });\r\n  },\r\n\r\n  /**\r\n    Get default y-scale: `{data: this.data(), key: 'y'}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultYScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'y'\r\n    });\r\n  }\r\n};\r\n\r\nexport default XY;\r\n","import { createScale } from '../helpers';\r\nimport { extend } from '../utils';\r\nimport XY from './xy';\r\n\r\n/**\r\n  Mixin for charts of centered key,value data (x: index, y: value, key)\r\n\r\n  @class XYValues\r\n  @namespace mixins\r\n  @extends XY\r\n*/\r\nvar XYValues = extend({}, XY, {\r\n  /**\r\n    Determine width of data-point when displayed adjacent\r\n\r\n    @method adjacentWidth\r\n    @return {Number}\r\n  */\r\n  adjacentWidth: function() {\r\n    var series_count = this.seriesCount ? this.seriesCount() : 1;\r\n    return this.layeredWidth() / series_count;\r\n  },\r\n\r\n  /**\r\n    Determine layered width (width of group for adjacent)\r\n\r\n    @method layeredWidth\r\n    @return {Number}\r\n  */\r\n  layeredWidth: function() {\r\n    var range_band = this.xScale() && this.xScale().rangeBand && this.xScale().rangeBand();\r\n    var width = isFinite(range_band) ? range_band : 0;\r\n\r\n    return width;\r\n  },\r\n\r\n  /**\r\n    Determine item width based on series display type (adjacent or layered)\r\n\r\n    @method itemWidth\r\n    @return {Number}\r\n  */\r\n  itemWidth: function() {\r\n    var scale = this.xScale();\r\n    return scale && scale.width ? scale.width() : this.layeredWidth();\r\n  },\r\n\r\n  // Override default x-scale to use ordinal type\r\n  /**\r\n    Override default x-scale to use ordinal type: `{type: 'ordinal', data: this.data(), key: 'y', centered: true}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      type: 'ordinal',\r\n      data: this.data(),\r\n      key: 'x',\r\n      centered: true\r\n    });\r\n  }\r\n});\r\n\r\nexport default XYValues;\r\n","import { di } from '../helpers';\r\n\r\n/**\r\n  Mixin for inverting XY calculations with x vertical, increasing bottom-to-top and y horizontal, increasing left-to-right\r\n\r\n  @class XYInverted\r\n  @namespace mixins\r\n*/\r\nvar XYInverted = {\r\n  /**\r\n    Get x-value for plotting (scaled y-value)\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get y-value for plotting (scaled x-value)\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y = 0 value (along x-axis)\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled x = 0 value (along y-axis)\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Set range (height, 0) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([0, this.width()]);\r\n  }\r\n};\r\n\r\nexport default XYInverted;\r\n","import d3 from 'd3';\r\nimport { property } from '../helpers';\r\nimport {\r\n  extend,\r\n  defaults,\r\n  isBoolean\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling labels in charts\r\n\r\n  @class Labels\r\n  @namespace mixins\r\n*/\r\nvar Labels = {\r\n  /**\r\n    Call during chart initialization to add labels to chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      initialize: function() {\r\n        // this.layer()...\r\n\r\n        // Attach labels layer\r\n        this.attachLabels();\r\n      }\r\n    }));\r\n    ```\r\n    @method attachLabels\r\n  */\r\n  attachLabels: function() {\r\n    var options = this.labels();\r\n    options.parent = this;\r\n\r\n    var LabelsClass = d3.chart(options.type);\r\n    var base = this.base.append('g').attr('class', 'chart-labels');\r\n    var labels = this._labels = new LabelsClass(base, options);\r\n\r\n    // Proxy x and y to parent chart\r\n    this.proxyLabelMethods.forEach(function(method) {\r\n      labels[method] = this[method];\r\n    }, this);\r\n\r\n    this.on('draw', function(data) {\r\n      options = this.labels();\r\n      options.parent = this;\r\n\r\n      labels.options(options);\r\n\r\n      if (options.display !== false)\r\n        labels.draw(options.data || data);\r\n      else\r\n        labels.draw([]);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Options passed to labels chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      // ...\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.labels(true); // -> display labels with defaults\r\n    chart.labels(false); // -> hide labels\r\n    chart.labels({offset: 10}); // -> pass options to labels chart\r\n\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        return {\r\n          charts: {\r\n            custom: {labels: {offset: 10}}\r\n          }\r\n        };\r\n      });\r\n    ```\r\n    @property labels\r\n    @type Object\r\n  */\r\n  labels: property('labels', {\r\n    get: function(value) {\r\n      if (isBoolean(value))\r\n        value = {display: value};\r\n      else if (!value)\r\n        value = {display: false};\r\n\r\n      return defaults({}, value, {\r\n        type: 'Labels'\r\n      });\r\n    }\r\n  }),\r\n\r\n  // Array of methods to proxy on labels chart\r\n  proxyLabelMethods: []\r\n};\r\n\r\n/**\r\n  Mixin for handling labels in XY charts\r\n  (proxies `x` and `y` to properly place labels for XY charts)\r\n\r\n  @class LabelsXY\r\n  @namespace mixins\r\n  @extends Labels\r\n*/\r\nvar LabelsXY = extend({}, Labels, {\r\n  proxyLabelMethods: ['x', 'y']\r\n});\r\n\r\nexport {\r\n  Labels as default,\r\n  LabelsXY\r\n};\r\n","import Series from './series';\r\nimport XY from './xy';\r\nimport XYValues from './xy-values';\r\nimport XYInverted from './xy-inverted';\r\nimport Labels, { LabelsXY } from './labels';\r\nimport Hover, { HoverPoints } from './hover';\r\nimport Transition from './transition';\r\nimport StandardLayer from './standard-layer';\r\n\r\nvar mixins = {\r\n  Series: Series,\r\n  XY: XY,\r\n  XYValues: XYValues,\r\n  XYInverted: XYInverted,\r\n  Labels: Labels,\r\n  LabelsXY: LabelsXY,\r\n  Hover: Hover,\r\n  HoverPoints: HoverPoints,\r\n  Transition: Transition,\r\n  StandardLayer: StandardLayer,\r\n\r\n  // DEPRECATED: renamed to XYInverted\r\n  InvertedXY: XYInverted,\r\n  // DEPRECATED: renamed to LabelsXY\r\n  XYLabels: LabelsXY\r\n};\r\n\r\nexport {\r\n  mixins as default,\r\n  Series,\r\n  XY,\r\n  XYValues,\r\n  XYInverted,\r\n  Labels,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  property,\r\n  di,\r\n  mixin,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XY,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Create an XY Lines chart with single or series data.\r\n\r\n  ### Extending\r\n\r\n  Great care has been taken in making the standard charts in d3.compose extensible.\r\n  To extend the `Lines` chart, the following methods are available:\r\n\r\n  - `createLine`\r\n  - `lineKey`\r\n  - `lineData`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  View the `Lines.js` source for the default implementation and more information on these methods.\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    return {\r\n      charts: {\r\n        input: {\r\n          type: 'Lines'\r\n          data: data.input,\r\n          // xScale: ...,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([1, 2, 3]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 3}]}\r\n    {values: [{x: 0, y: 3}, {x: 1, y: 2}, {x: 2, y: 1}]}\r\n  ]);\r\n  ```\r\n  @class Lines\r\n  @extends Chart, Series, XY, LabelsXY, Hover, HoverPoints, Transition, StandardLayer\r\n*/\r\nvar Lines = Chart.extend('Lines', mixin(\r\n  Series,\r\n  XY,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer,\r\n  {\r\n    initialize: function() {\r\n      this.lines = {};\r\n\r\n      // Use standard series layer for extensibility\r\n      // (dataBind, insert, and events defined in prototype)\r\n      this.standardSeriesLayer('Lines', this.base.append('g').classed('chart-lines', true));\r\n\r\n      this.attachLabels();\r\n    },\r\n\r\n    /**\r\n      Set interpolation mode for line\r\n\r\n      - See: [SVG-Shapes#line_interpolate](https://github.com/mbostock/d3/wiki/SVG-Shapes#line_interpolate)\r\n      - Set to `null` or `'linear'` for no interpolation\r\n\r\n      @property interpolate\r\n      @type String\r\n      @default monotone\r\n    */\r\n    interpolate: property('interpolate', {\r\n      default_value: 'monotone'\r\n    }),\r\n\r\n    // Create line on insert (keyed by series/index)\r\n    createLine: di(function(chart, d, i, j) {\r\n      var key = chart.lineKey.call(this, d, i, j);\r\n      var line = chart.lines[key] = d3.svg.line()\r\n        .x(chart.x)\r\n        .y(chart.y);\r\n\r\n      var interpolate = d.interpolate || chart.interpolate();\r\n      if (interpolate)\r\n        line.interpolate(interpolate);\r\n    }),\r\n\r\n    // Get key for line (from series key or index)\r\n    lineKey: di(function(chart, d, i, j) {\r\n      var key = chart.seriesKey(chart.seriesData.call(this, d, i, j));\r\n      return key != null ? key : chart.seriesIndex.call(this, d, i, j);\r\n    }),\r\n\r\n    // Get data for line\r\n    lineData: di(function(chart, d, i, j) {\r\n      var key = chart.lineKey.call(this, d, i, j);\r\n      if (chart.lines[key])\r\n        return chart.lines[key](d);\r\n    }),\r\n\r\n    // Override StandardLayer\r\n    onDataBind: function onDataBind(selection, data) {\r\n      return selection.selectAll('path')\r\n        .data(function(d, i, j) {\r\n          return [data.call(selection, d, i, j)];\r\n        });\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onInsert: function onInsert(selection) {\r\n      return selection.append('path')\r\n        .classed('chart-line', true)\r\n        .each(this.createLine);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onMergeTransition: function onMergeTransition(selection) {\r\n      this.setupTransition(selection);\r\n\r\n      selection\r\n        .attr('d', this.lineData)\r\n        .attr('style', this.itemStyle);\r\n    }\r\n  }\r\n));\r\n\r\nvar lines = createHelper('Lines');\r\n\r\nexport {\r\n  Lines as default,\r\n  lines\r\n};\r\n","import {\r\n  objectFind\r\n} from '../utils';\r\nimport {\r\n  mixin,\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XYValues,\r\n  LabelsXY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Bars chart with centered or adjacent display for single or series data.\r\n\r\n  To display bars for different series next to each other (adjacent),\r\n  use the `adjacent` option when creating the `xScale` (see example below).\r\n\r\n  ### Extending\r\n\r\n  To extend the `Bars` chart, the following methods are available:\r\n\r\n  - `barHeight`\r\n  - `barWidth`\r\n  - `barX`\r\n  - `barY`\r\n  - `barClass`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'Bars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class Bars\r\n  @extends Chart, Series, XYValues, LabelsXY, Hover, Transition, StandardLayer\r\n*/\r\nvar Bars = Chart.extend('Bars', mixin(\r\n  Series,\r\n  XYValues,\r\n  LabelsXY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer,\r\n  {\r\n    initialize: function() {\r\n      this.on('before:draw', function() {\r\n        this.offset_axis = this.getOffsetAxis();\r\n      }.bind(this));\r\n\r\n      // Use standard series layer for extensibility\r\n      // (dataBind, insert, and events defined in prototype)\r\n      this.standardSeriesLayer('Bars', this.base.append('g').classed('chart-bars', true));\r\n      this.attachLabels();\r\n    },\r\n\r\n    barHeight: di(function(chart, d, i) {\r\n      var height = Math.abs(chart.y0() - chart.y.call(this, d, i)) - chart.barOffset();\r\n      return height > 0 ? height : 0;\r\n    }),\r\n    barWidth: di(function(chart) {\r\n      return chart.itemWidth();\r\n    }),\r\n    barX: di(function(chart, d, i) {\r\n      return chart.x.call(this, d, i) - chart.itemWidth() / 2;\r\n    }),\r\n    barY: di(function(chart, d, i) {\r\n      var y = chart.y.call(this, d, i);\r\n      var y0 = chart.y0();\r\n\r\n      return y < y0 ? y : y0 + chart.barOffset();\r\n    }),\r\n    bar0: di(function(chart, d, i) {\r\n      var y0 = chart.y0();\r\n      var offset = chart.barOffset();\r\n      return chart.y.call(this, d, i) <= y0 ? y0 - offset : y0 + offset;\r\n    }),\r\n    barClass: di(function(chart, d) {\r\n      return 'chart-bar' + (d['class'] ? ' ' + d['class'] : '');\r\n    }),\r\n\r\n    // Shift bars slightly to account for axis thickness\r\n    barOffset: function barOffset() {\r\n      if (this.offset_axis) {\r\n        var axis_thickness = parseInt(this.offset_axis.base.select('.domain').style('stroke-width')) || 0;\r\n        return axis_thickness / 2;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n\r\n    getOffsetAxis: function getOffsetAxis() {\r\n      var components = this.container && this.container.components();\r\n      return objectFind(components, function(component) {\r\n        if (component.type == 'Axis' && component.position() == 'bottom')\r\n          return component;\r\n      });\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onDataBind: function onDataBind(selection, data) {\r\n      return selection.selectAll('rect')\r\n        .data(data, this.key);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onInsert: function onInsert(selection) {\r\n      return selection.append('rect')\r\n        .on('mouseenter', this.mouseEnterPoint)\r\n        .on('mouseleave', this.mouseLeavePoint);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onEnter: function onEnter(selection) {\r\n      selection\r\n        .attr('y', this.bar0)\r\n        .attr('height', 0);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onMerge: function onMerge(selection) {\r\n      selection\r\n        .attr('class', this.barClass)\r\n        .attr('style', this.itemStyle)\r\n        .attr('x', this.barX)\r\n        .attr('width', this.barWidth);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onMergeTransition: function onMergeTransition(selection) {\r\n      this.setupTransition(selection);\r\n\r\n      selection\r\n        .attr('y', this.barY)\r\n        .attr('height', this.barHeight);\r\n    },\r\n\r\n    // Override StandardLayer\r\n    onExit: function onExit(selection) {\r\n      selection.remove();\r\n    }\r\n  }\r\n));\r\n\r\nvar bars = createHelper('Bars');\r\n\r\nexport {\r\n  Bars as default,\r\n  bars\r\n};\r\n","import {\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport Bars from './Bars';\r\n\r\n/**\r\n  Bars chart with values stacked on top of each other\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        stacked_output: {\r\n          type: 'StackedBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class StackedBars\r\n  @extends Bars\r\n*/\r\nvar StackedBars = Bars.extend('StackedBars', {\r\n  transform: function(data) {\r\n    // Re-initialize bar positions each time data changes\r\n    this.bar_positions = [];\r\n    return data;\r\n  },\r\n\r\n  barHeight: di(function(chart, d, i) {\r\n    var height = Math.abs(chart.y0() - chart.y.call(this, d, i));\r\n    var offset = chart.seriesIndex.call(this, d, i) === 0 ? chart.barOffset() : 0;\r\n    return height > 0 ? height - offset : 0;\r\n  }),\r\n  barY: di(function(chart, d, i) {\r\n    var y = chart.y.call(this, d, i);\r\n    var y0 = chart.y0();\r\n\r\n    // Only handle positive y-values\r\n    if (y > y0)\r\n      return;\r\n\r\n    if (chart.bar_positions.length <= i)\r\n      chart.bar_positions.push(0);\r\n\r\n    var previous = chart.bar_positions[i] || y0;\r\n    var new_position = previous - (y0 - y);\r\n\r\n    chart.bar_positions[i] = new_position;\r\n\r\n    return new_position;\r\n  })\r\n});\r\n\r\nvar stackedBars = createHelper('StackedBars');\r\n\r\nexport {\r\n  StackedBars as default,\r\n  stackedBars\r\n};\r\n","import { objectFind } from '../utils';\r\nimport {\r\n  mixin,\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport { XYInverted } from '../mixins';\r\nimport Bars from './Bars';\r\n\r\n/**\r\n  Bars chart with bars that group from left-to-right\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'HorizontalBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class HorizontalBars\r\n  @extends Bars, XYInverted\r\n*/\r\nvar HorizontalBars = Bars.extend('HorizontalBars', mixin(XYInverted, {\r\n  barX: di(function(chart, d, i) {\r\n    var x = chart.x.call(this, d, i);\r\n    var x0 = chart.x0();\r\n\r\n    return x < x0 ? x : x0 + chart.barOffset();\r\n  }),\r\n  barY: di(function(chart, d, i) {\r\n    return chart.y.call(this, d, i) - chart.itemWidth() / 2;\r\n  }),\r\n  barWidth: di(function(chart, d, i) {\r\n    var width = Math.abs(chart.x0() - chart.x.call(this, d, i)) - chart.barOffset();\r\n    return width > 0 ? width : 0;\r\n  }),\r\n  barHeight: di(function(chart) {\r\n    return chart.itemWidth();\r\n  }),\r\n  bar0: di(function(chart, d, i) {\r\n    var x0 = chart.x0();\r\n    var offset = chart.barOffset();\r\n    return chart.x.call(this, d, i) >= x0 ? x0 + offset : x0 - offset;\r\n  }),\r\n\r\n  getOffsetAxis: function getOffsetAxis() {\r\n    var components = this.container && this.container.components();\r\n    return objectFind(components, function(component) {\r\n      if (component.type == 'Axis' && component.position() == 'left')\r\n        return component;\r\n    });\r\n  },\r\n\r\n  onEnter: function onEnter(selection) {\r\n    selection\r\n      .attr('x', this.bar0)\r\n      .attr('width', 0);\r\n  },\r\n\r\n  onMerge: function onMerge(selection) {\r\n    selection\r\n      .attr('class', this.barClass)\r\n      .attr('style', this.itemStyle)\r\n      .attr('y', this.barY)\r\n      .attr('height', this.barHeight);\r\n  },\r\n\r\n  onMergeTransition: function onMergeTransition(selection) {\r\n    this.setupTransition(selection);\r\n\r\n    selection\r\n      .attr('x', this.barX)\r\n      .attr('width', this.barWidth);\r\n  }\r\n}));\r\n\r\nvar horizontalBars = createHelper('HorizontalBars');\r\n\r\nexport {\r\n  HorizontalBars as default,\r\n  horizontalBars\r\n};\r\n","import {\r\n  di,\r\n  createHelper\r\n} from '../helpers';\r\nimport HorizontalBars from './HorizontalBars';\r\n\r\n/**\r\n  Horizontal Stacked Bars\r\n\r\n  (See `Bars` for extensibility details)\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Display bars for different series next to each other (adjacent: true)\r\n    var xScale = {type: 'ordinal', adjacent: true, domain: [0, 1, 2]};\r\n\r\n    return {\r\n      charts: {\r\n        output: {\r\n          type: 'HorizontalStackedBars',\r\n          data: data.output,\r\n          xScale: xScale,\r\n          // yScale: ...,\r\n          // other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  // Single y-values\r\n  chart.draw([10, 20, 30]);\r\n\r\n  // Series (x,y) values\r\n  chart.draw([\r\n    {values: [{x: 0, y: 10}, {x: 1, y: 20}, {x: 2, y: 30}]},\r\n    {values: [{x: 0, y: 30}, {x: 1, y: 20}, {x: 2, y: 10}]}\r\n  ]);\r\n  ```\r\n  @class HorizontalStackedBars\r\n  @extends HorizontalBars\r\n*/\r\nvar HorizontalStackedBars = HorizontalBars.extend('HorizontalStackedBars', {\r\n  transform: function(data) {\r\n    // Re-initialize bar positions each time data changes\r\n    this.bar_positions = [];\r\n    return data;\r\n  },\r\n\r\n  barWidth: di(function(chart, d, i) {\r\n    var width = Math.abs(chart.x0() - chart.x.call(this, d, i));\r\n    var offset = chart.seriesIndex.call(this, d, i) === 0 ? chart.barOffset() : 0;\r\n    return width > 0 ? width - offset : 0;\r\n  }),\r\n  barX: di(function(chart, d, i) {\r\n    var x = chart.x.call(this, d, i);\r\n    var x0 = chart.x0();\r\n\r\n    // Only handle positive x-values\r\n    if (x < x0)\r\n      return;\r\n\r\n    if (chart.bar_positions.length <= i)\r\n      chart.bar_positions.push(0);\r\n\r\n    var previous = chart.bar_positions[i] || (x0 + chart.barOffset());\r\n    var new_position = previous + (x - x0);\r\n\r\n    chart.bar_positions[i] = new_position;\r\n\r\n    return previous;\r\n  })\r\n});\r\n\r\nvar horizontalStackedBars = createHelper('HorizontalStackedBars');\r\n\r\nexport {\r\n  HorizontalStackedBars as default,\r\n  horizontalStackedBars\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  contains,\r\n  first,\r\n  isString,\r\n  isNumber,\r\n  objectEach,\r\n  valueOrDefault\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  di,\r\n  mixin,\r\n  createHelper,\r\n  isSeriesData,\r\n  translate,\r\n  alignText\r\n} from '../helpers';\r\nimport {\r\n  Series,\r\n  XY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer\r\n} from '../mixins';\r\nimport Chart from '../Chart';\r\n\r\n/**\r\n  Standalone or \"embeddable\" labels (uses `mixins.Labels` and `attachLabels` to embed in chart)\r\n\r\n  ### Extending\r\n\r\n  To extend the `Labels` chart, the following methods are available:\r\n\r\n  - `insertLabels`\r\n  - `mergeLabels`\r\n  - `layoutLabels`\r\n  - `transitionLabels`\r\n  - `onDataBind`\r\n  - `onInsert`\r\n  - `onEnter`\r\n  - `onEnterTransition`\r\n  - `onUpdate`\r\n  - `onUpdateTransition`\r\n  - `onMerge`\r\n  - `onMergeTransition`\r\n  - `onExit`\r\n  - `onExitTransition`\r\n\r\n  View the `Labels.js` source for the default implementation and more information on these methods.\r\n\r\n  @example\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    return {\r\n      charts: {\r\n        input: {\r\n          type: 'Lines',\r\n          data: data.input,\r\n          // xScale, yScale, other properties...\r\n\r\n          // Show labels with default properties\r\n          labels: true\r\n        },\r\n        output: {\r\n          type: 'Bars',\r\n          data: data.output,\r\n          // xScale, yScale, other properties...\r\n\r\n          // Pass options to labels\r\n          labels: {\r\n            offset: 2,\r\n            position: 'top',\r\n            style: {\r\n              'font-size': '14px'\r\n            },\r\n            format: d3.format(',0d')\r\n          }\r\n        },\r\n        labels: {\r\n          type: 'Labels',\r\n          data: data.labels,\r\n\r\n          // xScale, yScale, other properties...\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  chart.draw({\r\n    input: [1, 2, 3],\r\n    output: [10, 20, 30],\r\n    labels: [\r\n      {x: 0, y: 0},\r\n      {x: 0, y: 30, label: 'Override (y by default)'},\r\n      {x: 2, y: 0},\r\n      {x: 2, y: 30}\r\n    ]\r\n  });\r\n  ```\r\n  @class Labels\r\n  @extends Chart, Series, XY, Hover, Transition, StandardLayer\r\n*/\r\nvar Labels = Chart.extend('Labels', mixin(\r\n  Series,\r\n  XY,\r\n  Hover,\r\n  Transition,\r\n  StandardLayer,\r\n  {\r\n    initialize: function() {\r\n      // Proxy attach to parent for hover\r\n      var parent = this.options().parent;\r\n      if (parent) {\r\n        this.parent = parent;\r\n        parent.on('attach', function() {\r\n          this.container = parent.container;\r\n          this.trigger('attach');\r\n        }.bind(this));\r\n      }\r\n\r\n      // Use StandardLayer for extensibility\r\n      this.standardSeriesLayer('Labels', this.base);\r\n    },\r\n\r\n    transform: function(data) {\r\n      if (!isSeriesData(data))\r\n        data = [{key: 'labels', name: 'Labels', values: data}];\r\n\r\n      // TODO Use ticks / domain from xScale\r\n      // ticks = scale.ticks ? scale.ticks.apply(scale, [10]) : scale.domain()\r\n      return data;\r\n    },\r\n\r\n    /**\r\n      Formatting function or string (string is passed to `d3.format`) for label values\r\n\r\n      @property format\r\n      @type String|Function\r\n    */\r\n    format: property('format', {\r\n      type: 'Function',\r\n      set: function(value) {\r\n        if (isString(value)) {\r\n          return {\r\n            override: d3.format(value)\r\n          };\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Label position relative to data point\r\n      (top, right, bottom, or left)\r\n\r\n      @property position\r\n      @type String\r\n      @default top\r\n    */\r\n    position: property('position', {\r\n      default_value: 'top',\r\n      validate: function(value) {\r\n        return contains(['top', 'right', 'bottom', 'left'], value);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Offset between data point and label\r\n      (if `Number` is given, offset is set based on position)\r\n\r\n      @property offset\r\n      @type Number|Object\r\n      @default {x: 0, y: 0}\r\n    */\r\n    offset: property('offset', {\r\n      default_value: {x: 0, y: 0},\r\n      set: function(offset) {\r\n        if (isNumber(offset)) {\r\n          offset = {\r\n            top: {x: 0, y: -offset},\r\n            right: {x: offset, y: 0},\r\n            bottom: {x: 0, y: offset},\r\n            left: {x: -offset, y: 0}\r\n          }[this.position()];\r\n\r\n          if (!offset)\r\n            offset = {x: 0, y: 0};\r\n\r\n          return {\r\n            override: offset\r\n          };\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Padding between text and label background\r\n\r\n      @property padding\r\n      @type Number\r\n      @default 1\r\n    */\r\n    padding: property('padding', {default_value: 1}),\r\n\r\n    /**\r\n      Define text anchor (start, middle, or end)\r\n\r\n      (set by default based on label position)\r\n\r\n      @property anchor\r\n      @type String\r\n      @default middle\r\n    */\r\n    anchor: property('anchor', {\r\n      default_value: function() {\r\n        return {\r\n          'top': 'middle',\r\n          'right': 'start',\r\n          'bottom': 'middle',\r\n          'left': 'end'\r\n        }[this.position()];\r\n      },\r\n      validate: function(value) {\r\n        return contains(['start', 'middle', 'end'], value);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Define text-aligmment (top, middle, or bottom)\r\n\r\n      (set by default based on label position)\r\n\r\n      @property alignment\r\n      @type String\r\n      @default middle\r\n    */\r\n    alignment: property('alignment', {\r\n      default_value: function() {\r\n        return {\r\n          'top': 'bottom',\r\n          'right': 'middle',\r\n          'bottom': 'top',\r\n          'left': 'middle'\r\n        }[this.position()];\r\n      },\r\n      validate: function(value) {\r\n        return contains(['top', 'middle', 'bottom'], value);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get label text for data-point (uses \"label\" property or y-value)\r\n\r\n      @method labelText\r\n      @param {Any} d\r\n      @param {Number} i\r\n      @return {String}\r\n    */\r\n    labelText: di(function(chart, d, i) {\r\n      var value = valueOrDefault(d.label, chart.yValue.call(this, d, i));\r\n      var format = chart.format();\r\n\r\n      return format ? format(value) : value;\r\n    }),\r\n\r\n    /**\r\n      Get class for label group\r\n\r\n      @method labelClass\r\n      @param {Any} d\r\n      @param {Number} i\r\n      @return {String}\r\n    */\r\n    labelClass: di(function(chart, d) {\r\n      return 'chart-label' + (d['class'] ? ' ' + d['class'] : '');\r\n    }),\r\n\r\n    onDataBind: function onDataBind(selection, data) {\r\n      return selection.selectAll('g')\r\n        .data(data, this.key);\r\n    },\r\n    onInsert: function onInsert(selection) {\r\n      return selection.append('g')\r\n        .call(this.insertLabels);\r\n    },\r\n    onMerge: function onMerge(selection) {\r\n      selection.attr('class', this.labelClass);\r\n\r\n      this.mergeLabels(selection);\r\n      this.layoutLabels(selection);\r\n    },\r\n    onMergeTransition: function onMergeTransition(selection) {\r\n      // Transition labels into position\r\n      this.setupTransition(selection);\r\n      this.transitionLabels(selection);\r\n    },\r\n\r\n    // (Override for custom labels)\r\n    insertLabels: function(selection) {\r\n      selection.append('rect')\r\n        .attr('class', 'chart-label-bg');\r\n      selection.append('text')\r\n        .attr('class', 'chart-label-text');\r\n    },\r\n\r\n    // (Override for custom labels)\r\n    mergeLabels: function(selection) {\r\n      selection.selectAll('text')\r\n        .text(this.labelText);\r\n    },\r\n\r\n    // (Override for custom labels)\r\n    layoutLabels: function(selection) {\r\n      // Calculate layout\r\n      var chart = this;\r\n      var labels = [];\r\n      var options = {\r\n        offset: chart.offset(),\r\n        padding: chart.padding(),\r\n        anchor: chart.anchor(),\r\n        alignment: chart.alignment()\r\n      };\r\n      selection.each(function(d, i, j) {\r\n        if (!labels[j])\r\n          labels[j] = [];\r\n\r\n        // Store values for label and calculate layout\r\n        var label = chart._prepareLabel(chart, this, d, i, j);\r\n        labels[j].push(label);\r\n\r\n        chart._calculateLayout(chart, options, label);\r\n      });\r\n\r\n      // Collision detection\r\n      this._handleCollisions(chart, labels);\r\n\r\n      // Layout labels\r\n      labels.forEach(function(series) {\r\n        series.forEach(function(label) {\r\n          this._setLayout(chart, label);\r\n        }, this);\r\n      }, this);\r\n    },\r\n\r\n    // (Override for custom labels)\r\n    transitionLabels: function(selection) {\r\n      selection.attr('opacity', 1);\r\n    },\r\n\r\n    //\r\n    // Internal\r\n    //\r\n\r\n    _prepareLabel: function(chart, element, d, i) {\r\n      var selection = d3.select(element);\r\n      var text = selection.select('text');\r\n      var bg = selection.select('rect');\r\n\r\n      return {\r\n        x: chart.x.call(element, d, i),\r\n        y: chart.y.call(element, d, i),\r\n        element: element,\r\n        selection: selection,\r\n        text: {\r\n          element: text.node(),\r\n          selection: text\r\n        },\r\n        bg: {\r\n          element: bg.node(),\r\n          selection: bg\r\n        }\r\n      };\r\n    },\r\n\r\n    _calculateLayout: function(chart, options, label) {\r\n      var text_bounds = label.text.element.getBBox();\r\n\r\n      // Need to adjust text for line-height\r\n      var text_y_adjustment = alignText(label.text.element);\r\n\r\n      // Position background\r\n      var layout = label.bg.layout = {\r\n        x: options.offset.x,\r\n        y: options.offset.y,\r\n        width: text_bounds.width + (2 * options.padding),\r\n        height: text_bounds.height + (2 * options.padding)\r\n      };\r\n\r\n      // Set width / height of label\r\n      label.width = layout.width;\r\n      label.height = layout.height;\r\n\r\n      if (options.anchor == 'end')\r\n        layout.x -= layout.width;\r\n      else if (options.anchor == 'middle')\r\n        layout.x -= (layout.width / 2);\r\n\r\n      if (options.alignment == 'bottom')\r\n        layout.y -= layout.height;\r\n      else if (options.alignment == 'middle')\r\n        layout.y -= (layout.height / 2);\r\n\r\n      // Center text in background\r\n      label.text.layout = {\r\n        x: layout.x + (layout.width / 2) - (text_bounds.width / 2),\r\n        y: layout.y + (layout.height / 2) - (text_bounds.height / 2) + text_y_adjustment\r\n      };\r\n    },\r\n\r\n    _handleCollisions: function(chart, labels) {\r\n      labels.forEach(function(series, seriesIndex) {\r\n        // Check through remaining series for collisions\r\n        labels.slice(seriesIndex + 1).forEach(function(compareSeries) {\r\n          compareSeries.forEach(function(compareLabel) {\r\n            series.forEach(function(label) {\r\n              if (checkForOverlap(label, compareLabel))\r\n                groupLabels(label, compareLabel);\r\n            });\r\n          });\r\n        });\r\n      });\r\n\r\n      function checkForOverlap(labelA, labelB) {\r\n        var a = getEdges(labelA);\r\n        var b = getEdges(labelB);\r\n\r\n        var contained_LR = (b.left < a.left && b.right > a.right);\r\n        var contained_TB = (b.bottom < a.bottom && b.top > a.top);\r\n        var overlap_LR = (b.left >= a.left && b.left < a.right) || (b.right > a.left && b.right <= a.right) || contained_LR;\r\n        var overlap_TB = (b.top >= a.top && b.top < a.bottom) || (b.bottom > a.top && b.bottom <= a.bottom) || contained_TB;\r\n\r\n        return overlap_LR && overlap_TB;\r\n\r\n        function getEdges(label) {\r\n          return {\r\n            left: label.x,\r\n            right: label.x + label.width,\r\n            top: label.y,\r\n            bottom: label.y + label.height\r\n          };\r\n        }\r\n      }\r\n\r\n      function groupLabels(labelA, labelB) {\r\n        if (labelA.group && labelB.group) {\r\n          // Move labelB group labels into labelA group\r\n          objectEach(labelB.group.labels, function(label) {\r\n            labelA.group.labels.push(label);\r\n            label.group = labelA.group;\r\n          });\r\n\r\n          updateGroupPositions(labelA.group);\r\n        }\r\n        else if (labelA.group) {\r\n          addLabelToGroup(labelB, labelA.group);\r\n        }\r\n        else if (labelB.group) {\r\n          addLabelToGroup(labelA, labelB.group);\r\n        }\r\n        else {\r\n          var group = {labels: []};\r\n          addLabelToGroup(labelA, group);\r\n          addLabelToGroup(labelB, group);\r\n        }\r\n      }\r\n\r\n      function addLabelToGroup(label, group) {\r\n        group.labels.push(label);\r\n        label.group = group;\r\n        label.originalY = label.y;\r\n\r\n        updateGroupPositions(group);\r\n      }\r\n\r\n      function updateGroupPositions(group) {\r\n        function reset(label) {\r\n          // Reset to original y\r\n          label.y = label.originalY;\r\n          return label;\r\n        }\r\n        function sortY(a, b) {\r\n          if (a.y < b.y)\r\n            return -1;\r\n          else if (a.y > b.y)\r\n            return 1;\r\n          else\r\n            return 0;\r\n        }\r\n\r\n        var byY = group.labels.map(reset).sort(sortY).reverse();\r\n\r\n        byY.forEach(function(label, index) {\r\n          var prev = first(byY, index);\r\n          var overlap;\r\n\r\n          for (var i = prev.length - 1; i >= 0; i--) {\r\n            if (checkForOverlap(label, prev[i])) {\r\n              overlap = prev[i];\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (overlap)\r\n            label.y = overlap.y - label.height;\r\n        });\r\n      }\r\n    },\r\n\r\n    _setLayout: function(chart, label) {\r\n      label.bg.selection\r\n        .attr('transform', translate(label.bg.layout.x, label.bg.layout.y))\r\n        .attr('width', label.bg.layout.width)\r\n        .attr('height', label.bg.layout.height);\r\n\r\n      label.text.selection\r\n        .attr('transform', translate(label.text.layout.x, label.text.layout.y));\r\n\r\n      // Position label and set opacity to fade-in\r\n      label.selection\r\n        .attr('transform', translate(label.x, label.y))\r\n        .attr('opacity', 0);\r\n    }\r\n  }\r\n), {\r\n  z_index: 150\r\n});\r\n\r\nvar labels = createHelper('Labels');\r\n\r\nexport {\r\n  Labels as default,\r\n  labels\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  property,\r\n  mixin,\r\n  createHelper\r\n} from '../helpers';\r\nimport {\r\n  Hover\r\n} from '../mixins';\r\nimport Labels from './Labels';\r\n/**\r\n  (in-progress)\r\n\r\n  @class HoverLabels\r\n*/\r\nvar HoverLabels = Labels.extend('HoverLabels', mixin(Hover, {\r\n  initialize: function() {\r\n    this.on('attach', function() {\r\n      this.container.on('mouseenter:point', this.onMouseEnterPoint.bind(this));\r\n      this.container.on('mouseleave:point', this.onMouseLeavePoint.bind(this));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Maximum distance to find active points\r\n\r\n    @property hoverTolerance\r\n    @type Number\r\n    @default Infinity\r\n  */\r\n  hoverTolerance: property('hoverTolerance', {\r\n    set: function(value) {\r\n      // Pass through hover tolerance to parent (if present)\r\n      if (this.parent && this.parent.hoverTolerance)\r\n        this.parent.hoverTolerance(value);\r\n    },\r\n    default_value: Infinity\r\n  }),\r\n\r\n  // Don't fade in labels, hidden until hover\r\n  transitionLabels: function() {},\r\n\r\n  onMouseEnterPoint: function(point) {\r\n    var label = this.findLabelForPoint(point);\r\n    if (label)\r\n      d3.select(label).attr('opacity', 1);\r\n  },\r\n  onMouseLeavePoint: function(point) {\r\n    var label = this.findLabelForPoint(point);\r\n    if (label)\r\n      d3.select(label).attr('opacity', 0);\r\n  },\r\n\r\n  findLabelForPoint: function(point) {\r\n    var labels = this.base.selectAll('g.chart-series').selectAll('g');\r\n    var chart = this;\r\n    var label;\r\n\r\n    labels.each(function(d, i, j) {\r\n      var series = chart.seriesData.call(this, d, i, j);\r\n      if (d === point.d && series === point.series)\r\n        label = this;\r\n    });\r\n\r\n    return label;\r\n  }\r\n}));\r\n\r\nvar hoverLabels = createHelper('HoverLabels');\r\n\r\nexport {\r\n  HoverLabels as default,\r\n  hoverLabels\r\n};\r\n","import {\r\n  property,\r\n  dimensions,\r\n  translate,\r\n  createHelper\r\n} from '../helpers';\r\nimport Legend from './Legend';\r\n\r\n/**\r\n  Legend positioned within chart bounds.\r\n\r\n  @class InsetLegend\r\n  @extends Legend\r\n*/\r\nvar InsetLegend = Legend.extend('InsetLegend', {\r\n  initialize: function() {\r\n    this.on('draw', function() {\r\n      // Position legend on draw\r\n      // (Need actual width/height for relative_to)\r\n      var translation = this.translation();\r\n      this.legend_base.attr('transform', translate(translation.x, translation.y));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Position legend within chart layer `{x, y, relative_to}`\r\n    Use `relative_to` to use x,y values relative to x-y origin\r\n    (e.g. `\"left-top\"` is default)\r\n\r\n    @example\r\n    ```js\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        return {\r\n          components: {\r\n            legend: {\r\n              type: 'InsetLegend',\r\n              // Position legend 10px away from right-bottom corner of chart\r\n              translation: {x: 10, y: 10, relative_to: 'right-bottom'}\r\n            }\r\n          }\r\n        }\r\n      });\r\n    ```\r\n    @property translation\r\n    @type Object {x,y}\r\n    @default {x: 10, y: 10, relative_to: 'left-top'}\r\n  */\r\n  translation: property('translation', {\r\n    default_value: {x: 10, y: 0, relative_to: 'left-top'},\r\n    get: function(value) {\r\n      var x = value.x || 0;\r\n      var y = value.y || 0;\r\n      var relative_to_x = (value.relative_to && value.relative_to.split('-')[0]) || 'left';\r\n      var relative_to_y = (value.relative_to && value.relative_to.split('-')[1]) || 'top';\r\n\r\n      if (relative_to_x === 'right') {\r\n        x = this.width() - dimensions(this.legend_base).width - x;\r\n      }\r\n      if (relative_to_y === 'bottom') {\r\n        y = this.height() - dimensions(this.legend_base).height - y;\r\n      }\r\n\r\n      return {\r\n        x: x,\r\n        y: y\r\n      };\r\n    }\r\n  }),\r\n\r\n  skip_layout: true\r\n}, {\r\n  layer_type: 'chart'\r\n});\r\n\r\nvar insetLegend = createHelper('InsetLegend');\r\n\r\nexport {\r\n  InsetLegend as default,\r\n  insetLegend\r\n};\r\n"],"sourceRoot":"/source/"}