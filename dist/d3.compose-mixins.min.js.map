{"version":3,"sources":["d3.compose-mixins.min.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers/index.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/src/mixins/series.js","../C:/dev/d3.compose/src/mixins/hover.js","../C:/dev/d3.compose/src/mixins/transition.js","../C:/dev/d3.compose/src/mixins/standard-layer.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js","../C:/dev/d3.compose/src/mixins/xy.js","../C:/dev/d3.compose/src/mixins/xy-values.js","../C:/dev/d3.compose/src/mixins/xy-inverted.js","../C:/dev/d3.compose/src/mixins/labels.js","../C:/dev/d3.compose/src/mixins/index.js","../C:/dev/d3.compose/index-mixins.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","valueOrDefault","default_value","property","name","options","prop_key","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","isArray","mixed","constructor","initialize","args","forEach","extension","transform","reduceRight","bind","stack","direction","origin","min_height","min_width","elements","next_position","element_dimensions","spacing_width","spacing_height","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","id","layered","items","_layered","findById","getPoints","getPoint","sort","meta","getClosestPoints","points","position","tolerance","getDistance","Math","sqrt","pow","setDistance","point","distance","closePoints","sortPoints","by_distance","updateActive","active","closest","container","active_keys","closest_keys","trigger","createLayer","layer","events","event","method","split","str","charAt","toUpperCase","dataBind","onDataBind","insert","onInsert","Int8Array","utils","helpers","style","Base","isProperty","unset","base","draw","Chart","z_index","layer_type","Component","skip_layout","prepareLayout","getLayout","setLayout","Overlay","hidden","display","getAbsolutePosition","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","rawData","tagName","append","classed","attachHoverListeners","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","charts","chart_options","_attachItems","components","component_options","delay","duration","ease","config","_prepareConfig","_updateDimensions","layout","redraw","demux","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","chart_position","parts","part","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","was_inside","on","getBoundingClientRect","scrollY","is_inside","attach","detach","remove","_attached","_positionComponents","_positionByZIndex","remove_ids","remove_id","Item","layer_options","component","overlay","prepareComponent","row_index","col_index","extractData","normalized","found","row","row_components","chart_index","unshift","selectAll","index","previousPart","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","appendChild","overall_layout","Series","seriesKey","seriesValues","seriesIndex","seriesClass","seriesData","itemStyle","seriesCount","seriesLayer","exit","XY","setScales","normalizeData","xScale","setXScaleRange","getDefaultXScale","yScale","setYScaleRange","getDefaultYScale","xKey","yKey","xValue","yValue","x0","y0","x_scale","y_scale","XYValues","adjacentWidth","layeredWidth","itemWidth","XYInverted","Labels","attachLabels","labels","LabelsClass","_labels","proxyLabelMethods","LabelsXY","Hover","onMouseEnter","onMouseMove","onMouseLeave","mouseEnterPoint","mouseLeavePoint","HoverPoints","update","hoverTolerance","Transition","setupTransition","StandardLayer","standardLayer","standardSeriesLayer","onEnter","onUpdate","onMerge","onExit","InvertedXY","XYLabels","compose","VERSION","index_mixins"],"mappings":"CAIC,SAAUA,EAAQC,GACE,gBAAZC,UAA0C,mBAAXC,QAAyBA,OAAOD,QAAUD,EAAQG,QAAQ,OCLlG,kBAAAC,SAAAA,OAAAC,IAAAD,QAAA,MAAAJ,GACAD,EAAAO,IAAAN,EAAAD,EAAAQ,KACAC,KAAA,SAAAD,GAAA,YAQA,SAAQE,GAAOC,EAAOC,EAAcC,GACpC,IAAA,GAAAC,GAAA,EAAAC,EAAAH,EAAAG,OAAAA,EAAAD,EAAAA,IACA,IAAA,GAAAE,KAAAJ,GAAAE,GACAD,GAAA,SAAAF,EAAAK,KACEL,EAAOK,GAAAJ,EAAAE,GAAAE,GAIP,OAAOL,GAGF,QAASM,GAAQC,EAAKC,GAC3B,MAAOD,GAAIE,QAAOD,IAAS,EAG7B,QAAAE,GAAAH,GACA,MAAAA,GAAAI,OAAA,SAAAH,GACO,MAASA,KAIhB,QAAAI,GAAAC,EAAAC,GACA,MAAAD,GAAAF,OAAA,SAAAI,GACO,MAASD,GAAAL,QAASM,GAAQ,IAI1B,QAASC,GAAOhB,GACrB,MAAOD,GAAQC,EAAQiB,EAAMC,KAAKC,UAAW,IAAA,GAGxC,QAASC,GAAApB,GAChB,MAAAD,GAAAC,EAAAiB,EAAAC,KAAAC,UAAA,IAGA,QAAKE,GAAAd,GAEL,MAAAA,GAAAe,OAAA,SAAAC,EAAAf,GACO,MAASe,GAAKC,OAAShB,QAI9B,QAAMiB,GAAOlB,EAAImB,EAAAC,GACjB,GAAApB,EACA,IAAA,GAAAJ,GAAA,EAAAC,EAAAG,EAAAH,OAAAA,EAAAD,EAAAA,IACA,GAAAuB,EAAAR,KAAAS,EAAApB,EAAAJ,GAAAA,EAAAI,GACO,MAASA,GAAMJ,GAItB,QAAAyB,GAAArB,EAAAsB,GACA,MAAA,OAAAtB,EAAA,OACgB,MAATsB,EAAwBtB,EAAA,GACtBuB,MAAAC,UAAgBd,MAAAC,KAAQX,EAAA,EAAAsB,GAGjC,QAAMG,GAAOC,GACX,MAAOA,MAAA,GAASA,KAAc,EAEzB,QAASC,GAASD,GACvB,GAAAE,SAAgBF,EAClB,OAAA,aAAAE,GAAA,WAAAA,KAAAF,EAEA,QAASG,GAASH,GAClB,MAAA,oBAAAI,EAAAnB,KAAAe,GAEA,QAASK,GAAQL,GACjB,MAAA,oBAAAI,EAAAnB,KAAAe,GAEO,QAAIM,GAAaN,GACtB,MAAO,UAAAA,EAYT,QAAOO,GAAKP,EAAaP,EAAAC,GACzB,GAAAM,EAEA,IAAA,GADAQ,GAAAC,OAAAD,KAAAR,GACA9B,EAAA,EAAAC,EAAAqC,EAAArC,OAAAA,EAAAD,EAAAA,IACOuB,EAAAR,KAASS,EAAWM,EAAKQ,EAAItC,IAAAsC,EAAStC,GAAA8B,GAI7C,QAAQU,GAAQV,EAASP,EAAIC,GAC7B,GAAMM,EAEN,IAAA,GADAQ,GAAAC,OAAAD,KAAAR,GACA9B,EAAA,EAAAC,EAAAqC,EAAArC,OAAAA,EAAAD,EAAAA,IACA,GAAAuB,EAAAR,KAAAS,EAAAM,EAAAQ,EAAAtC,IAAAsC,EAAAtC,GAAA8B,GACO,MAASA,GAAMQ,EAAMtC,IAI5B,QAAAyC,GAAAC,EAAAxC,GACA,MAAAwC,GACAA,EAAAC,IAAA,SAAAb,GACO,MAASA,GAAK5B,QAIrB,QAAM0C,GAAOxC,GAEX,IAAA,GADFyC,MACS7C,EAAA,EAAAC,EAAAG,EAAAH,OAAAA,EAAAD,EAAAA,IACT6C,EAAAvC,QAAAF,EAAAJ,IAAA,GACA6C,EAAAC,KAAA1C,EAAAJ,GAEA,OAAA6C,GASA,QAAIE,GAAQnC,EAAAoC,GACV,MAAAZ,GAAUxB,GAAAoC,EAAApC,EC/CZ,QAAMqC,GAAWC,EAAAC,GACjBA,EAAQA,KACR,IAAIC,GAAID,EAAUC,UAAe,eAE7BH,EAAI,SAAUrC,GASlB,QAAUyC,KAOV,MANAzC,GAAQmC,EAAmBO,EAAAJ,GAAAD,EAAAD,eAG3BO,EAAA3C,IAAA,YAAAuC,EAAAnB,OACApB,EAAAA,EAAAG,KAAApB,OAEA4D,EAAAJ,EAAAE,KAAAF,EAAAE,IAAAtC,KAAAS,EAAAZ,GAAAA,EAGA,QAAA4C,KAEM,GAAAD,EAAWJ,EAAQM,YAAArB,EAAAxB,KAAAuC,EAAAM,SAAA1C,KAAApB,KAAAiB,GACzB,KAAA,IAAA8C,OAAA,qBAAAR,EAAA,KAAAS,KAAAC,UAAAhD,GAKA,IAHAqC,EAAYY,SAAWP,EAAYJ,GACnCI,EAAAJ,GAAAtC,EAEU2C,EAAWJ,EAAQK,OAASpB,EAAAxB,GAAA,CAC9B,GAAIkD,GAAAX,EAAYK,IAAWzC,KAAAS,EAASZ,EAAAqC,EAAAY,SAE5CC,IAAA,YAAAA,KACAR,EAAAJ,GAAAY,EAAAC,UACMD,GAAOP,EAAAO,EAAAE,QACbF,EAAAE,MAAAjD,KAAAS,EAAA8B,EAAAJ,IAGA,MAAAvD,MAnCA,GAAM2D,GAAW3D,KAAKyD,GAAAzD,KAAAyD,OACtB5B,EAAAuB,EAAAE,EAAAzB,QAAA7B,KAEA,OAAAqB,WAAAf,OACauD,EAAAzC,KAAMpB,MAEnB0D,EAAAtC,KAAApB,MCrFA,ODuHAsD,GAAAgB,aAAA,EACEhB,EAAOiB,iBAAAnB,EAAAI,EAAAe,kBAAA,GACTjB,EAAAD,cAAAG,EAAAH,cF+EIC,EAASzB,QAAU2B,EAAQ3B,QGxM/ByB,EAGA,QAAMkB,GAAOC,GAEb,GAAAC,GAAAC,EAAAF,EAEE,IAAIC,EAAOE,OAAAF,EAAeG,OAC5B,MAAAH,EAGA,IAAMI,GAAOC,EAAON,EAEpB,IAAAO,EAAAP,GACA,OACAG,MAAO,MAAAF,EAAAE,MAAAF,EAAAE,MAAAE,EAAAF,OAAA,EACHC,OAA0B,MAAtBH,EAAOG,OAAeH,EAAAG,OAAAC,EAAAD,QAAA,EAI9B,IAAAI,GAAAC,EAAAT,EAKA,QACAG,MAAA7E,EAAAoF,KAAAT,EAAAE,MAAAE,EAAAF,OAAAK,EAAAL,SAAA,EACAC,OAAA9E,EAAAoF,KAAAT,EAAAG,OAAAC,EAAAD,QAAAI,EAAAJ,UAAA,GAKA,QAAIF,GAAkBF,GACtB,GAAIW,GAAQX,EAAWY,OAEvBC,GACAV,MAAAQ,GAAAA,EAAAG,YACAV,OAAAO,GAAAA,EAAAI,aAOA,IAAAR,EAAAP,MAAAW,EAAAG,cAAAH,EAAAI,eAAA,mBAAAC,SAAAA,OAAAC,iBAAA,CACA,GAAAC,GAAAF,OAAAC,iBAAAN,EACEE,GAAOT,OAAAe,WAAAD,EAAAd,QAAAe,WAAAD,EAAAE,gBAAAD,WAAAD,EAAAG,mBACTR,EAAAV,MAAAgB,WAAAD,EAAAf,OAAAgB,WAAAD,EAAAI,iBAAAH,WAAAD,EAAAK,kBAGE,MAAOV,GAGT,QAAAP,GAAAN,GACA,OACAG,MAAAH,GAAAA,EAAAK,MAAAc,WAAAnB,EAAAK,KAAA,UACAD,OAASJ,GAAeA,EAAWK,MAAAc,WAAAnB,EAAAK,KAAA,YAInC,QAAII,GAAkBT,GACtB,GACEQ,GADFG,EAAAX,EAAAY,MAEA,KACAJ,EAAAG,GAAA,kBAAAA,GAAAa,SAAAb,EAAAa,UAEA,MAAAC,GAGAjB,GAAAL,MAAA,EAAAC,OAAA,GAGE,MAAOI,GCzBM,QAASD,GAAAP,GACtB,MAAqB,OAArBA,EAAUY,OAAWc,SAGvB,QAAMC,GAAW5C,GAIf,GAHFA,EAAWA,MAGLI,EAAAJ,GACJ,MAAIA,EAGN,IAAI6C,EAEAA,GADJ,QAAA7C,EAAAnB,KACYtC,EAAGuG,KAAAD,QACftG,EAAAsG,MAAA7C,EAAAnB,MACEtC,EAAWsG,MAAA7C,EAASnB,QAEtBtC,EAAAsG,MAAAE,SAEA7D,EAAAc,EAAA,SAAAvC,EAAAV,GACM8F,EAAI9F,KAIV,SAAAA,GAAA,UAAAA,EACA8F,EAAA9F,GAAAU,GACAT,GAAA,OAAA,OAAA,QAAA,MAAA,WAAA,WAAA,SAAA,WAAAD,IACO8F,EAAA9F,GAAQiG,MAAUH,EAAApF,OAIzBuC,EAAAiD,QAAAjD,EAAAkD,OAAAlD,EAAAjD,KAAAiD,EAAAvC,SACEoF,EAAIM,EAAWN,EAAQ7C,GAIzB,IAAAoD,GAAApD,EAAAoD,UAAA,WAAApD,EAAAnB,MAAA,MAAAmB,EAAAoD,QAQA,OAPsB,WAAhBpD,EAAQnB,OAAsBuE,GAAQpD,EAAWqD,YACnDR,EAAQS,EAAWT,EAAO7C,IAG9B,WAAAA,EAAAnB,OAAA,MAAAmB,EAAAuD,SAAAH,GAAApD,EAAAqD,YACAR,EAAAW,EAAAX,EAAA7C,IAEA6C,EAGA,QAAAM,GAAAN,EAAA7C,GAEA,GAAAyD,GAAAzD,EAAAvC,OAAA,SAAAiG,GACE,MAAIA,GAAO1D,EAAQjD,MAIfmG,EAAAlD,EAAAkD,IACAS,GAAQT,KACdA,IAAAU,OAAAV,IAEA,IAAMD,EACN,IAAsB,WAAtBjD,EAAQnB,KAERoE,EAAAxD,EAAA1B,EAAAmF,EAAA1D,IAAA,SAAAqE,GACA,MAAOA,IAAAA,EAAAD,OACCC,EAAYD,OAAIpE,IAAMiE,GAD9B,eAIM,CACN,GAAMK,GAAUC,EAAAb,EAAAO,EAEhBR,IACA,EAAAa,EAAAA,EAAA,EACEnC,EAAMuB,EAAOO,IAKf,MADAZ,GAAAI,OAASA,GACTJ,EAGA,QAAAS,GAAAU,EAAAhE,GAEA,GAAIiE,GAAcjE,EAAS6D,SAAOF,EAAc3D,EAAAkD,MAAAlD,EAAAkD,KAAApG,OAAA,GAG1C+F,EAAK,SAAQmB,EAAAhE,EAAAiE,GACnB,GAAQ5F,GAAA,SAAeZ,EAAAyG,GACvB,GAAA9C,GAAA/C,EAAA+C,OAKA,OAHApB,GAAAqD,WACIa,EAAgB,GAERF,EAAAvG,GAAa,GAAQ2D,EAAaA,GAAQ8C,GAAA,GAgBtD,OAdApG,GAAAO,EAAA2F,GACA5C,MAAY,WACZ,GAAU+C,GAAQ9F,EAAQ+F,WAAA/F,EAAA+F,YAC1BhD,EAAAiD,SAAAF,GAAAA,EAAA,CAKA,OAHAnE,GAAAqD,WACAjC,GAAA6C,GAEA7C,KAMA/C,GACA2F,EAAAhE,EAAAiE,EAEE,OAAIpB,GAGN,QAAQW,GAAQX,EAAS7C,GACzB,GAAIuD,GAA8B,MAAzBvD,EAAUuD,QAAevD,EAAAuD,QAAA,GAE9Be,EAAMzB,EAAA0B,KC5IR,OD6IF1B,GAAM0B,MAAA,SAAAA,GACN,MAAM1G,WAAAf,WAEN+F,GAAA2B,WACAD,EACAhB,EACMA,EAAQ,GALRe,KASJtE,EAAOuE,OACT1B,EAAA0B,MAAAvE,EAAAuE,OCxJE1B,EAGF,QAAA4B,GAAAC,GACEA,EAAOlG,MAAMmG,QAAAD,GAAAA,EAAAlG,MAAAC,UAAAd,MAAAC,KAAAC,UACf,IAAA+G,GAAA9G,EAAAkF,MAAA,UAAA9E,OAAAwG,GCXE,cDcIE,GAAIC,YAEJD,EAAAE,aACNF,EAAQE,WAAc,WACtB,GAAUC,GAAAvG,MAAUC,UAAWd,MAAMC,KAAMC,UAE3C6G,GAAAM,QAAA,SAAAC,GACAA,EAAAH,YACMG,EAAMH,WAAW9B,MAAAxG,KAAAuI,IACnBvI,QAGJoI,EAAUM,YACVN,EAAAM,UAAA,SAAAhC,GACA,MAAUwB,GAAOS,YAAA,SAAAlH,EAAAgH,GACT,MAAAA,IAAYA,EAAAC,UACpBD,EAAAC,UAAAtH,KAAApB,KAAAyB,GAEAA,GACEmH,KAAO5I,MAAA0G,KCjCP0B,EAGF,QAAIS,GAASrF,GAeX,QAAOuD,GAAS1G,GACd,MAAIA,GAAA,GAAYmD,EAAAuD,QAAevD,EAAAuD,QAAA,EAGnC,MAlBAvD,GAAIlC,GACAwH,UAAW,WACfC,OAAK,MACLhC,QAAA,EACAiC,WAAA,EACEC,UAAY,GACVzF,GAGJ,cAAAA,EAAAsF,WAAA,QAAAtF,EAAAuF,QAAA,SAAAvF,EAAAuF,OACEvF,EAASuF,OAAQ,OACS,YAAjBvF,EAAIsF,WAAyC,OAAVtF,EAAUuF,QAAA,UAAAvF,EAAAuF,SACxDvF,EAAAuF,OAAA,OAMM,SAASG,GACf,GAAQA,GAAIA,EAAApE,KAAqB,CACjC,GAAQZ,GAAI,CAEZgF,GAAYpE,KAAI,YAAA,SAAAoC,EAAA7G,GACR,GAKR8I,GALYC,EAAIpJ,KAAAiG,UACJoD,EAAAtJ,EAAAoF,KAAAiE,EAAAxE,MAAApB,EAAAyF,YACZK,EAAAvJ,EAAAoF,KAAAiE,EAAAvE,OAAArB,EAAAwF,aACYO,EAAA,EACFC,EAAA,CAwBV,OArB2B,cAAfhG,EAAIsF,WAChBK,EAAAjF,EAAAmF,EAAAtC,EAAA1G,GAGUkJ,EADV,QAAA/F,EAAAuF,OACU7E,EAAW6C,EAAA1G,GAER8I,EAEbjF,EAAAiF,IAGAA,EAAAjF,EAAAoF,EAAAvC,EAAA1G,GAGUmJ,EADV,OAAAhG,EAAAuF,OACU7E,EAAW6C,EAAA1G,GAErB8I,EAEAjF,EAAAiF,GAGAM,EAAAF,EAAAC,OC3CA,QAAAC,GAAAF,EAAAC,GAMA,MALApH,GAAAmH,KACEC,EAAAD,EAAOC,EACTD,EAAAA,EAAAA,GAGA,cAAAA,GAAA,GAAA,MAAAC,GAAA,GAAA,IAWA,QAAEE,GAAYC,EAAAC,GACd,GAAAC,GAAA,WAAAF,GAAA,EAKA,OAJEC,KACFC,GAAA,KAAAD,EAAAL,GAAA,GAAA,KAAAK,EAAAJ,GAAA,IACAK,GAAA,IA0BA,QAAAC,GAAA1E,EAAA2E,GACA,GAAIC,GAAI,CACR,KACI,GAAInF,GAAAO,EAAAa,UAAkBpB,OAE1BoF,EAAAxE,OAAAC,iBAAAN,GACA8E,EAAAtE,WAAAqE,EAAA,cACQE,EAAMvE,WAAAqE,EAAA,eAIdG,OAAAD,KACAA,EAAA,KAAAD,EAEI,IAAIG,KAAeF,EAAcD,GAAA,EAGjCI,EAAmB,CACvBP,IAAAA,EAAA,IACEO,GAAWP,EAAAlF,GAAA,GAEbmF,EAAAnF,GAAAwF,GAAA,IAAAC,GAAA,GAEA,MAAApE,IAKA,MAAA8D,GAUA,QAAA7C,GAAAT,GACA,GAAA6D,GAAAzI,EAAA4E,EACA,OAAA6D,IAAAnI,EAAAmI,IAAAvI,MAAAmG,QAAAoC,EAAAnD,QAmBA,QAAAjC,GAAAuB,EAAAO,GACE,GAAIuD,GAAA,SAAaC,GACf,MAAOA,IAAY1K,EAAA2K,OAASD,EAAcxD,GAAA,GAG9C,OAAAE,GAAeT,GACfA,EAAAlF,OAAA,SAAAC,EAAA4F,GACA,GAAAA,GAAWrF,MAAAmG,QAAAd,EAAAD,QAAA,CACH,GAAAuD,GAAOH,EAAAnD,EAAAD,OACf,OAAAuD,GAAAlJ,EAAAkJ,EAAAlJ,EAGO,MAAAA,MAEPmJ,EAAAA,IAGAJ,EAAA9D,GAoBA,QAAAa,GAAAb,EAAAO,GACE,GAAI4D,GAAA,SAAaJ,GACf,MAAOA,IAAY1K,EAAA2K,OAASD,EAAcxD,GAAA,GAG9C,OAAAE,GAAeT,GACfA,EAAAlF,OAAA,SAAAC,EAAA4F,GACA,GAAAA,GAAWrF,MAAAmG,QAAAd,EAAAD,QAAA,CACH,GAAA0D,GAAOD,EAAAxD,EAAAD,OACf,OAAA3F,GAAAqJ,EAAAA,EAAArJ,EAGO,MAAAA,IAEPmJ,EAAAA,GAGAC,EAAAnE,GAcA,QAAMqE,GAAYpF,GAChB,IAAAA,EACE,MAAA,EAEF,IAAAqF,KAMF,OALAtI,GAAAiD,EAAA,SAAA1E,EAAAV,GACEyK,EAAO7H,KAAS5C,EAAA,KAASU,KAE3B0E,EAAAqF,EAAAC,KAAA,MAEAtF,EAAAA,EAAA,IAAA,GAmBA,QAAIuF,GAAgBC,EAAIC,GACxB,MAAA9I,GAAA6I,IACAE,IAAAF,EAAAG,MAAAH,EAAAI,OAAAJ,EAAAK,KAAAL,GAEAjK,KAAAiK,EAAAC,GAAAC,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,KAAA,IA+BA,QAAAC,GAAAC,GAEE,GAAAC,GAAQ,SAAWzE,EAAA7G,EAAAuL,GACrB,MAAAF,GAAAtK,KAAApB,KAAA6L,OAAA3E,EAAA7G,EAAAuL,GAKE,OAHFD,GAAAG,QAAA,EACAH,EAAAnE,SAAAkE,EAESC,EAGT,QAAAI,GAAAC,EAAAC,GACA,MAAA,UAAA/E,EAAA7G,EAAAuL,GACA,OAAAI,EAAAxE,UAAAwE,GAAA5K,KAAApB,KAAAiM,EAAA/E,EAAA7G,EAAAuL,IAKA,QAAAM,GAAAD,GACA,IAAA,GAAA1L,KAAA0L,GACAA,EAAA1L,IAAA0L,EAAA1L,GAAAuL,SACAG,EAAA1L,GAAAwL,EAAAE,EAAA1L,GAAA0L,IAgCA,QAAAE,GAAA/G,GAEE,GAAIA,EAAQgH,aACV,MAAIhH,GAAUgH,YAElB,IAAAC,GAAAjH,GAAAA,EAAAkH,UACA,IAAAD,EAAA,CACA,GAAA3F,GAAA3G,EAAAwM,OAAAF,GAAA3F,MACO,OAASA,IAAAA,EAAa,IAI7B,QAAM8F,GAAKnK,GACX,MAAA,UAAAoK,EAAAjJ,GAMI,MALJA,KACIA,EAAOiJ,EACXA,EAAAZ,QAGIvK,GAAUmL,GAAAA,EAAApK,KAAAA,GAAAmB,ICghBd,QAASkJ,GAACC,GAIR,MAHF3K,OAAAmG,QAAAwE,KRi1CMA,EAAQ3K,MAAMC,UAAUd,MAAMC,KAAKC,aQ90ChCuL,UAAK,EAAOD,MAASA,GAG9B,QAAAE,GAAAF,EAAAF,GRi1CI,MAAO9K,GAAKgL,EAAO,SAASjM,GSzrE5B,MAAAA,GAAS+L,IAAAA,ICyLb,QAAAK,GAAAb,EAAAvF,GACA,MAAIA,IACES,EAAcT,KACpBA,IAAeU,OAAMV,KAErBA,EAAA1D,IAAA,SAAAqE,EAAAuE,GACA,MAAQvE,GAASD,OAASpE,IAAE,SAAKkE,EAAA7G,GACjC,MAAA4L,GAAAc,SAAA3L,MAAAgL,aAAA/E,GAAAH,EAAA7G,EAAAuL,KACAoB,KAAA,SAAAjM,EAAAC,GAEA,MAAAD,GAAAkM,KAAA1D,EAAAvI,EAAAiM,KAAA1D,OATA,OAeA,QAAM2D,GAAOC,EAAAC,EAAAC,GAuBb,QAAAC,GAAAvM,EAAAC,GACA,MAASuM,MAAAC,KAAAD,KAAaE,IAAQzM,EAAAuI,EAAAxI,EAAAwI,EAAS,GAAAgE,KAAWE,IAAAzM,EAAAwI,EAAAzI,EAAAyI,EAAA,IAvBlD,MAAA5I,GAAAuM,EAAAnK,IAAA,SAAAqE,GACI,QAASqG,GAAYC,GAEzB,MADMA,GAAAC,SAAaN,EAAWK,EAAAV,KAAAG,GAC9BO,EAEA,QAAYE,GAAaF,GACzB,MAAQA,GAAQC,SAAAP,EAEhB,QAAQS,GAAO/M,EAAAC,GACf,MAAAD,GAAA6M,SAAA5M,EAAA4M,SACe,GACf7M,EAAA6M,SAAA5M,EAAA4M,SACA,EAEA,EAGA,GAAAG,GAAA1G,EAAArE,IAAA0K,GAAA7M,OAAAgN,GAAAb,KAAAc,EAEI,OAAOC,GAAU,MAQrB,QAAEC,GAAoBC,EAAAC,EAAgBC,GACtC,GAAIC,GAAatL,EAAAmL,EAAa,OACxBI,EAAUvL,EAAQoL,EAAA,MAExBxL,GAAMwL,EAAU,SAAQP,GACxBnN,EAAA4N,EAAAT,EAAApN,KACE4N,EAAWG,QAAQ,kBAAgBX,GAE/BQ,EAAUG,QAAQ,mBAAoBX,KAE5CjL,EAAAuL,EAAA,SAAAN,GV8zFWnN,EAAS6N,EAAcV,EAAMpN,MW9iGpC4N,EAAAG,QAAa,mBAAAX,KCmJjB,QAAIY,GAAAtC,EAAA5J,EAAAkB,EAAAkB,GACJ,GAAA+J,IACEA,MAAI,QACFnH,OAAI,eACJhF,EAEJ,IAAMmM,GAAAvC,EAAAuC,GAAA,CACN,GAAMC,KAuBN,QArBM,QACA,mBACA,SACA,oBACA,QACA,mBACN,OACA,mBACAjG,QAAA,SAAAkG,GACA,GAAAC,GAAA,KAAAD,EAAAE,MAAA,KAAA5L,IAAA,SAAA6L,GACM,MAAIA,GAAMC,OAAS,GAAAC,cAAAF,EAAA1N,MAAA,KACjB8J,KAAA,GAGRgB,GAAA0C,KACAF,EAAAC,GAAA,WACA1O,KAAAiM,QAAA0C,GAAA3O,UAKMiM,EAAQuC,GAAAjL,EAAWkB,GACzBuK,SAAe,SAAKtI,GACpB,MAAA1G,MAAAiM,QAAAgD,WAAAjP,KAAA0G,IAEAwI,OAAA,WACA,MAAAlP,MAAAiM,QAAAkD,SAAAnP,OZ8pGQyO,OAAQA,KC11GhB,GAAEtN,GAASa,MAAOC,UAASd,MACvBoB,EAASK,OAAOX,UAAWM,SA2E7BqB,EAAa,SAASzB,GACxB,MAAyB,sBAArBI,EAAcnB,KAAAe,GAElB,mBAAA,KAAA,gBAAAiN,aACAxL,EAAA,SAAAzB,GACO,MAAyB,kBAAhBA,KAA6B,GA+C7C,IAAEkN,KACA7O,SAAQA,EACRI,QAASA,EACTE,WAAMA,EACNI,SAAOA,EACPI,OAAAA,EACAC,QAAAA,EACAI,KAAAA,EACAG,MAAAA,EACAI,UAAUA,EACV0B,WAAAA,EACAxB,SAAAA,EACAE,SAAAA,EACAE,SAAOA,EACPC,YAAMA,EACNC,WAAAA,EACFG,WAAAA,EDOIC,MAAOA,EE7EIG,KAAAA,EACbG,eAAUA,GKiRVkM,IACAhM,SAAAA,EACAkB,WAAAA,EACAiF,UAAKA,EACLC,OAAKA,EACLI,UAAAA,EACA3C,aAzWFA,EA0WEhC,IAAAA,EACAoC,IAAAA,EACAnB,YAAIA,EACJmJ,MAAAxE,EACAG,WAAWA,EACXrC,MAAAA,EACA4C,GAAAA,EACAM,OAAAA,EACFG,UAAAA,EPwdIC,cAAeA,Ea10BnBlE,MAAAA,EA2BEuE,aAAYA,GAGdgD,GAAAzP,EAAAkM,MAAA,QACA3D,WAAQ,SAAA9E,GAER0I,EAAAlM,MAEAwD,GACAxD,KAAAwD,QAAAA,IASAkD,KAAApD,EAAA,QAuCAE,QAAUF,EAAU,WACpBD,iBACAQ,IAAQ,SAAML,EAAQU,GAetB,QAAAuL,GAAAxD,EAAA1L,GACA,MAAA0L,GAAA1L,IAAA0L,EAAA1L,GAAA+D,aAAA2H,EAAA1L,GAAAgE,iBAdA,GAAAL,EAAiB,CACjB,GAAWwL,GAAA5O,EAAA8B,OAAAD,KAAAuB,GAAAtB,OAAAD,KAAAa,GACXkM,GAAAlH,QAAA,SAAAjI,GACA,QAAAA,GAAA,WAAAA,GAAAkP,EAAAzP,KAAAO,IACMP,KAAWO,GAAAsL,SACT7L,MAGR0C,EAAAc,EAAA,SAAAvC,EAAAV,GACMkP,EAASzP,KAAWO,IAClBP,KAAOO,GAAAU,IACfjB,SAeA4E,MAAA,WACA,MAAAJ,GAAAxE,KAAA2P,MAAA/K,OAUAC,OAAA,WACA,MAAAL,GAAAxE,KAAA2P,MAAA9K,QAKA6D,UAAW,SAAAhC,GAIT,MAHFA,GAAAA,MAEA1G,KAAA0G,KAAAA,GACQA,GAIRkJ,KAAA,SAAAlJ,GACA1G,KAAAsO,QAAA,cAAA5H,GbkzBM3G,EAAGkM,QAAQhK,UAAU2N,KAAKpJ,MAAMxG,KAAMqB,Wc97B5CrB,KAAAsO,QAqCoB,OAAO5H,MAI3BmJ,GAAAL,GAAAlO,OAAA,YCzCAwO,QAAA,IAiDAC,WAAA,UAGAC,GAAAR,GAAAlO,OAAA,aASA8L,SAAA9J,EAAA,YACAD,cAAA,MACAS,SAAA,SAAA7C,GACA,MAAAT,IAAA,MAAA,QAAA,SAAA,QAAAS,MAYA2D,MAAAtB,EAAA,SACAD,cAAA,WACA,MAAAmB,GAAAxE,KAAA2P,MAAA/K,SAYAC,OAAAvB,EAAA,UACAD,cAAA,WACA,MAAAmB,GAAAxE,KAAA2P,MAAA9K,UAWAsG,QAAA7H,EAAA,WACAO,IAAA,SAAAuD,GACI,OACJhD,SAAA8G,EAAA9D,KAGA/D,cAAA6H,MAUAtE,SAAAtD,EAAA,YACAD,eAAA,IAiBA4M,aAAA,EAwBAC,cAAA,SAAAxJ,GACA1G,KAAA4P,KAAAlJ,IA4BAyJ,UAAW,SAAAzJ,GACX1G,KAAMkQ,cAAexJ,EAErB,IAAMyE,GAAQnL,KAAKmL,SACnB,QACAiC,SAAApN,KAAAoN,WACAxI,MAAA5E,KAAA4E,QAAAuG,EAAAK,KAAAL,EAAAG,MACAzG,OAAA7E,KAAA6E,SAAAsG,EAAAE,IAAAF,EAAAI,SA8BA6E,UAAU,SAAQ7G,EAAAC,EAAAhG,GAClB,GAAQ2H,GAAMnL,KAAQmL,SAEdnL,MAAK4G,YACbpD,EAAAqB,SACA2E,IAAShG,EAAAqB,OAAA7E,KAAA6E,UAAA,GACHrB,EAAKoB,QACL2E,IAAK/F,EAAQoB,MAAA5E,KAAA4E,SAAA,KAGf2E,GAAK4B,EAAUK,KACfhC,GAAK2B,EAAOE,KAGbrL,KAAA2P,KAAA7K,KAAA,YAAA2E,EAAAF,EAAAC,IACHxJ,KAAA6E,OAAArB,GAAAA,EAAAqB,QACA7E,KAAA4E,MAAApB,GAAAA,EAAAoB,UAoBAkL,QAAA,GC3OEC,WAAY,cAGZM,GAAAL,GAAa1O,OAAA,WACfgH,WAAA,WACAtI,KAAA2P,KAAA7K,KAAA,QAAA9E,KAAAuP,UAEAU,aAAA,EASA1G,EAAAjG,EAAA,KACAD,cAAA,IAUAmG,EAAAlG,EAAA,KACAD,cAAA,IAUAiN,OAAAhN,EAAA,UACAD,eAAA,IAWAkM,MAAQjM,EAAK,SACbD,cAAc,WACd,GAAQsC,IACRyH,SAAA,WACA/B,IAAA,EACMG,KAAI,EACF9C,UAAOe,EAAUzJ,KAAAuJ,IAAA,KAAAvJ,KAAAwJ,IAAA,MAMzB,OAHAxJ,MAAAsQ,WACA3K,EAAA4K,QAAA,QAEAxF,EAAApF,MAuBAyH,SAAW,SAAAA,EAAA5D,GACX,GAAAnI,UAAAf,OAAA,EACA8M,GACA7D,EAAS6D,EACH5D,EAAIA,OAIV,IAAQ,aAAS4D,GACjBA,EAAcpN,KAAQwQ,oBAAepD,EAAAe,eAErC,IAAe,SAASf,GACxB,GAAYpN,KAAGmO,UAAS,CACxB,GAAAlC,GAAAjM,KAAAmO,UAAAsC,eACArD,GAAApN,KAAAwQ,qBACAjH,EAAa6D,EAAAnB,MAAA1C,EAAA0C,EAAAT,KACHhC,EAAA4D,EAAWnB,MAAKzC,EAAAyC,EAAAZ,UAI1B+B,GAAApN,KAAAwQ,oBAAApD,EAAAnB,MAKAjM,MAAAuJ,EAAA6D,EAAA7D,GAAAC,EAAA4D,EAAA5D,GACAxJ,KAAA2P,KAAA7K,KAAA,QAAA9E,KAAAuP,UAQAmB,KAAA,WACA1Q,KAAAsQ,QAAA,GACAtQ,KAAA2P,KAAA7K,KAAA,QAAA9E,KAAAuP,UAQAoB,KAAA,WACA3Q,KAAAsQ,QAAA,GACAtQ,KAAA2P,KAAA7K,KAAA,QAAA9E,KAAAuP,UAWAiB,oBAAU,SAAAI,GACV,GAAMzC,GAAInO,KAAcmO,WAAKnO,KAAUmO,UAAAA,SAEvC,IAAMA,GAAInO,KAAcmO,UAAA0C,aAAqB,CACvC,GAAIC,GAAetM,EAAA2J,GACzB4C,EAAA/Q,KAAAmO,UAAAvJ,QACMoM,EAAOhR,KAAAmO,UAAAtJ,SACLoM,EAAGH,EAAiClM,MAAAmM,EACpCG,EAAGJ,EAAkCjM,OAAAmM,CAE7C,QACAzH,EAAS0H,EAAAL,EAAArH,EACTC,EAAA0H,EAAAN,EAAApH,GAME,MAAAoH,MhBuqCEb,WAAY,YQ70ChBoB,IAAA9F,IAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,KAAA,IAkDA4F,GAAA5B,GAAAlO,OAAA,WACAgH,WAAS,WRo1CHtI,KAAK0I,UAAY,SAAShC,GQ90ChC,MADA1G,MAAAqR,QAAA3K,GACAA,GAMiC,OAA3B1G,KAAK2P,KAAOtK,OAAKiM,SACvBtR,KAASmO,UAAcnO,KAAA2P,KAAA4B,OAAA,OACdzM,KAAK,QAAA,2BAEd9E,KAAA2P,KAAA3P,KAAAmO,UAAAoD,OAAA,OACSzM,KAAA,QAAA,8BACHA,KAAK,UAAa,OACxBA,KAAA,QAAA,kBAGA9E,KAAA2P,KAAA6B,QAAA,iBAAA,GAGAxR,KAAAyR,wBAqCAjO,QAAAF,EAAA,WACAD,cAAA,aACAhB,KAAU,WACVwB,IAAQ,SAAOL,GAGf,MAAAI,GAAAJ,GAAA,QAEAY,SAAA,WACA,MAAAZ,QRw1CI6N,QAAS/N,EAAS,WQn0CtB6H,QAAQ7H,EAAU,WAClBD,cAAA8N,GACAtN,IAAA,SAAAuD,GACA,ORi1CUhD,SAAU8G,EAAW9D,EAAQ+J,QQ10CvCV,cAAQnN,EAAU,iBAClBD,eAAAgI,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,KAAA,GACA3H,IAAA,SAAAuD,GACI,OACEhD,SAAOlD,KAAakG,GAAWiE,IAAO,EAAAC,MAAQ,EAAAC,OAAO,EAAAC,KAAA,MAG3D9H,IAAM,SAAO0D,GAIb,MAHAA,GAAAxC,MAAA5E,KAAA0R,SAAAtK,EAAAkE,MAAAlE,EAAAoE,KACApE,EAAAvC,OAAA7E,KAAA2R,UAAAvK,EAAAmE,OAAAnE,EAAAiE,IAEAjE,KAUAxC,MAAAtB,EAAA,SACAD,cAAA,OASEwB,OAAQvB,EAAA,UACND,cAAY,OAGdqO,OAAA,WACE,GAAI9M,GAAA5E,KAAS4E,OACb,OAAO,OAAAA,EAAUA,EAAO4K,GAASvN,UAAK2C,MAAUxD,KAAOpB,ORk1CvD2R,QAAS,WQ/0Cb,GAAA9M,GAAA7E,KAAA6E,QACA,OAAA,OAAAA,EAAAA,EAAA2K,GAAAvN,UAAA4C,OAAAzD,KAAApB,OAWA6Q,WAAAvN,EAAA,cACED,eAAS,IAIXuO,QAAAtO,EAAA,WACAD,cAAe,WACf,MAAArD,MAAA6Q,cAAA7Q,KAAA4E,SAAA5E,KAAA6E,SACA,OAAA7E,KAAA4E,QAAA,IAAA5E,KAAA6E,SAEA,QAKAgN,oBAAAvO,EAAA,uBACAD,cAAe,WACf,MAAArD,MAAA6Q,aACA,gBAEA,QAKAiB,eAAiBxO,EAAA,kBACjBD,cAAU,WRi1CF,GAAIrD,KAAK6Q,aAAc,CQ/0CvB,GAAAkB,GA/PR,CAmQA,OAHU/R,MAAO4E,SAAA5E,KAAA6E,WACPkN,EAAQ/R,KAAA6E,SAAA7E,KAAA4E,SAERmG,GACVnG,MAAA,OACAC,OAAA,EACAmN,cAAW,IAAAD,EAAA,IACH3E,SAvQR,aR2lDU,MAAOrC,IAAoBqC,SAAU,gBQ10C/C6E,UAAU3O,EAAU,aACpBD,cAAe,WACf,MAAUrD,MAAA6Q,aACV9F,GACAqC,SAAA,WACA/B,IAAW,EACHG,KAAO,IRo1CE,QQ3zCjB0G,OAAQ5O,EAAU,UAClBO,IAAA,SAAAsO,EAAAD,GAEI,OACJ9N,SAAApE,KAAAoS,aAAAD,EAAAD,EAAAlS,QAGAqD,mBAmBAgP,WAAQ/O,EAAe,cACvBO,IAAA,SAAAyO,EAAAD,GAEI,OACJjO,SAAApE,KAAAoS,aAAAE,EAAAD,EAAArS,QAGAqD,mBAWAkP,MAAAjP,EAAA,SAAAjB,KAAA,aAUAmQ,SAAAlP,EAAA,YAAAjB,KAAA,aR61CIoQ,KAAMnP,EAAS,QAASjB,KAAM,aQxzClCuN,KAAQ,SAAOlJ,GACf,GAAMgM,GAAK1S,KAAO2S,eAAO3S,KAAAwD,UAAAkD,ERm1CfgM,GAAOR,QQ/0CjBlS,KAAAkS,OAAAQ,EAAAR,QACIQ,EAAOL,YACLrS,KAAAqS,WAAUK,EAAAL,YAGZ3L,GRi1CIc,SAAUd,EQ/0CdgM,OAAKA,EAAAhM,MAET1G,KAAA0G,KAAAA,GRk1CM1G,KAAK4S,oBQ70CX5S,KAAA6S,OAAAnM,GAGA3G,EAAAkM,QAAAhK,UAAA2N,KAAAxO,KAAApB,KAAA0G,IRw1CIoM,OAAQ,WQ/0CV9S,KAAOqR,WACLrR,KAAK4P,KAAA5P,KAASqR,UAAK7J,WAGvBuL,MAAQ,SAASxP,EAAKmD,GACtB,MAAMA,IAAYA,EAAAgM,QAAchM,EAAAc,SAGhCqF,EAAA7M,KAAAkS,SAAA3O,IAAAmD,EAAAgM,OAAAR,OAAA3O,GACamD,EAAKgM,OAAAR,OAAA3O,GAClBsJ,EAAA7M,KAAAqS,aAAA9O,IAAAmD,EAAAgM,OAAAL,WAAA9O,GRi1CemD,EAAKgM,OAAOL,WAAW9O,GQ90CpCmD,EAAAc,SAPWd,GAWbsM,iBAAA,SAAAxP,GRi1CM,MAAOxD,MAAK2P,KAAK4B,OAAO,KQ/0C9BzM,KAAA,QAAA,eACEA,KAAA,cAAsBtB,GAASA,EAASsM,UAI1CmD,qBAAA,SAAAzP,GRi1CM,MAAOxD,MAAK2P,KAAK4B,OAAO,KQ/0C9BzM,KAAA,QAAA,yBACEA,KAAA,cAAoBtB,GAAWA,EAAAsM,UAIjCoD,mBAAgB,WAChB,IAAOlT,KAAKmO,UACZ,KAAA,IAAApK,OAAA,yJAEA,OAAA/D,MAAAmO,UAAAoD,OAAA,OACEzM,KAAQ,QAAS,wBAInB+N,OAAA,SAAAnM,GRk1CM1G,KAAKmT,sBQ70CP,IAAAN,GAAW7S,KAAAoT,eAAiB1M,GAGhC2M,EAAA/R,KAAAtB,KAAAmL,UACAzI,GAAAmQ,EAAA,SAAAS,EAAA/S,GACI+S,EAAK9K,QAAA,SAAc+K,GRi1CbF,EAAe9S,IAAQgT,EAAKvJ,QAAU,MQ70ChDhK,KAAAyQ,cAAA4C,GAGArT,KAAAwT,eAAAX,IAGApB,qBAAuB,WAuCnB,QAASgC,KACP,GAAAC,GAAQ3T,EAAA2T,MAAAC,SAAcC,gBAC5B,OAAAF,GAAA,IAAAG,EAAArI,MAAAkI,EAAA,IAAAG,EAAAvI,OAAAoI,EAAA,IAAAG,EAAAxI,KAAAqI,EAAA,IAAAG,EAAAtI,OAEA,QAAMuI,KACNxF,EAAA,aAAAyF,EAAAhU,EAAA2T,MAAA/D,KAEA,QAAMqE,KACN1F,EAAA,YAAAyF,EAAAhU,EAAA2T,MAAA/D,KAEI,QAASsE,KACP3F,EAAQ,cAGd,QAAUyF,GAAcG,GRi1ChB,GAAI3K,GAAI2K,EAAY,GQ/0C5B1K,EAAA0K,EAAA,GACUC,EAAK5K,EAAA8J,EAAsB7H,KAC7B4I,EAAU5K,EAAA6J,EAAehI,GAajC,ORs0CY9B,GAAK8J,EAAe7H,KAAO6H,EAAezO,MQ/0ChDuP,EAASd,EAAezO,MACtB2E,EAAU8J,EAAe7H,OACjC2I,EAAe,GRk1CH3K,EAAK6J,EAAehI,IAAMgI,EAAexO,OQ/0C/CuP,EAAOf,EAAAxO,OACL2E,EAAW6J,EAAUhI,MACrB+I,EAAQ,IAGhBjG,WAAA5E,EAAAA,EAAAC,EAAAA,GRi1CUyC,OAAQ1C,EAAG4K,EAAS3K,EAAG4K,IQp5C7B,GAIEf,GAAiBQ,EAAAQ,EAJf/F,EAAAtO,KAAAsO,QAAgB1F,KAAQ5I,MRi1CtByQ,EAAgBzQ,KAAKyQ,cAAc7H,KAAK5I,MQ/0C9CmO,EAAanO,KAAAmO,WAAcnO,KAAW2P,KAC1CA,EAAA3P,KAAA2P,KAAAtK,MAGA8I,GAAamG,GAAA,aAAc,WRk1CnBjB,EAAiB5C,IQ/0CnBoD,EAAAvS,KAAoBqO,EAAA4E,yBACpBV,EAAIxI,KAAA5F,OAAA+O,QACVX,EAAQtI,QAAA9F,OAAA+O,QAEJH,EAAaZ,EAAAI,GACPQ,GACJP,MAEN3F,EAAWmG,GAAI,YAAA,WACf,GAAQG,GAAAhB,EAAAI,EACRQ,IAAeI,EACPT,IRi1CSK,EQ/0CXJ,IACNQ,GACIX,IAEJO,EAAQI,IAERtG,EAAAmG,GAAA,aAAA,WACAD,IRi1CUA,GAAa,EQ/0CnBJ,QR23CAS,OAAQ,SAASjI,EAAI/L,GQ/0CrBA,EAAK+L,GAAAA,ERi1CH/L,EAAKiP,KAAK7K,KAAK,UAAW2H,GQ/0C5B/L,EAAIyN,UAAQnO,KAEhBwP,GAAAvN,UAAAyS,OAAAtT,KAAApB,KAAAyM,EAAA/L,GAEAA,GAAAkD,EAAAlD,EAAA4N,UACE5N,EAAQ4N,QAAS,WRo1CfqG,OAAQ,SAASlI,EAAI/L,GQ/0CrBA,EAAIiP,KAAAiF,eAER5U,MAAA6U,UAAApI,GAEA/L,GAAAkD,EAAAlD,EAAA4N,UACE5N,EAAA4N,QAAgB,WAIlBkF,eAAA,SAAAX,GRi1CM7S,KAAKmT,uBQ/0CXnT,KAAA8U,oBAAAjC,GACA7S,KAAA+U,qBAOAnC,kBAAW,WRm1CD5S,KAAKmO,WQ/0CXnO,KAAKmO,UACFrJ,KAAK,QAAW9E,KAAK8R,kBAG5B9R,KAAO2P,KACA7K,KAAK,UAAU9E,KAAK4R,WAC3B9M,KAAA,sBAAA9E,KAAA6R,uBRi1CS/M,KAAK,QAAS9E,KAAKiS,aQ/0C1BnN,KAAA,QAAc9E,KAAS6Q,aAAO,KAAW7Q,KAAS4E,SAChDE,KAAQ,SAAS9E,KAAA6Q,aAAA,KAAA7Q,KAAA6E,WAGrBuN,aAAA,SAAAzF,EAAAwB,EAAAtM,GACI8K,EAAIA,MACJwB,EAAWA,KRm1CT,IAAI6G,GAAalU,EAAWgC,EAAMqL,EAAW,MAAOrL,EAAM6J,EAAO,MQ10CvE,OALAqI,GAAAxM,QAAA,SAAAyM,GACIpT,EAAO8S,OAAUM,EAASpI,EAASsB,EAAA8G,MAI7BtI,EAAO3J,IAAA,SAASQ,GAG1B,GAAAiJ,GAAAjJ,EAAAiJ,GACQ/L,EAAImM,EAAAsB,EAAA1B,ERk1CJ,IAAIjJ,YAAmBzD,GAAGkM,QQ10ClC,MAJQvL,IACRmB,EAAA8S,OAAAlI,EAAA/L,GAEQmB,EAAI6S,OAAQjI,EAAKjJ,GACzBA,CASA,IANA9C,GAAAA,EAAA2B,MAAAmB,EAAAnB,OAEQR,EAAK8S,OAAMlI,EAAA/L,GACTA,EAAImL,QAGFnL,EAwBZA,EAAA8C,QAAAA,OAxBkB,CRi1CN,GAAI0R,GAAOnV,EAAGkM,MAAMzI,EAAQnB,KQ90C9B,KAAI6S,EACF,KAAA,IAASnR,OAAA,oCAAAP,EAAAnB,KAErB,IAAY8S,IAAWrF,QAAAoF,EAAApF,SAAA,GACXvB,GRi1CEtC,MAAS,mBQ/0CbmJ,UAAK,uBACHC,QAAU,sBRi1CRH,EAAKnF,WAEP,KAAKxB,EQ/0CP,KAAO,IAAIxK,OAAK,4BAAMmR,EAAAnF,WAAA,SAAAvM,EAAAnB,KRk1CpB,IAAIsN,GAAO9N,EAAQ0M,GAAa4G,EQ90C5CzU,GAAA,GAAAwU,GAAAvF,EAAAnM,GACA9C,EAAa2B,KAAAmB,EAAAnB,KAEbR,EAAA6S,OAAAjI,EAAA/L,GRs1CU,MAAOA,MQ30CjBiS,eAAY,SAAAnP,EAAAkD,GAiFZ,QAAQ4O,GAAoBF,EAAUhI,EAAWmI,EAAAC,GAM3C,MR20CMJ,IAAaxR,EAAWwR,EAAUhI,UQ/0CxCgI,EAAOhI,SAASA,GRk1CZgI,EAAY9T,GAAQ8L,SAAUA,GAAWgI,GQ90CtClU,EAASkU,GAAM3I,GAAA,cAAA8I,EAAA,GAAA,KAAAC,EAAA,KAG5B,QAAUC,GAAYpT,GACtB,MAAA,UAAA3B,GACAA,EAAAgG,OAAA9C,EAAAlD,EAAAgG,QACAgP,EAAAhP,KAAArE,GAAA3B,EAAA+L,IAAA/L,EAAAgG,WACAhG,GAAAgG,OA5FA,GAAQgM,GAAAlP,EAAYkD,GACpBgP,GACAhP,MRi1CUwL,UQ/0CFG,eAIR,KAAMK,EACA,MAAAgD,EAON,IAJIA,EAAUxD,UACdwD,EAAArD,cAGQrQ,MAAKmG,QAAAuK,GAAA,CRm1CL,GAAIiD,IQ/0CNC,KAAO,EACb1D,QAAA,EAGAQ,GAAYlK,QAAM,SAAQoN,EAAML,GAIhC,GAAUvT,MAAImG,QAAQyN,GAAS,CAC/BD,EAAgBC,KAAK,CACrB,IAAcC,KAEdD,GAAApN,QAAgB,SAAO9H,EAAa8U,GACpC9U,EAAAkM,UACA+I,EAAAzD,QAAA,EACAwD,EAAsBxD,OAAMxR,EAAQiM,MAAA3J,IAAA,SAAAiJ,EAAA6J,GACtB,MAAA5U,MAAe+K,GAAQQ,GAAA,UAAuBqJ,EAAQ,QAGtDH,EAAAzD,OAIJ2D,EAAW1S,KAAamS,EAAW5U,EAAW,QAAO6U,EAAAC,IAH/DK,EAAAE,QAAAT,EAAA5U,EAAA,OAAA6U,EAAAC,MAOAE,EAAkBrD,WAAYqD,EAASrD,WAAA3Q,OAAAmU,OAGvCD,GAAehJ,UACH+I,EAAKC,IAAMD,EAAAzD,QAAA,EACvBwD,EAAcxD,OAAW0D,EAAWjJ,MAAAxL,SAGpCwU,EAAAC,IAGAF,EAAArD,WAAAlP,KAAAmS,EAAAM,EAAA,SAAAL,EAAA,IAFAG,EAAArD,WAAA0D,QAAAT,EAAAM,EAAA,MAAAL,EAAA,UASM7S,GAAWgQ,EAAOR,OAAA,SAAYC,EAAS1F,GACrCiJ,EAAWxD,OAAA/O,KAAW7B,GAAKmL,GAAQA,GAAI0F,MRm1CvCzP,EAAWgQ,EAAOL,WAAY,SAASC,EAAmB7F,GQ/0C9DiJ,EAAWrD,WAAelP,KAAA7B,GAAYmL,GAAAA,GAAA6F,KAO1C,OR60CMoD,GAAWxD,OAAO1J,QAAQiN,EAAY,WQ/0CxCC,EAASrD,WAAA7J,QAAiBiN,EAAW,eAEjCC,GAqBRvC,qBAAqB,WACrB,GAAO/F,GAAKpN,KAAUyQ,eACtBzQ,MAAA2P,KAAAqG,UAAA,gBRi1CSlR,KAAK,YAAa2E,EAAU2D,EAAS5B,KAAM4B,EAAS/B,MQ/0C3DvG,KAAA,QAAAsI,EAAqBxI,OACnBE,KAAI,SAAasI,EAAAvI,SRm1CjBiQ,oBAAqB,SAASjC,GQ7yClC,QAAAzC,GAAAgF,EAAA7L,EAAAC,EAAAhG,GRi1CY4R,GAAaxR,EAAWwR,EAAUhF,YQ/0C5CgF,EAAAhF,UAAmB7G,EAAAC,EAAWhG,GApC5B,GAAAyI,GAAWjM,KAAAyQ,gBACT7L,EAAQ5E,KAAA0R,SACR7M,EAAU7E,KAAK2R,SAErBkB,GAAMxH,IAAO7J,OAAA,SAAA0C,EAAAqP,GACb,GAAO/J,GAAMtF,EAAAqP,EAAAvJ,MAGP,OR80CEoG,GAAUmD,EAAK6B,UAAWnJ,EAAMT,KAAMhC,GAAI5E,MAAOqH,EAAMrH,QQ90CrD4E,GACJyC,EAAIZ,KRk1CJwH,EAAOvH,MAAM9J,OAAO,SAAS0C,EAAUqP,EAAM0C,EAAO3C,GQ/0CpD,GAAA4C,GAAO5C,EAAA2C,EAAA,KAAAjM,OAAA,GACNT,EAAArF,EAAcgS,EAAAlM,MAGf,OR80CEoG,GAAUmD,EAAK6B,UAAW7L,EAAG0C,EAAMZ,KAAMxG,OAAQoH,EAAMpH,SQ90CrD0E,GACJ3E,EAAQqH,EAAAX,ORk1CRuH,EAAOtH,OAAO/J,OAAO,SAAS0C,EAAUqP,EAAM0C,EAAO3C,GQ/0CrD,GAAA4C,GAAO5C,EAAA2C,EAAA,KAAAjM,OAAA,GACNR,EAAAtF,EAAegS,EAAAlM,MAGhB,OR80CEoG,GAAUmD,EAAK6B,UAAWnJ,EAAMT,KAAMhC,GAAI5E,MAAOqH,EAAMrH,QQ90CrD4E,GACJ3E,EAAUoH,EAAKV,QAErBsH,EAAMrH,KAAOhK,OAAA,SAAA0C,EAAAqP,GACb,GAAOhK,GAAMrF,EAAAqP,EAAAvJ,MAGP,OR80CEoG,GAAUmD,EAAK6B,UAAW7L,EAAG0C,EAAMZ,KAAMxG,OAAQoH,EAAMpH,SQ90CrD0E,GACV0C,EAAQT,OAQRuJ,kBAAa,WAIb,QAAAoB,GAAA3H,GACA,OACIA,MAASA,EACP4H,OAAMC,SAAWtW,EAAAwM,OAAAiC,GAAA1J,KAAA,iBAAA,GAGvB,QAAQwR,GAAOvV,EAAAC,GACf,MAAAD,GAAAqV,OAAApV,EAAAoV,OACe,GACfrV,EAAAqV,OAAApV,EAAAoV,OACa,EAEb,EAEI,QAASG,GAAO5K,GRi1CZ,MAAOA,GAAQ6C,MQl2CvB,GAAMgI,GAAOxW,KAAA2P,KAAAqG,UAAA,wCAAA,EAqBbQ,GAAUA,EAASxT,IAAAmT,GAAMnJ,KAAcsJ,GAAMtT,IAAWuT,GAGxDC,EAAAhO,QAAA,SAAAgG,GRi1CYA,GAASA,EAAMlC,YAAckC,EAAMlC,WAAWmK,aQ/0CxDjI,EAAAlC,WAAgBmK,YAAejI,MAIjC4E,eAAQ,SAAA1M,GRi1CF,GAAIgQ,IAAkBrL,OAASC,SAAWC,UAAYC,QQ/zC5D,OAhBAxL,MAAMqS,aAAa7J,QAAU,SAAU4M,GACjC,IAAIA,EAAAnF,aAAqBmF,EAAOjF,UAAhC,CAGN,GAAQ0C,GAAAuC,EAAAjF,UAAAnQ,KAAA+S,MAAAqC,EAAA3I,GAAA/F,IRi1CI0G,EAAWyF,GAAUA,EAAOzF,QQ90ChC5M,IAAQ,MAAY,QAAS,SAAA,QAAY4M,IAGjDsJ,EAAOtJ,GAAAjK,MRi1CG6G,OAAoB,OAAZoD,GAAiC,UAAZA,EAAuByF,EAAOhO,OAASgO,EAAOjO,MQ/0CjFwQ,UAAOA,MAEXpV,MAEA0W,KCx1BAC,IAQAC,UAAAnL,EAAA,SAAAQ,EAAA/E,GACA,MAAAA,GAAA3G,MAUAsW,aAAApL,EAAA,SAAAQ,EAAA/E,EAAA7G,GAGA,MADA6G,GAAA4P,YAAAzW,EACA6G,EAAAE,SAWA2P,YAAAtL,EAAA,SAAAQ,EAAA/E,EAAA7G,GACA,MAAA,4BAAAA,GAAA6G,EAAA,SAAA,IAAAA,EAAA,SAAA,MAUA4P,YAAArL,EAAA,SAAAQ,EAAA/E,EAAA7G,GACA,GAAAgH,GAAA4E,EAAA+K,WAAA5V,KAAApB,KAAAkH,EAAA7G,EACA,OAAAgH,IAAAA,EAAAyP,aAAA,IASAE,WAAAvL,EAAA,WACA,MAAAU,GAAAnM,QAaAiX,UAAAxL,EAAA,SAAAQ,EAAA/E,GACA,MAAA6D,GAAA7D,EAAAqI,QAAA,OASA2H,YAAA,WACA,GAAAxQ,GAAA1G,KAAA0G,MACA,OAAAA,IAAAS,EAAAT,GAAAA,EAAApG,OAAA,GA+CA6W,YAAc,SAAA5T,EAAWkB,EAAejB,GACxC,GAAQA,GAAIA,EAAawL,SAAA,CACzB,GAAQA,GAAaxL,EAAKwL,QAE1BxL,GAAAwL,SAAA,SAAAtI,GACQ,GAAAuF,GAAOjM,KAAAiM,QACJ5E,EAAOrH,KAAAgW,UAAA,KAClBtP,KAAAA,EAAAuF,EAAA2K,UAcI,OAZJvP,GAAWyM,QACAvC,OAAK,KAERlK,EACGvC,KAAA,QAAAmH,EAAA8K,aACXjS,KAAA,QAAAmH,EAAAgL,WAEA5P,EAAA+P,OACQxC,SAERvN,EAAA4E,MAAA,WAAA,MAAAA,IAEc+C,EAAQ5N,KAAAiG,EAAU4E,EAAW4K,eAIzC,MAAA9W,GAAWkM,QAAShK,UAAMuM,MAAApN,KAAApB,KAAAuD,EAAAkB,EAAAjB,IT8rExBkF,UAAW,SAAShC,GiBt1EpB,MAAKS,GAAAT,GAAAA,IAAAU,OAAAV,MAIT2Q,IACA/O,WAAA,WAEItI,KAAAsU,GAAO,cAAQtU,KAAAsX,UAAA1O,KAAA5I,QAGnB0I,UAAQ,SAAahC,GAiBrB,QAAQ6Q,GAAU5J,EAAAsI,GAMlB,MALA7T,GAAAuL,IAEA3L,MAAAmG,QAAAwF,IAAAlL,EAAAkL,EAAApE,KACAoE,EAAApE,EAAA0M,GAFMtI,GAAOpE,EAAA0M,EAAAzM,EAAAmE,GAIbA,EARA,MAdAjH,GAAMA,MAGNS,EAAAT,GACAA,EAAAA,EAAA1D,IAAA,SAAAqE,GACA,MAAA/F,MAAA+F,GACSD,OAAIC,EAAMD,OAAQpE,IAAOuU,OAIvBvV,MAAAmG,QAAAzB,KACXA,EAAAA,EAAA1D,IAAAuU,IAGQ7Q,GAkBR8Q,OAAMlU,EAAK,UACXjB,KAAA,WACAwB,IAAM,SAAO5C,GACb,GAAQoF,GAAUD,EAAAnF,EAGd,OAFJjB,MAAAyX,eAAApR,IAGMjC,SAAYiC,IAGlB3C,IAAA,SAAA2C,GAMA,MALAA,KACMA,EAAOrG,KAAA0X,mBACb1X,KAAAyX,eAAApR,IAGAA,KAUAsR,OAAMrU,EAAK,UACXjB,KAAA,WACAwB,IAAM,SAAO5C,GACb,GAAQoF,GAAUD,EAAAnF,EAGd,OAFJjB,MAAA4X,eAAAvR,IAGMjC,SAAYiC,IAGlB3C,IAAA,SAAA2C,GAMA,MALAA,KACMA,EAAOrG,KAAA6X,mBACb7X,KAAA4X,eAAAvR,IAGAA,KAWAyR,KAAAxU,EAAA,QACAD,cAAA,MAUA0U,KAAAzU,EAAA,QACAD,cAAA,MAWAkG,EAAIkC,EAAA,SAAOQ,EAAW/E,EAAA7G,GACtB,GAAAY,GAAAgL,EAAA+L,OAAA5W,KAAApB,KAAAkH,EAAA7G,GACAqH,EAAAuE,EAAA6K,aAAA7K,EAAA6K,YAAA1V,KAAApB,KAAAkH,EAAA7G,IAAA,CAEA,OAAAuF,YAAAqG,EAAAuL,SAAAvW,EAAAyG,MAWA8B,EAAIiC,EAAA,SAAOQ,EAAW/E,EAAA7G,GACtB,GAAAY,GAAAgL,EAAAgM,OAAA7W,KAAApB,KAAAkH,EAAA7G,GACAqH,EAAAuE,EAAA6K,aAAA7K,EAAA6K,YAAA1V,KAAApB,KAAAkH,EAAA7G,IAAA,CAEA,OAAAuF,YAAAqG,EAAA0L,SAAA1W,EAAAyG,MAWAnH,IAAAkL,EAAA,SAAAQ,EAAA/E,EAAA7G,GACA,MAAA+C,GAAA8D,EAAA3G,IAAA0L,EAAA+L,OAAA5W,KAAApB,KAAAkH,EAAA7G,MASA6X,GAAA,WACA,MAAAtS,YAAA5F,KAAAwX,SAAA,KASAW,GAAA,WACA,MAAAvS,YAAA5F,KAAA2X,SAAA,KAeAK,OAAAvM,EAAA,SAAAQ,EAAA/E,GACA,GAAA3G,GAAA0L,EAAA6L,MACA,OAAA5Q,GACA3G,IAAA2G,GAAAA,EAAA3G,GAAA2G,EAAA,GADA,SAgBA+Q,OAAAxM,EAAA,SAAAQ,EAAA/E,GACA,GAAA3G,GAAA0L,EAAA8L,MACA,OAAA7Q,GACA3G,IAAA2G,GAAAA,EAAA3G,GAAA2G,EAAA,GADA,SASAoQ,UAAA,WACAtX,KAAAyX,eAAAzX,KAAAwX,UACAxX,KAAA4X,eAAA5X,KAAA2X,WASAF,eAAA,SAAAW,GACAA,EAAArQ,OAAA,EAAA/H,KAAA4E,WASAgT,eAAA,SAAAS,GACAA,EAAAtQ,OAAA/H,KAAA6E,SAAA,KASA6S,iBAAA,WACA,MAAAtR,IACAM,KAAA1G,KAAA0G,OACAnG,IAAA,OAUAsX,iBAAA,WACA,MAAAzR,IACAM,KAAA1G,KAAA0G,OjBw1EQnG,IAAK,QkBhmFb+X,GAAAhX,KAAA+V,IAOAkB,cAAA,WACA,GAAA9Q,GAAAzH,KAAAkX,YAAAlX,KAAAkX,cAAA,CACA,OAAAlX,MAAAwY,eAAA/Q,GASA+Q,aAAW,WACX,GAAA7Q,GAAA3H,KAAAwX,UAAAxX,KAAAwX,SAAA5P,WAAA5H,KAAAwX,SAAA5P,YACAhD,EAAAiD,SAAAF,GAAAA,EAAA,CAEA,OAAA/C,IASA6T,UAAA,WACA,GAAApS,GAAArG,KAAAwX,QACA,OAAAnR,IAAAA,EAAAzB,MAAAyB,EAAAzB,QAAA5E,KAAAwY,gBAUAd,iBAAW,WACX,MAAMtR,IACN/D,KAAA,UACAqE,KAAA1G,KAAA0G,OACAnG,IAAA,IlBsmFQqG,UAAU,OmBxpFlB8R,IASAnP,EAAIkC,EAAA,SAAOQ,EAAW/E,EAAA7G,GACtB,GAAAY,GAAAgL,EAAAgM,OAAA7W,KAAApB,KAAAkH,EAAA7G,GACAqH,EAAAuE,EAAA6K,aAAA7K,EAAA6K,YAAA1V,KAAApB,KAAAkH,EAAA7G,IAAA,CAEA,OAAAuF,YAAAqG,EAAA0L,SAAA1W,EAAAyG,MAWA8B,EAAIiC,EAAA,SAAOQ,EAAW/E,EAAA7G,GACtB,GAAAY,GAAAgL,EAAA+L,OAAA5W,KAAApB,KAAAkH,EAAA7G,GACAqH,EAAAuE,EAAA6K,aAAA7K,EAAA6K,YAAA1V,KAAApB,KAAAkH,EAAA7G,IAAA,CAEA,OAAAuF,YAAAqG,EAAAuL,SAAAvW,EAAAyG,MASAwQ,GAAA,WACA,MAAAtS,YAAA5F,KAAA2X,SAAA,KASAQ,GAAA,WACA,MAAAvS,YAAA5F,KAAAwX,SAAA,KASAC,eAAA,SAAAW,GACAA,EAAArQ,OAAA/H,KAAA6E,SAAA,KnBsqFI+S,eAAgB,SAASS,GoB9tFzBA,EAAAtQ,OAAS,EAAA/H,KAAA4E,YAIb+T,IAiBAC,aAAQ,WACJ,GAAIpV,GAAOxD,KAAK6Y,QAChBrV,GAAI6I,OAASrM,IAEjB,IAAA8Y,GAAA/Y,EAAAkM,MAAAzI,EAAAnB,MACIsN,EAAK3P,KAAA2P,KAAA4B,OAAkB,KAAQzM,KAAA,QAAS,gBACtC+T,EAAO7Y,KAAA+Y,QAAe,GAAAD,GAAAnJ,EAAAnM,EAGxBxD,MAAKgZ,kBAAWxQ,QAAe,SAAAmG,GAC7BkK,EAAAlK,GAAe3O,KAAA2O,IACf3O,MAENA,KAAMsU,GAAA,OAAO,SAAQ5N,GACrBlD,EAAAxD,KAAA6Y,SACMrV,EAAI6I,OAAQrM,KAElB6Y,EAAArV,QAAAA,GAGAqV,EAAAjJ,KADMpM,EAAK+M,WAAA,EACX/M,EAAAkD,MAAAA,OAGAkC,KAAA5I,QA8BA6Y,OAAAvV,EAAgB,UAChBI,IAAQ,SAASzC,GAMjB,MALAiB,GAAAjB,GACMA,GAAOsP,QAAatP,GACZA,IACdA,GAAAsP,SAAA,IAEArP,KAAAD,GACAoB,KAAA,cAMA2W,sBVnFIC,GAAQ3X,KAAAqX,IACVK,mBAAY,IAAW,OAGzBE,IACA5Q,WAAW,WACXtI,KAAMsU,GAAK,SAAA,WACXtU,KAAAmO,UAAAmG,GAAA,aAAAtU,KAAAmZ,aAAAvQ,KAAA5I,OACAA,KAAAmO,UAAAmG,GAAA,YAAAtU,KAAAoZ,YAAAxQ,KAAA5I,OACAA,KAAAmO,UAAAmG,GAAA,aAAAtU,KAAAqZ,aAAAzQ,KAAA5I,QACA4I,KAAA5I,QAYA+M,SAAWtB,EAAA,SAAAQ,EAAA/E,EAAA7G,EAAAuL,GACX,GAAMrL,GAAM0L,EAAO1L,KAAO0L,EAAK1L,IAAAa,KAAOpB,KAAOkH,EAAA7G,EAAAuL,GACvCvE,EAAQ4E,EAAA+K,YAAA/K,EAAA+K,WAAA5V,KAAApB,KAAAkH,EAAA7G,EAAAuL,MAEd,QACArL,KAAQ8G,EAAO9G,KAAAqL,GAAA,KAAArL,GAAAF,GACfgH,OAAWA,EACXH,EAAQA,EACR+F,MACQhB,MAAGA,EACX5L,EAAAA,EACAuL,EAAAA,EACArC,EAAA0C,EAAA1C,GAAA0C,EAAA1C,EAAAnI,KAAApB,KAAAkH,EAAA7G,EAAAuL,GACApC,EAAAyC,EAAAzC,GAAAyC,EAAAzC,EAAApI,KAAApB,KAAAkH,EAAA7G,EAAAuL,OAgCA0N,gBAAA7N,EAAA,SAAAQ,EAAA/E,EAAA7G,EAAAuL,GACAK,EAAAkC,UAAAG,QAAA,mBAAArC,EAAAc,SAAA3L,KAAApB,KAAAkH,EAAA7G,EAAAuL,MA8BA2N,gBAAA9N,EAAA,SAAAQ,EAAA/E,EAAA7G,EAAAuL,GACAK,EAAAkC,UAAAG,QAAA,mBAAArC,EAAAc,SAAA3L,KAAApB,KAAAkH,EAAA7G,EAAAuL,MAWAuN,aAAA,aAUAC,YAAA,aAOAC,aAAA,cASIG,IACJlR,WAAA,WACA,GAAM6E,GAASE,EAAAY,CAEfjO,MAAAsU,GAAA,OAAA,WAEMnH,EAAI,OAGVnN,KAAAsU,GAAU,SAAU,WACpB,GAAAmF,GAAA,SAAArM,GACQ,GAAAc,KACAd,KACAc,EAAKhB,EAAAC,EAAAC,EAAAnB,MAAAoB,IAEPW,EAAeC,EAAGC,EAAclO,KAAAmO,WAC9BF,EAAKC,GACbtF,KAAU5I,KAEVA,MAAQmO,UAAYmG,GAAA,aAAK,SAAAlH,GACjBD,IACAA,EAAKL,EAAA9M,KAAAA,KAAA0G,SAEP2G,EAAKrN,KAAa0Z,iBAClBD,EAAKrM,IACLxE,KAAK5I,OAEXA,KAAAmO,UAAAmG,GAAA,YAAAmF,GACAzZ,KAAAmO,UAAAmG,GAAA,aAAAmF,IACA7Q,KAAA5I,QAUA0Z,eAAApW,EAAA,kBACAD,cAAmBuH,EAAAA,KClLnB+O,IAQApH,MAAMjP,EAAO,SACbO,IAAQ,SAAU5C,GAGd,OACEmD,SAAY,WAAa,MAAKnD,MXkjG9BoC,cAAe,WW9iGrB,MAAArD,MAAAmO,WAAAnO,KAAAmO,UAAAoE,OAAAvS,KAAAmO,UAAAoE,WAWAC,SAAAlP,EAAA,YACAO,IAAA,SAAA5C,GACI,OACEmD,SAAY,WAAa,MAAKnD,MXkjG9BoC,cAAe,WW9iGrB,MAAArD,MAAAmO,WAAAnO,KAAAmO,UAAAoE,OAAAvS,KAAAmO,UAAAqE,cAcAC,KAAAnP,EAAA,QACAO,IAAA,SAAA5C,GACI,OACEmD,SAAY,WAAa,MAAKnD,MXkjG9BoC,cAAe,WW9iGrB,MAAArD,MAAAmO,WAAAnO,KAAAmO,UAAAoE,OAAAvS,KAAAmO,UAAAsE,UXykGImH,gBAAiB,SAAyBnV,GW9iG1C,GAAI8N,GAACvS,KAAYuS,QACfC,EAAUxS,KAAMwS,WACdC,EAACzS,KAAAyS,MAEAhQ,GAAY8P,IACf9N,EAAU8N,MAAKA,GACrB9P,EAAA+P,IACA/N,EAAA+N,SAAAA,GXgjGW/P,EAAYgQ,IY3pGvBhO,EAAAgO,KAAAA,KAiCAoH,IAkBAC,cAAA,SAAAvW,EAAAkB,GACA,MAAA8J,GAAAvO,KAAA,QAAAuD,EAAAkB,IAoBAsV,oBAAA,SAAAxW,EAAAkB,GACA,MAAA8J,GAAAvO,KAAA,SAAAuD,EAAAkB,IAWAwK,WAAA,aASAE,SAAA,aAQA6K,QAAA,aAgBAC,SAAA,aAgBAC,QAAA,aAgBAC,OAAA,cSxIEjS,IACAyO,OAAQA,GACRU,GAAAA,GACAiB,SAAOA,GACPI,WAAAA,GACAC,OAAAA,GACAM,SAAAA,GACFC,MAAAA,GACAM,YAAAA,GACEG,WAAYA,GACdE,cAAAA,GrB41GIO,WAAY1B,GsBv2Gd2B,SAASpB,IAGTnZ,GAAMC,EAAAua,SACNC,QAAO,SACPlL,MAAAA,GACAC,QAASA,GACTE,KAAAA,GACAK,MAAAA,GACFG,UAAAA,GACEK,QAAQA,GAtBVe,QAAAA,GAAA1E,QAAAA,EtBm4GIxE,OAAQA,IAGNsS,GAAe1a,EAEnB,OAAO0a","file":"d3.compose-mixins.min.js","sourcesContent":[null,"// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\r\n  isFunction,\r\n  isUndefined,\r\n  valueOrDefault\r\n} from '../utils';\r\n\r\n/**\r\n  Helper for creating properties for charts/components\r\n\r\n  @example\r\n  ```javascript\r\n  var Custom = d3.chart('Chart').extend('Custom', {\r\n    // Create property that's stored internally as 'simple'\r\n    simple: property('simple')\r\n  });\r\n  var custom; // = new Custom(...);\r\n\r\n  // set\r\n  custom.simple('Howdy');\r\n\r\n  // get\r\n  console.log(custom.simple()); // -> 'Howdy'\r\n\r\n  // Advanced\r\n  // --------\r\n  // Default values:\r\n  Custom.prototype.message = property('message', {\r\n    default_value: 'Howdy!'\r\n  });\r\n\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n  custom.message('Goodbye');\r\n  console.log(custom.message()); // -> 'Goodbye'\r\n\r\n  // Set to undefined to reset to default value\r\n  custom.message(undefined);\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n\r\n  // Custom getter:\r\n  Custom.prototype.exclaimed = property('exclaimed', {\r\n    get: function(value) {\r\n      // Value is the underlying set value\r\n      return value + '!';\r\n    }\r\n  });\r\n\r\n  custom.exclaimed('Howdy');\r\n  console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n  // Custom setter:\r\n  Custom.prototype.feeling = property('feeling', {\r\n    set: function(value, previous) {\r\n      if (value == 'Hate') {\r\n        // To override value, return Object with override specified\r\n        return {\r\n          override: 'Love',\r\n\r\n          // To do something after override, use after callback\r\n          after: function() {\r\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    custom.feeling('Hate'); // -> 'After: Love'\r\n    console.log(custom.feeling()); // -> 'Love'\r\n  });\r\n  ```\r\n  @method property\r\n  @for helpers\r\n  @param {String} name of stored property\r\n  @param {Object} [options]\r\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`)\r\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n  @param {String} [options.type] `get` is evaluated by default, use `\"Function\"` to skip evaluation\r\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n  @param {String} [options.prop_key='__properties'] underlying key on object to store property\r\n  @return {Function} `()`: get, `(value)`: set\r\n*/\r\nexport default function property(name, options) {\r\n  options = options || {};\r\n  var prop_key = options.prop_key || '__properties';\r\n\r\n  var property = function(value) {//eslint-disable-line no-shadow\r\n    var properties = this[prop_key] = this[prop_key] || {};\r\n    var context = valueOrDefault(property.context, this);\r\n\r\n    if (arguments.length)\r\n      return set.call(this);\r\n    else\r\n      return get.call(this);\r\n\r\n    function get() {\r\n      value = valueOrDefault(properties[name], property.default_value);\r\n\r\n      // Unwrap value if its type is not a function\r\n      if (isFunction(value) && options.type != 'Function')\r\n        value = value.call(this);\r\n\r\n      return isFunction(options.get) ? options.get.call(context, value) : value;\r\n    }\r\n\r\n    function set() {\r\n      // Validate\r\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(this, value))\r\n        throw new Error('Invalid value for ' + name + ': ' + JSON.stringify(value));\r\n\r\n      property.previous = properties[name];\r\n      properties[name] = value;\r\n\r\n      if (isFunction(options.set) && !isUndefined(value)) {\r\n        var response = options.set.call(context, value, property.previous);\r\n\r\n        if (response && 'override' in response)\r\n          properties[name] = response.override;\r\n        if (response && isFunction(response.after))\r\n          response.after.call(context, properties[name]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // For checking if function is a property\r\n  property.is_property = true;\r\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n  property.default_value = options.default_value;\r\n  property.context = options.context;\r\n\r\n  return property;\r\n}\r\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector\r\n\r\n  @method dimensions\r\n  @for helpers\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from './index';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05]\r\n  });\r\n  ```\r\n  @method createScale\r\n  @for helpers\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import { extend } from '../utils';\r\n\r\n/**\r\n  Mix prototypes into single combined prototype for chart/component\r\n\r\n  Designed specifically to work with d3.chart:\r\n\r\n  - transform is called from last to first\r\n  - initialize is called from first to last\r\n  - remaining are overriden from first to last\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  d3.chart('Chart').extend('Custom', mixin(a, b, c, {\r\n    initialize: function() {\r\n      // d\r\n    },\r\n    transform: function() {\r\n      // d\r\n    }\r\n  }));\r\n\r\n  // initialize: Chart -> b -> d\r\n  // transform: d -> a -> Chart\r\n  ```\r\n  @method mixin\r\n  @for helpers\r\n  @param {Array|Object...} mixins... Array of mixins or mixins as separate arguments\r\n  @return {Object}\r\n*/\r\nexport default function mixin(mixins) {\r\n  mixins = Array.isArray(mixins) ? mixins : Array.prototype.slice.call(arguments);\r\n  var mixed = extend.apply(null, [{}].concat(mixins));\r\n\r\n  // Don't mixin constructor with prototype\r\n  delete mixed.constructor;\r\n\r\n  if (mixed.initialize) {\r\n    mixed.initialize = function initialize() {\r\n      var args = Array.prototype.slice.call(arguments);\r\n\r\n      mixins.forEach(function(extension) {\r\n        if (extension.initialize)\r\n          extension.initialize.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n  if (mixed.transform) {\r\n    mixed.transform = function transform(data) {\r\n      return mixins.reduceRight(function(memo, extension) {\r\n        if (extension && extension.transform)\r\n          return extension.transform.call(this, memo);\r\n        else\r\n          return memo;\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return mixed;\r\n}\r\n","import { extend } from '../utils';\r\nimport { translate } from './index';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack())\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack({\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n  @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n  @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n  @return {Function}\r\n*/\r\nexport default function stack(options) {\r\n  options = extend({\r\n    direction: 'vertical',\r\n    origin: 'top',\r\n    padding: 0,\r\n    min_height: 0,\r\n    min_width: 0\r\n  }, options);\r\n\r\n  // Ensure valid origin based on direction\r\n  if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n    options.origin = 'left';\r\n  else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n    options.origin = 'top';\r\n\r\n  function padding(i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  return function(elements) {\r\n    if (elements && elements.attr) {\r\n      var previous = 0;\r\n\r\n      elements.attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n        var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n        var x = 0;\r\n        var y = 0;\r\n        var next_position;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          next_position = previous + spacing_width + padding(i);\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(i);\r\n          else\r\n            x = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n        else {\r\n          next_position = previous + spacing_height + padding(i);\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(i);\r\n          else\r\n            y = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  defaults,\r\n  extend,\r\n  first,\r\n  isNumber,\r\n  isObject,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './property';\r\nimport dimensions from './dimensions';\r\nimport createScale from './create-scale';\r\nimport mixin from './mixin';\r\nimport stack from './stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Get formatted margins for varying input\r\n\r\n  @method getMargins\r\n  @example\r\n  ```js\r\n  getMargins(4);\r\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n  getMargins({top: 20}, {top: 8, bottom: 8});\r\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n  ```\r\n  @param {Number|Object} margins\r\n  @param {Object} default_margins\r\n  @return {Object}\r\n*/\r\nexport function getMargins(margins, default_margins) {\r\n  if (isNumber(margins))\r\n    return {top: margins, right: margins, bottom: margins, left: margins};\r\n  else\r\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  getMargins: getMargins,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import d3 from 'd3';\nimport {\n  isFunction,\n  contains,\n  find,\n  defaults,\n  extend,\n  objectEach,\n  difference,\n  pluck\n} from './utils';\nimport {\n  getMargins,\n  property,\n  style,\n  translate\n} from './helpers';\nimport Base from './Base';\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\n\n/**\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\n\n  @example\n  ```html\n  <div id=\"#chart\"></div>\n  ```\n  ```js\n  var chart = d3.select('#chart')\n    .chart('Compose', function(data) {\n      // Process data...\n\n      // Create shared scales\n      var scales = {\n        x: {data: data.input, key: 'x', adjacent: true},\n        y: {data: data.input, key: 'y'},\n        y2: {data: data.output, key: 'y'}\n      };\n\n      return {\n        charts: {\n          input: {\n            type: 'Bars', data: data.input, xScale: scales.x, yScale: scales.y\n          },\n          output: {\n            type: 'Lines', data: data.output, xScale: scales.x, yScale: scales.y2}\n          }\n        },\n        components: {\n          'axis.y': {\n            type: 'Axis', scale: scales.y, position: 'left'\n          },\n          'axis.y2': {\n            type: 'Axis', scale: scales.y2, position: 'right'\n          }\n          title: {\n            type: 'Title', position: 'top', text: 'd3.compose'\n          }\n        }\n      });\n    });\n\n  chart.draw({input: [...], output: [...]});\n  ```\n  @class Compose\n  @extends Base\n*/\nexport default Base.extend('Compose', {\n  initialize: function() {\n    // Overriding transform in init jumps it to the top of the transform cascade\n    // Therefore, data coming in hasn't been transformed and is raw\n    // (Save raw data for redraw)\n    this.transform = function(data) {\n      this.rawData(data);\n      return data;\n    };\n\n    // Responsive svg based on the following approach (embedded + padding hack)\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\n    // (not enabled if selection is svg)\n    if (this.base.node().tagName != 'svg') {\n      this.container = this.base.append('div')\n        .attr('class', 'chart-compose-container');\n\n      this.base = this.container.append('svg')\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\n        .attr('version', '1.1')\n        .attr('class', 'chart-compose');\n    }\n    else {\n      this.base.classed('chart-compose', true);\n    }\n\n    this.attachHoverListeners();\n  },\n\n  /**\n    Get/set the options `object/function` for the chart that takes `data` and\n    returns `{charts, components}` for composing child charts and components.\n\n    @example\n    ```js\n    // get\n    chart.options();\n\n    // set (static)\n    chart.options({\n      charts: {},\n      components: {}\n    });\n\n    // set (dynamic, takes data and returns options)\n    chart.options(function(data) {\n      // process data...\n\n      return {\n        charts: {},\n        components: {}\n      };\n    });\n\n    // Set directly from d3.chart creation\n    d3.select('#chart')\n      .chart('Compose', function(data) {\n        // ...\n      });\n    ```\n    @property options\n    @type Function|Object\n  */\n  options: property('options', {\n    default_value: function() {},\n    type: 'Function',\n    set: function(options) {\n      // If options is plain object,\n      // return from generic options function\n      if (!isFunction(options)) {\n        return {\n          override: function() {\n            return options;\n          }\n        };\n      }\n    }\n  }),\n\n  // Store raw data for container before it has been transformed\n  rawData: property('rawData'),\n\n  /**\n    Margins between edge of container and components/chart\n\n    @example\n    ```js\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\n    ```\n    @property margins\n    @type Object {top, right, bottom, left}\n    @default {top: 10, right: 10, bottom: 10, left: 10}\n  */\n  margins: property('margins', {\n    default_value: default_compose_margins,\n    set: function(values) {\n      return {\n        override: getMargins(values, default_compose_margins)\n      };\n    }\n  }),\n\n  // Chart position\n  chartPosition: property('chartPosition', {\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\n    set: function(values) {\n      return {\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\n      };\n    },\n    get: function(values) {\n      values.width = this._width() - values.right - values.left;\n      values.height = this._height() - values.bottom - values.top;\n\n      return values;\n    }\n  }),\n\n  /**\n    Get/set overall width of chart\n\n    @property width\n    @type Number\n  */\n  width: property('width', {\n    default_value: null\n  }),\n\n  /**\n    Get/set overall height of chart\n\n    @property height\n    @type Number\n  */\n  height: property('height', {\n    default_value: null\n  }),\n\n  _width: function() {\n    var width = this.width();\n    return width != null ? width : Base.prototype.width.call(this);\n  },\n  _height: function() {\n    var height = this.height();\n    return height != null ? height : Base.prototype.height.call(this);\n  },\n\n  /**\n    Enable responsive container + viewBox so that chart scales to fill width\n    (only works if selection is not an svg)\n\n    @property responsive\n    @type Boolean\n    @default true\n  */\n  responsive: property('responsive', {\n    default_value: true\n  }),\n\n  // Set svg viewBox attribute\n  viewBox: property('viewBox', {\n    default_value: function() {\n      if (this.responsive() && this.width() && this.height())\n        return '0 0 ' + this.width() + ' ' + this.height();\n      else\n        return null;\n    }\n  }),\n\n  // Set svg preserveAspectRatio attribute\n  preserveAspectRatio: property('preserveAspectRatio', {\n    default_value: function() {\n      if (this.responsive())\n        return 'xMidYMid meet';\n      else\n        return null;\n    }\n  }),\n\n  // Set container style\n  containerStyle: property('containerStyle', {\n    default_value: function() {\n      if (this.responsive()) {\n        var aspect_ratio = 1;\n        if (this.width() && this.height())\n          aspect_ratio = this.height() / this.width();\n\n        return style({\n          width: '100%',\n          height: 0,\n          'padding-top': (aspect_ratio * 100) + '%',\n          position: 'relative'\n        });\n      }\n      else {\n        return style({position: 'relative'});\n      }\n    }\n  }),\n\n  // Set base style\n  baseStyle: property('baseStyle', {\n    default_value: function() {\n      if (this.responsive()) {\n        return style({\n          position: 'absolute',\n          top: 0,\n          left: 0\n        });\n      }\n      else {\n        return null;\n      }\n    }\n  }),\n\n  /**\n    Set charts from options or get chart instances.\n    Each chart should use a unique key so that updates are passed to the existing chart\n    (otherwise they are recreated on update).\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\n\n    @example\n    ```js\n    chart.charts([\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\n    ]);\n    ```\n    @property charts\n    @type Array\n  */\n  charts: property('charts', {\n    set: function(chart_options, charts) {\n      // Store actual charts rather than options\n      return {\n        override: this._attachItems(chart_options, charts, this)\n      };\n    },\n    default_value: []\n  }),\n\n  /**\n    Set components from options or get components instances.\n    Each component should use a unique key so that updates are passed to the existing chart\n    (otherwise they are recreated on update).\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\n\n    @example\n    ```js\n    chart.components([\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\n      {id: 'title', type: 'Title'} // options to pass to Title component\n    ])\n    ```\n    @property components\n    @type Array\n  */\n  components: property('components', {\n    set: function(component_options, components) {\n      // Store actual components rather than options\n      return {\n        override: this._attachItems(component_options, components, this)\n      };\n    },\n    default_value: []\n  }),\n\n  /**\n    Delay start of transition by specified milliseconds.\n    (applied to all charts and components as default)\n\n    @property delay\n    @type Number|Function\n    @default d3 default: 0\n  */\n  delay: property('delay', {type: 'Function'}),\n\n  /**\n    Transition duration in milliseconds.\n    (applied to all charts and components as default)\n\n    @property duration\n    @type Number|Function\n    @default d3 default: 250ms\n  */\n  duration: property('duration', {type: 'Function'}),\n\n  /**\n    Transition ease function.\n    (applied to all charts and components as default)\n\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\n    - Note: arguments to pass to `d3.ease` are not supported\n\n    @property ease\n    @type String|Function\n    @default d3 default: 'cubic-in-out'\n  */\n  ease: property('ease', {type: 'Function'}),\n\n  /**\n    Draw chart with given data\n\n    @example\n    ```js\n    var chart = d3.select('#chart')\n      .chart('Compose', function(data) {\n        // ...\n      });\n\n    chart.draw([1, 2, 3]);\n\n    chart.draw({values: [1, 2, 3]});\n\n    chart.draw([\n      {values: [1, 2, 3]},\n      {values: [4, 5, 6]}\n    ]);\n    ```\n    @method draw\n    @param {Any} data\n  */\n  draw: function(data) {\n    var config = this._prepareConfig(this.options(), data);\n\n    // Set charts and components from config\n    if (config.charts)\n      this.charts(config.charts);\n    if (config.components)\n      this.components(config.components);\n\n    // Add config data\n    data = {\n      original: data,\n      config: config.data\n    };\n    this.data(data);\n\n    this._updateDimensions();\n\n    // Layout components\n    this.layout(data);\n\n    // Full draw now that everything has been laid out\n    d3.chart().prototype.draw.call(this, data);\n  },\n\n  /**\n    Redraw chart with current data\n\n    @method redraw\n  */\n  redraw: function() {\n    if (this.rawData())\n      this.draw(this.rawData().original);\n  },\n\n  demux: function(name, data) {\n    if (!data || !data.config || !data.original)\n      return data;\n\n    if (findById(this.charts(), name) && data.config.charts[name])\n      return data.config.charts[name];\n    else if (findById(this.components(), name) && data.config.components[name])\n      return data.config.components[name];\n    else\n      return data.original;\n  },\n\n  // Create chart layer (for laying out charts)\n  createChartLayer: function(options) {\n    return this.base.append('g')\n      .attr('class', 'chart-layer')\n      .attr('data-zIndex', options && options.z_index);\n  },\n\n  // Create component layer\n  createComponentLayer: function(options) {\n    return this.base.append('g')\n      .attr('class', 'chart-component-layer')\n      .attr('data-zIndex', options && options.z_index);\n  },\n\n  // Create overlay layer\n  createOverlayLayer: function() {\n    if (!this.container)\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\n\n    return this.container.append('div')\n      .attr('class', 'chart-overlay-layer');\n  },\n\n  // Layout components and charts for given data\n  layout: function(data) {\n    // 1. Place chart layers\n    this._positionChartLayers();\n\n    // 2. Extract layout from components\n    var layout = this._extractLayout(data);\n\n    // 3. Set chart position from layout\n    var chart_position = extend({}, this.margins());\n    objectEach(layout, function(parts, key) {\n      parts.forEach(function(part) {\n        chart_position[key] += part.offset || 0;\n      });\n    });\n    this.chartPosition(chart_position);\n\n    // 4. Position layers with layout\n    this.positionLayers(layout);\n  },\n\n  attachHoverListeners: function() {\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\n    // For non-responsive, bounding rectangle is container so calculations still apply\n\n    var trigger = this.trigger.bind(this);\n    var chartPosition = this.chartPosition.bind(this);\n    var container = this.container || this.base;\n    var base = this.base.node();\n    var chart_position, bounds, was_inside;\n\n    container.on('mouseenter', function() {\n      // Calculate chart position and bounds on enter and cache during move\n      chart_position = chartPosition();\n      bounds = extend({}, base.getBoundingClientRect());\n      bounds.top += window.scrollY;\n      bounds.bottom += window.scrollY;\n\n      was_inside = inside(bounds);\n      if (was_inside)\n        enter();\n    });\n    container.on('mousemove', function() {\n      var is_inside = inside(bounds);\n      if (was_inside && is_inside)\n        move();\n      else if (was_inside)\n        leave();\n      else if (is_inside)\n        enter();\n\n      was_inside = is_inside;\n    });\n    container.on('mouseleave', function() {\n      if (was_inside) {\n        was_inside = false;\n        leave();\n      }\n    });\n\n    function inside() {\n      var mouse = d3.mouse(document.documentElement);\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\n    }\n    function enter() {\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\n    }\n    function move() {\n      trigger('mousemove', translateToXY(d3.mouse(base)));\n    }\n    function leave() {\n      trigger('mouseleave');\n    }\n\n    function translateToXY(coordinates) {\n      var x = coordinates[0];\n      var y = coordinates[1];\n      var chart_x = x - chart_position.left;\n      var chart_y = y - chart_position.top;\n\n      // Set at chart bounds if outside of chart\n      if (x > (chart_position.left + chart_position.width))\n        chart_x = chart_position.width;\n      else if (x < chart_position.left)\n        chart_x = 0;\n\n      if (y > (chart_position.top + chart_position.height))\n        chart_y = chart_position.height;\n      else if (y < chart_position.top)\n        chart_y = 0;\n\n      return {\n        container: {x: x, y: y},\n        chart: {x: chart_x, y: chart_y}\n      };\n    }\n  },\n\n  // Attach chart/component child item with id\n  attach: function(id, item) {\n    item.id = id;\n    item.base.attr('data-id', id);\n    item.container = this;\n\n    Base.prototype.attach.call(this, id, item);\n\n    if (item && isFunction(item.trigger))\n      item.trigger('attach');\n  },\n\n  // Detach chart/component child item by id\n  detach: function(id, item) {\n    item.base.remove();\n\n    delete this._attached[id];\n\n    if (item && isFunction(item.trigger))\n      item.trigger('detach');\n  },\n\n  // Position chart and component layers\n  positionLayers: function(layout) {\n    this._positionChartLayers();\n    this._positionComponents(layout);\n    this._positionByZIndex();\n  },\n\n  //\n  // Internal\n  //\n\n  _updateDimensions: function() {\n    // Set container and svg dimensions\n    // (if original selection is svg, no container and skip responsiveness)\n    if (this.container) {\n      this.container\n        .attr('style', this.containerStyle());\n    }\n\n    this.base\n      .attr('viewBox', this.viewBox())\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\n      .attr('style', this.baseStyle())\n      .attr('width', this.responsive() ? null : this.width())\n      .attr('height', this.responsive() ? null : this.height());\n  },\n\n  _attachItems: function(items, container, context) {\n    items = items || [];\n    container = container || [];\n\n    // Remove charts that are no longer needed\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\n    remove_ids.forEach(function(remove_id) {\n      context.detach(remove_id, findById(container, remove_id));\n    });\n\n    // Create or update charts\n    return items.map(function(options) {\n      // TODO May not have id, might need to auto-generate\n      // (might be during another step)\n      var id = options.id;\n      var item = findById(container, id);\n\n      if (options instanceof d3.chart()) {\n        // If chart instance, replace with instance\n        if (item)\n          context.detach(id, item);\n\n        context.attach(id, options);\n        return options;\n      }\n      else {\n        if (item && item.type != options.type) {\n          // If chart type has changed, detach and re-create\n          context.detach(id, item);\n          item = undefined;\n        }\n\n        if (!item) {\n          var Item = d3.chart(options.type);\n\n          if (!Item)\n            throw new Error('No registered d3.chart found for ' + options.type);\n\n          var layer_options = {z_index: Item.z_index || 0};\n          var createLayer = {\n            'chart': 'createChartLayer',\n            'component': 'createComponentLayer',\n            'overlay': 'createOverlayLayer'\n          }[Item.layer_type];\n\n          if (!createLayer)\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\n\n          var base = context[createLayer](layer_options);\n\n          item = new Item(base, options);\n          item.type = options.type;\n\n          context.attach(id, item);\n        }\n        else {\n          item.options(options);\n        }\n\n        return item;\n      }\n    });\n  },\n\n  _prepareConfig: function(options, data) {\n    // Load config from options fn\n    var config = options(data);\n    var normalized = {\n      data: {\n        charts: {},\n        components: {}\n      }\n    };\n\n    if (!config) {\n      return normalized;\n    }\n    else {\n      normalized.charts = [];\n      normalized.components = [];\n    }\n\n    if (Array.isArray(config)) {\n      // TEMP Idenfify charts from layered,\n      // eventually no distinction between charts and components\n      var found = {\n        row: false,\n        charts: false\n      };\n\n      config.forEach(function(row, row_index) {\n        // Components are added from inside-out\n        // so for position: top, position: left, use unshift\n\n        if (Array.isArray(row)) {\n          found.row = true;\n          var row_components = [];\n\n          row.forEach(function(item, col_index) {\n            if (item._layered) {\n              found.charts = true;\n              normalized.charts = item.items.map(function(chart, chart_index) {\n                return defaults({}, chart, {id: 'chart-' + (chart_index + 1)});\n              });\n            }\n            else if (!found.charts) {\n              row_components.unshift(prepareComponent(item, 'left', row_index, col_index));\n            }\n            else {\n              row_components.push(prepareComponent(item, 'right', row_index, col_index));\n            }\n          });\n\n          normalized.components = normalized.components.concat(row_components);\n        }\n        else {\n          if (row._layered) {\n            found.row = found.charts = true;\n            normalized.charts = row.items.slice();\n          }\n          else {\n            if (!found.row)\n              normalized.components.unshift(prepareComponent(row, 'top', row_index, 0));\n            else\n              normalized.components.push(prepareComponent(row, 'bottom', row_index, 0));\n          }\n        }\n      });\n    }\n    else {\n      // DEPRECATED\n      objectEach(config.charts, function(chart_options, id) {\n        normalized.charts.push(extend({id: id}, chart_options));\n      });\n\n      objectEach(config.components, function(component_options, id) {\n        normalized.components.push(extend({id: id}, component_options));\n      });\n    }\n\n    normalized.charts.forEach(extractData('charts'));\n    normalized.components.forEach(extractData('components'));\n\n    return normalized;\n\n    function prepareComponent(component, position, row_index, col_index) {\n      if (component && isFunction(component.position))\n        component.position(position);\n      else\n        component = extend({position: position}, component);\n\n      return defaults(component, {id: 'component-' + (row_index + 1) + '-' + (col_index + 1)});\n    }\n\n    function extractData(type) {\n      return function(item) {\n        if (item.data && !isFunction(item.data)) {\n          normalized.data[type][item.id] = item.data;\n          delete item.data;\n        }\n      };\n    }\n  },\n\n  _positionChartLayers: function() {\n    var position = this.chartPosition();\n    this.base.selectAll('.chart-layer')\n      .attr('transform', translate(position.left, position.top))\n      .attr('width', position.width)\n      .attr('height', position.height);\n  },\n\n  _positionComponents: function(layout) {\n    var chart = this.chartPosition();\n    var width = this._width();\n    var height = this._height();\n\n    layout.top.reduce(function(previous, part) {\n      var y = previous - part.offset;\n      setLayout(part.component, chart.left, y, {width: chart.width});\n\n      return y;\n    }, chart.top);\n\n    layout.right.reduce(function(previous, part, index, parts) {\n      var previousPart = parts[index - 1] || {offset: 0};\n      var x = previous + previousPart.offset;\n      setLayout(part.component, x, chart.top, {height: chart.height});\n\n      return x;\n    }, width - chart.right);\n\n    layout.bottom.reduce(function(previous, part, index, parts) {\n      var previousPart = parts[index - 1] || {offset: 0};\n      var y = previous + previousPart.offset;\n      setLayout(part.component, chart.left, y, {width: chart.width});\n\n      return y;\n    }, height - chart.bottom);\n\n    layout.left.reduce(function(previous, part) {\n      var x = previous - part.offset;\n      setLayout(part.component, x, chart.top, {height: chart.height});\n\n      return x;\n    }, chart.left);\n\n    function setLayout(component, x, y, options) {\n      if (component && isFunction(component.setLayout))\n        component.setLayout(x, y, options);\n    }\n  },\n\n  _positionByZIndex: function() {\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\n\n    // Sort by z-index\n    function setZIndex(layer) {\n      return {\n        layer: layer,\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\n      };\n    }\n    function sortZIndex(a, b) {\n      if (a.zIndex < b.zIndex)\n        return -1;\n      else if (a.zIndex > b.zIndex)\n        return 1;\n      else\n        return 0;\n    }\n    function getLayer(wrapped) {\n      return wrapped.layer;\n    }\n\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\n\n    // Move layers to z-index order\n    layers.forEach(function(layer) {\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\n        layer.parentNode.appendChild(layer);\n    });\n  },\n\n  _extractLayout: function(data) {\n    var overall_layout = {top: [], right: [], bottom: [], left: []};\n    this.components().forEach(function(component) {\n      if (component.skip_layout || !component.getLayout)\n        return;\n\n      var layout = component.getLayout(this.demux(component.id, data));\n      var position = layout && layout.position;\n\n      if (!contains(['top', 'right', 'bottom', 'left'], position))\n        return;\n\n      overall_layout[position].push({\n        offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\n        component: component\n      });\n    }, this);\n\n    return overall_layout;\n  }\n});\n\n// TODO Find better place for this\nexport function layered(items) {\n  if (!Array.isArray(items))\n    items = Array.prototype.slice.call(arguments);\n\n  return {_layered: true, items: items};\n}\n\nfunction findById(items, id) {\n  return find(items, function(item) {\n    return item.id == id;\n  });\n}\n","import d3 from 'd3';\r\nimport {\r\n  getParentData,\r\n  style,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling series data\r\n\r\n  @class Series\r\n  @namespace mixins\r\n*/\r\nvar Series = {\r\n  /**\r\n    Get key for given series data\r\n\r\n    @method seriesKey\r\n    @param {Any} d Series object with `key`\r\n    @return {Any}\r\n  */\r\n  seriesKey: di(function(chart, d) {\r\n    return d.key;\r\n  }),\r\n\r\n  /**\r\n    Get values for given series data\r\n\r\n    @method seriesValues\r\n    @param {Any} d Series object with `values` array\r\n    @return {Array}\r\n  */\r\n  seriesValues: di(function(chart, d, i) {\r\n    // Store seriesIndex on series\r\n    d.seriesIndex = i;\r\n    return d.values;\r\n  }),\r\n\r\n  /**\r\n    Get class for given series data\r\n\r\n    @method seriesClass\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {String}\r\n  */\r\n  seriesClass: di(function(chart, d, i) {\r\n    return 'chart-series chart-index-' + i + (d['class'] ? ' ' + d['class'] : '');\r\n  }),\r\n\r\n  /**\r\n    Get index for given data-point of series\r\n\r\n    @method seriesIndex\r\n    @param {Any} d\r\n    @param {Number} i\r\n  */\r\n  seriesIndex: di(function(chart, d, i) {\r\n    var series = chart.seriesData.call(this, d, i);\r\n    return series && series.seriesIndex || 0;\r\n  }),\r\n\r\n  /**\r\n    Get parent series data for given data-point\r\n\r\n    @method seriesData\r\n    @return {Any}\r\n  */\r\n  seriesData: di(function() {\r\n    return getParentData(this);\r\n  }),\r\n\r\n  /**\r\n    (di) Get style given series data or data-point\r\n    (Uses \"style\" object on `d`, if defined)\r\n\r\n    @method itemStyle\r\n    @param {Any} d\r\n    @param {Number} [i]\r\n    @param {Number} [j]\r\n    @return {String}\r\n  */\r\n  itemStyle: di(function(chart, d) {\r\n    return style(d.style) || null;\r\n  }),\r\n\r\n  /**\r\n    Get series count for chart\r\n\r\n    @method seriesCount\r\n    @return {Number}\r\n  */\r\n  seriesCount: function() {\r\n    var data = this.data();\r\n    return (data && isSeriesData(data)) ? data.length : 1;\r\n  },\r\n\r\n  /**\r\n    Extension of layer() that handles data-binding and layering for series data.\r\n\r\n    - Updates `dataBind` method to access underlying series values\r\n    - Creates group layer for each series in chart\r\n    - Should be used just like layer()\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(mixins.Series, {\r\n      initialize: function() {\r\n        this.seriesLayer('Circles', this.base, {\r\n          // Create group for each series on this.base\r\n          // and calls the following for each series item\r\n          // (entire layer is called twice: series-1 and series-2)\r\n\r\n          dataBind: function(data) {\r\n            // 1. data = [1, 2, 3]\r\n            // 2. data = [4, 5, 6]\r\n          },\r\n          insert: function() {\r\n            // Same as chart.layer\r\n            // (where \"this\" is series group layer)\r\n          },\r\n          events: {\r\n            // Same as chart.layer\r\n          }\r\n        });\r\n      }\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.draw([\r\n      {key: 'series-1', values: [1, 2, 3]},\r\n      {key: 'series-2', values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method seriesLayer\r\n    @param {String} name\r\n    @param {Selection} selection\r\n    @param {Object} options (`dataBind` and `insert` required)\r\n    @return {d3.chart.layer}\r\n  */\r\n  seriesLayer: function(name, selection, options) {\r\n    if (options && options.dataBind) {\r\n      var dataBind = options.dataBind;\r\n\r\n      options.dataBind = function(data) {\r\n        var chart = this.chart();\r\n        var series = this.selectAll('g')\r\n          .data(data, chart.seriesKey);\r\n\r\n        series.enter()\r\n          .append('g');\r\n\r\n        series\r\n          .attr('class', chart.seriesClass)\r\n          .attr('style', chart.itemStyle);\r\n\r\n        series.exit()\r\n          .remove();\r\n\r\n        series.chart = function() { return chart; };\r\n\r\n        return dataBind.call(series, chart.seriesValues);\r\n      };\r\n    }\r\n\r\n    return d3.chart().prototype.layer.call(this, name, selection, options);\r\n  },\r\n\r\n  // Ensure data is in series form\r\n  transform: function(data) {\r\n    return !isSeriesData(data) ? [{values: data}] : data;\r\n  }\r\n};\r\n\r\nexport default Series;\r\n","import {\r\n  property,\r\n  isSeriesData,\r\n  di\r\n} from '../helpers';\r\nimport {\r\n  compact,\r\n  pluck,\r\n  objectEach,\r\n  contains\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling common hover behavior that adds standard `onMouseEnter`, `onMouseMove`, and `onMouseLeave` handlers\r\n  and `getPoint` helper for adding helpful meta information to raw data point.\r\n\r\n  @class Hover\r\n  @namespace mixins\r\n*/\r\nvar Hover = {\r\n  initialize: function() {\r\n    this.on('attach', function() {\r\n      this.container.on('mouseenter', this.onMouseEnter.bind(this));\r\n      this.container.on('mousemove', this.onMouseMove.bind(this));\r\n      this.container.on('mouseleave', this.onMouseLeave.bind(this));\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Get point information for given data-point\r\n\r\n    @method getPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n    @return {key, series, d, meta {chart, i, j, x, y}}\r\n  */\r\n  getPoint: di(function(chart, d, i, j) {\r\n    var key = chart.key && chart.key.call(this, d, i, j);\r\n    var series = chart.seriesData && chart.seriesData.call(this, d, i, j) || {};\r\n\r\n    return {\r\n      key: (series.key || j) + '.' + (key || i),\r\n      series: series,\r\n      d: d,\r\n      meta: {\r\n        chart: chart,\r\n        i: i,\r\n        j: j,\r\n        x: chart.x && chart.x.call(this, d, i, j),\r\n        y: chart.y && chart.y.call(this, d, i, j)\r\n      }\r\n    };\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseenter:point when mouse enters data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseEnterPoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseEnterPoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseenter:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    Call to trigger mouseleave:point when mouse leaves data-point\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Bars', helpers.mixin(Hover, {\r\n      initialize: function() {\r\n        this.layer('bars', this.base, {\r\n          // dataBind...\r\n          insert: function() {\r\n            // Want to trigger enter/leave point\r\n            // when mouse enter/leaves bar (rect)\r\n            var chart = this.chart();\r\n            return this.append('rect')\r\n              .on('mouseenter', chart.mouseEnterPoint)\r\n              .on('mouseleave', chart.mouseLeavePoint);\r\n          }\r\n          // events...\r\n        })\r\n      }\r\n    }));\r\n    ```\r\n    @method mouseleavePoint\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @param {Number} j\r\n  */\r\n  mouseLeavePoint: di(function(chart, d, i, j) {\r\n    chart.container.trigger('mouseleave:point', chart.getPoint.call(this, d, i, j));\r\n  }),\r\n\r\n  /**\r\n    (Override) Called when mouse enters container\r\n\r\n    @method onMouseEnter\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseEnter: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse moves within container\r\n\r\n    @method onMouseMove\r\n    @param {Object} position (chart and container {x,y} position of mouse)\r\n    @param {Object} position.chart {x, y} position relative to chart origin\r\n    @param {Object} position.container {x, y} position relative to container origin\r\n  */\r\n  onMouseMove: function(/* position */) {},\r\n\r\n  /**\r\n    (Override) Called when mouse leaves container\r\n\r\n    @method onMouseLeave\r\n  */\r\n  onMouseLeave: function() {}\r\n};\r\n\r\n/**\r\n  Mixin for automatically triggering \"mouseenter:point\"/\"mouseleave:point\" for chart data points that are within given `hoverTolerance`.\r\n\r\n  @class HoverPoints\r\n  @namespace mixins\r\n*/\r\nvar HoverPoints = {\r\n  initialize: function() {\r\n    var points, tolerance, active;\r\n\r\n    this.on('draw', function() {\r\n      // Clear cache on draw\r\n      points = null;\r\n    });\r\n\r\n    this.on('attach', function() {\r\n      var update = function update(position) {\r\n        var closest = [];\r\n        if (position)\r\n          closest = getClosestPoints(points, position.chart, tolerance);\r\n\r\n        updateActive(active, closest, this.container);\r\n        active = closest;\r\n      }.bind(this);\r\n\r\n      this.container.on('mouseenter', function(position) {\r\n        if (!points)\r\n          points = getPoints(this, this.data());\r\n\r\n        tolerance = this.hoverTolerance();\r\n        update(position);\r\n      }.bind(this));\r\n\r\n      this.container.on('mousemove', update);\r\n      this.container.on('mouseleave', update);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Hover tolerance (in px) for calculating close points\r\n\r\n    @property hoverTolerance\r\n    @type Number\r\n    @default Infinity\r\n  */\r\n  hoverTolerance: property('hoverTolerance', {\r\n    default_value: Infinity\r\n  })\r\n};\r\n\r\nfunction getPoints(chart, data) {\r\n  if (data) {\r\n    if (!isSeriesData(data))\r\n      data = [{values: data}];\r\n\r\n    return data.map(function(series, j) {\r\n      return series.values.map(function(d, i) {\r\n        return chart.getPoint.call({_parent_data: series}, d, i, j);\r\n      }).sort(function(a, b) {\r\n        // Sort by x\r\n        return a.meta.x - b.meta.x;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction getClosestPoints(points, position, tolerance) {\r\n  return compact(points.map(function(series) {\r\n    function setDistance(point) {\r\n      point.distance = getDistance(point.meta, position);\r\n      return point;\r\n    }\r\n    function closePoints(point) {\r\n      return point.distance < tolerance;\r\n    }\r\n    function sortPoints(a, b) {\r\n      if (a.distance < b.distance)\r\n        return -1;\r\n      else if (a.distance > b.distance)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n\r\n    var by_distance = series.map(setDistance).filter(closePoints).sort(sortPoints);\r\n\r\n    return by_distance[0];\r\n  }));\r\n\r\n  function getDistance(a, b) {\r\n    return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\r\n  }\r\n}\r\n\r\nfunction updateActive(active, closest, container) {\r\n  var active_keys = pluck(active, 'key');\r\n  var closest_keys = pluck(closest, 'key');\r\n\r\n  objectEach(closest, function(point) {\r\n    if (contains(active_keys, point.key))\r\n      container.trigger('mousemove:point', point);\r\n    else\r\n      container.trigger('mouseenter:point', point);\r\n  });\r\n  objectEach(active, function(point) {\r\n    if (!contains(closest_keys, point.key))\r\n      container.trigger('mouseleave:point', point);\r\n  });\r\n}\r\n\r\nexport {\r\n  Hover as default,\r\n  HoverPoints\r\n};\r\n","import {\n  property\n} from '../helpers';\nimport {\n  isUndefined\n} from '../utils';\n\n/**\n  Mixin for handling common transition behaviors\n\n  @class Transition\n  @namespace mixins\n*/\nvar Transition = {\n  /**\n    Delay start of transition by specified milliseconds.\n\n    @property delay\n    @type Number|Function\n    @default (use container value, if available)\n  */\n  delay: property('delay', {\n    set: function(value) {\n      // type: 'Function' is desired, but default_value needs to be evaluated\n      // wrap value in function\n      return {\n        override: function() { return value; }\n      };\n    },\n    default_value: function() {\n      return this.container && this.container.delay && this.container.delay();\n    }\n  }),\n\n  /**\n    Transition duration in milliseconds.\n\n    @property duration\n    @type Number|Function\n    @default (use container value, if available)\n  */\n  duration: property('duration', {\n    set: function(value) {\n      return {\n        override: function() { return value; }\n      };\n    },\n    default_value: function() {\n      return this.container && this.container.delay && this.container.duration();\n    }\n  }),\n\n  /**\n    Transition ease function\n\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\n    - Note: arguments to pass to `d3.ease` are not supported\n\n    @property ease\n    @type String|Function\n    @default (use container value, if available)\n  */\n  ease: property('ease', {\n    set: function(value) {\n      return {\n        override: function() { return value; }\n      };\n    },\n    default_value: function() {\n      return this.container && this.container.delay && this.container.ease();\n    }\n  }),\n\n  /**\n    Setup delay, duration, and ease for transition\n\n    @example\n    ```js\n    d3.chart('Chart').extend('Custom', helpers.mixin(Transition, {\n      initialize: function() {\n        this.layer('circles', this.base, {\n          // ...\n          events: {\n            'merge:transition': function() {\n              // Set delay, duration, and ease from properties\n              this.chart().setupTransition(this);\n            }\n          }\n        });\n      }\n    }));\n    ```\n    @method setupTransition\n    @param {d3.selection} selection\n  */\n  setupTransition: function setupTransition(selection) {\n    var delay = this.delay();\n    var duration = this.duration();\n    var ease = this.ease();\n\n    if (!isUndefined(delay))\n      selection.delay(delay);\n    if (!isUndefined(duration))\n      selection.duration(duration);\n    if (!isUndefined(ease))\n      selection.ease(ease);\n  }\n};\n\nexport default Transition;\n","/**\r\n  Mixin to create standard layer to make extending charts straightforward.\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n    initialize: function() {\r\n      this.standardLayer('main', this.base.append('g'))\r\n      // dataBind, insert, events are defined on prototype\r\n    },\r\n\r\n    onDataBind: function(selection, data) {\r\n      // ...\r\n    },\r\n    onInsert: function(selection) {\r\n      // ...\r\n    },\r\n    onEnter: function(selection) {\r\n      // ...\r\n    },\r\n    onUpdateTransition: function(selection) {\r\n      // ...\r\n    },\r\n    // all d3.chart events are available: onMerge, onExit, ...\r\n  }));\r\n  ```\r\n  @class StandardLayer\r\n  @namespace mixins\r\n*/\r\nvar StandardLayer = {\r\n  /**\r\n    extension of `layer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardLayer('circles', this.base.append('g'));\r\n      }\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" layer\r\n    }));\r\n    ```\r\n    @method standardLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardLayer: function standardLayer(name, selection) {\r\n    return createLayer(this, 'layer', name, selection);\r\n  },\r\n\r\n  /**\r\n    extension of `seriesLayer()` that uses standard methods on prototype for extensibility.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(StandardLayer, {\r\n      initialize: function() {\r\n        this.standardSeriesLayer('circles', this.base.append('g'));\r\n      },\r\n\r\n      // onDataBind, onInsert, etc. work with \"circles\" seriesLayer\r\n    }));\r\n    ```\r\n    @method standardSeriesLayer\r\n    @param {String} name\r\n    @param {d3.selection} selection\r\n  */\r\n  standardSeriesLayer: function standardSeriesLayer(name, selection) {\r\n    return createLayer(this, 'series', name, selection);\r\n  },\r\n\r\n  /**\r\n    Called for standard layer's `dataBind`\r\n\r\n    @method onDataBind\r\n    @param {d3.selection} selection\r\n    @param {Any} data\r\n    @return {d3.selection}\r\n  */\r\n  onDataBind: function onDataBind(/* selection, data */) {},\r\n\r\n  /**\r\n    Called for standard layer's `insert`\r\n\r\n    @method onInsert\r\n    @param {d3.selection} selection\r\n    @return {d3.selection}\r\n  */\r\n  onInsert: function onInsert(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter']`\r\n\r\n    @method onEnter\r\n    @param {d3.selection} selection\r\n  */\r\n  onEnter: function onEnter(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['enter:transition']`\r\n\r\n    @method onEnterTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onEnterTransition: function onEnterTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdate\r\n    @param {d3.selection} selection\r\n  */\r\n  onUpdate: function onUpdate(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['update']`\r\n\r\n    @method onUpdateTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onUpdateTransition: function onUpdateTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge']`\r\n\r\n    @method onMerge\r\n    @param {d3.selection} selection\r\n  */\r\n  onMerge: function onMerge(/* selection */) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['merge:transition']`\r\n\r\n    @method onMergeTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onMergeTransition: function onMergeTransition(selection) {},\r\n\r\n  /**\r\n    Call for standard layer's `events['exit']`\r\n\r\n    @method onExit\r\n    @param {d3.selection} selection\r\n  */\r\n  onExit: function onExit(/* selection */) {}\r\n\r\n  /**\r\n    Call for standard layer's `events['exit:transition']`\r\n\r\n    @method onExitTransition\r\n    @param {d3.selection} selection\r\n  */\r\n  // onExitTransition: function onExitTransition(selection) {},\r\n};\r\n\r\nfunction createLayer(chart, type, name, selection) {\r\n  var layer = {\r\n    layer: 'layer',\r\n    series: 'seriesLayer'\r\n  }[type];\r\n\r\n  if (layer && chart[layer]) {\r\n    var events = {};\r\n    [\r\n      'enter',\r\n      'enter:transition',\r\n      'update',\r\n      'update:transition',\r\n      'merge',\r\n      'merge:transition',\r\n      'exit',\r\n      'exit:transition'\r\n    ].forEach(function(event) {\r\n      var method = 'on' + event.split(':').map(function capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }).join('');\r\n\r\n      // Only create events if chart method exists as empty transition events can cause unforeseen issues\r\n      if (chart[method]) {\r\n        events[event] = function() {\r\n          this.chart()[method](this);\r\n        };\r\n      }\r\n    });\r\n\r\n    return chart[layer](name, selection, {\r\n      dataBind: function(data) {\r\n        return this.chart().onDataBind(this, data);\r\n      },\r\n      insert: function() {\r\n        return this.chart().onInsert(this);\r\n      },\r\n      events: events\r\n    });\r\n  }\r\n}\r\n\r\nexport default StandardLayer;\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\n\r\n/**\r\n  TEMP Clear namespace from mixins\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nexport default d3.chart('Base', {\r\n  initialize: function(options) {\r\n    // Bind all di-functions to this chart\r\n    bindAllDi(this);\r\n\r\n    if (options)\r\n      this.options(options);\r\n  },\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property('data'),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property('a'),\r\n      b: property('b', {\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property('options', {\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  },\r\n\r\n  // Store fully-transformed data for reference\r\n  // (Base is last transform to be called, so stored data has been fully transformed)\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    this.data(data);\r\n    return data;\r\n  },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    this.trigger('before:draw', data);\r\n    d3.chart().prototype.draw.apply(this, arguments);\r\n    this.trigger('draw', data);\r\n  }\r\n});\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property('centered', {\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Chart', {}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: false` and the static `layer_type: 'Chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Component', {\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property('position', {\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property('width', {\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property('height', {\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property('centered', {\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      if (options.height)\r\n        y += (options.height - this.height()) / 2;\r\n      if (options.width)\r\n        x += (options.width - this.width()) / 2;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nexport default Component.extend('Overlay', {\r\n  initialize: function() {\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property('x', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property('y', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property('hidden', {\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property('style', {\r\n    default_value: function() {\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        transform: translate(this.x() + 'px', this.y() + 'px')\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n","import {\r\n  extend,\r\n  isUndefined,\r\n  isObject,\r\n  valueOrDefault\r\n} from '../utils';\r\nimport {\r\n  property,\r\n  isSeriesData,\r\n  createScale,\r\n  di\r\n} from '../helpers';\r\n\r\n/**\r\n  Mixin for handling XY data\r\n\r\n  @class XY\r\n  @namespace mixins\r\n*/\r\nvar XY = {\r\n  initialize: function() {\r\n    // Set scale ranges once chart is ready to be rendered\r\n    this.on('before:draw', this.setScales.bind(this));\r\n  },\r\n\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    // Transform series data from values to x,y\r\n    if (isSeriesData(data)) {\r\n      data = data.map(function(series) {\r\n        return extend({}, series, {\r\n          values: series.values.map(normalizeData)\r\n        });\r\n      });\r\n    }\r\n    else if (Array.isArray(data)) {\r\n      data = data.map(normalizeData);\r\n    }\r\n\r\n    return data;\r\n\r\n    function normalizeData(point, index) {\r\n      if (!isObject(point))\r\n        point = {x: index, y: point};\r\n      else if (!Array.isArray(point) && isUndefined(point.x))\r\n        point.x = index;\r\n\r\n      return point;\r\n    }\r\n  },\r\n\r\n  /**\r\n    Get/set x-scale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  xScale: property('xScale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setXScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultXScale();\r\n        this.setXScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set yscale with `d3.scale` or with object (uses `helpers.createScale`)\r\n\r\n    @property xScale\r\n    @type Object|d3.scale\r\n  */\r\n  yScale: property('yScale', {\r\n    type: 'Function',\r\n    set: function(value) {\r\n      var scale = createScale(value);\r\n      this.setYScaleRange(scale);\r\n\r\n      return {\r\n        override: scale\r\n      };\r\n    },\r\n    get: function(scale) {\r\n      if (!scale) {\r\n        scale = this.getDefaultYScale();\r\n        this.setYScaleRange(scale);\r\n      }\r\n\r\n      return scale;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Key on data object for x-value\r\n\r\n    @property xKey\r\n    @type String\r\n    @default 'x'\r\n  */\r\n  xKey: property('xKey', {\r\n    default_value: 'x'\r\n  }),\r\n\r\n  /**\r\n    Key on data object for y-value\r\n\r\n    @property yKey\r\n    @type String\r\n    @default 'y'\r\n  */\r\n  yKey: property('yKey', {\r\n    default_value: 'y'\r\n  }),\r\n\r\n  /**\r\n    Get scaled x-value for given data-point\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y-value for given data-point\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get key for data-point. Looks for \"key\" on `d` first, otherwise uses x-value.\r\n\r\n    @method key\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Any}\r\n  */\r\n  key: di(function(chart, d, i) {\r\n    return valueOrDefault(d.key, chart.xValue.call(this, d, i));\r\n  }),\r\n\r\n  /**\r\n    Get scaled `x = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled `y = 0` value\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get x-value for data-point. Checks for `xKey()` on `d` first, otherwise uses `d[0]`.\r\n\r\n    @example\r\n    ```js\r\n    xValue({x: 10, y: 20}); // -> 10\r\n    xValue([10, 20]); // -> 10\r\n    ```\r\n    @method xValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  xValue: di(function(chart, d) {\r\n    var key = chart.xKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[0];\r\n  }),\r\n\r\n  /**\r\n    Get y-value for data-point. Checks for `yKey()` on `d` first, otherwise uses `d[1]`.\r\n\r\n    @example\r\n    ```js\r\n    yValue({x: 10, y: 20}); // -> 20\r\n    yValue([10, 20]); // -> 20\r\n    ```\r\n    @method yValue\r\n    @param {Any} d\r\n    @return {Any}\r\n  */\r\n  yValue: di(function(chart, d) {\r\n    var key = chart.yKey();\r\n    if (d)\r\n      return key in d ? d[key] : d[1];\r\n  }),\r\n\r\n  /**\r\n    Set x- and y-scale ranges (using `setXScaleRange` and `setYScaleRange`)\r\n\r\n    @method setScales\r\n  */\r\n  setScales: function() {\r\n    this.setXScaleRange(this.xScale());\r\n    this.setYScaleRange(this.yScale());\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([0, this.width()]);\r\n  },\r\n\r\n  /**\r\n    Set range(height, 0) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Get default x-scale: `{data: this.data(), key: 'x'}`\r\n\r\n    @method getDefaultXScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'x'\r\n    });\r\n  },\r\n\r\n  /**\r\n    Get default y-scale: `{data: this.data(), key: 'y'}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultYScale: function() {\r\n    return createScale({\r\n      data: this.data(),\r\n      key: 'y'\r\n    });\r\n  }\r\n};\r\n\r\nexport default XY;\r\n","import { createScale } from '../helpers';\r\nimport { extend } from '../utils';\r\nimport XY from './xy';\r\n\r\n/**\r\n  Mixin for charts of centered key,value data (x: index, y: value, key)\r\n\r\n  @class XYValues\r\n  @namespace mixins\r\n  @extends XY\r\n*/\r\nvar XYValues = extend({}, XY, {\r\n  /**\r\n    Determine width of data-point when displayed adjacent\r\n\r\n    @method adjacentWidth\r\n    @return {Number}\r\n  */\r\n  adjacentWidth: function() {\r\n    var series_count = this.seriesCount ? this.seriesCount() : 1;\r\n    return this.layeredWidth() / series_count;\r\n  },\r\n\r\n  /**\r\n    Determine layered width (width of group for adjacent)\r\n\r\n    @method layeredWidth\r\n    @return {Number}\r\n  */\r\n  layeredWidth: function() {\r\n    var range_band = this.xScale() && this.xScale().rangeBand && this.xScale().rangeBand();\r\n    var width = isFinite(range_band) ? range_band : 0;\r\n\r\n    return width;\r\n  },\r\n\r\n  /**\r\n    Determine item width based on series display type (adjacent or layered)\r\n\r\n    @method itemWidth\r\n    @return {Number}\r\n  */\r\n  itemWidth: function() {\r\n    var scale = this.xScale();\r\n    return scale && scale.width ? scale.width() : this.layeredWidth();\r\n  },\r\n\r\n  // Override default x-scale to use ordinal type\r\n  /**\r\n    Override default x-scale to use ordinal type: `{type: 'ordinal', data: this.data(), key: 'y', centered: true}`\r\n\r\n    @method getDefaultYScale\r\n    @return {d3.scale}\r\n  */\r\n  getDefaultXScale: function() {\r\n    return createScale({\r\n      type: 'ordinal',\r\n      data: this.data(),\r\n      key: 'x',\r\n      centered: true\r\n    });\r\n  }\r\n});\r\n\r\nexport default XYValues;\r\n","import { di } from '../helpers';\r\n\r\n/**\r\n  Mixin for inverting XY calculations with x vertical, increasing bottom-to-top and y horizontal, increasing left-to-right\r\n\r\n  @class XYInverted\r\n  @namespace mixins\r\n*/\r\nvar XYInverted = {\r\n  /**\r\n    Get x-value for plotting (scaled y-value)\r\n\r\n    @method x\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  x: di(function(chart, d, i) {\r\n    var value = chart.yValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.yScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get y-value for plotting (scaled x-value)\r\n\r\n    @method y\r\n    @param {Any} d\r\n    @param {Number} i\r\n    @return {Number}\r\n  */\r\n  y: di(function(chart, d, i) {\r\n    var value = chart.xValue.call(this, d, i);\r\n    var series_index = chart.seriesIndex && chart.seriesIndex.call(this, d, i) || 0;\r\n\r\n    return parseFloat(chart.xScale()(value, series_index));\r\n  }),\r\n\r\n  /**\r\n    Get scaled y = 0 value (along x-axis)\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  x0: function() {\r\n    return parseFloat(this.yScale()(0));\r\n  },\r\n\r\n  /**\r\n    Get scaled x = 0 value (along y-axis)\r\n\r\n    @method x0\r\n    @return {Number}\r\n  */\r\n  y0: function() {\r\n    return parseFloat(this.xScale()(0));\r\n  },\r\n\r\n  /**\r\n    Set range (height, 0) for given x-scale\r\n\r\n    @method setXScaleRange\r\n    @param {d3.scale} x_scale\r\n  */\r\n  setXScaleRange: function(x_scale) {\r\n    x_scale.range([this.height(), 0]);\r\n  },\r\n\r\n  /**\r\n    Set range (0, width) for given y-scale\r\n\r\n    @method setYScaleRange\r\n    @param {d3.scale} y_scale\r\n  */\r\n  setYScaleRange: function(y_scale) {\r\n    y_scale.range([0, this.width()]);\r\n  }\r\n};\r\n\r\nexport default XYInverted;\r\n","import d3 from 'd3';\r\nimport { property } from '../helpers';\r\nimport {\r\n  extend,\r\n  defaults,\r\n  isBoolean\r\n} from '../utils';\r\n\r\n/**\r\n  Mixin for handling labels in charts\r\n\r\n  @class Labels\r\n  @namespace mixins\r\n*/\r\nvar Labels = {\r\n  /**\r\n    Call during chart initialization to add labels to chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      initialize: function() {\r\n        // this.layer()...\r\n\r\n        // Attach labels layer\r\n        this.attachLabels();\r\n      }\r\n    }));\r\n    ```\r\n    @method attachLabels\r\n  */\r\n  attachLabels: function() {\r\n    var options = this.labels();\r\n    options.parent = this;\r\n\r\n    var LabelsClass = d3.chart(options.type);\r\n    var base = this.base.append('g').attr('class', 'chart-labels');\r\n    var labels = this._labels = new LabelsClass(base, options);\r\n\r\n    // Proxy x and y to parent chart\r\n    this.proxyLabelMethods.forEach(function(method) {\r\n      labels[method] = this[method];\r\n    }, this);\r\n\r\n    this.on('draw', function(data) {\r\n      options = this.labels();\r\n      options.parent = this;\r\n\r\n      labels.options(options);\r\n\r\n      if (options.display !== false)\r\n        labels.draw(options.data || data);\r\n      else\r\n        labels.draw([]);\r\n    }.bind(this));\r\n  },\r\n\r\n  /**\r\n    Options passed to labels chart\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('Custom', helpers.mixin(Labels, {\r\n      // ...\r\n    }));\r\n\r\n    // ...\r\n\r\n    chart.labels(true); // -> display labels with defaults\r\n    chart.labels(false); // -> hide labels\r\n    chart.labels({offset: 10}); // -> pass options to labels chart\r\n\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        return {\r\n          charts: {\r\n            custom: {labels: {offset: 10}}\r\n          }\r\n        };\r\n      });\r\n    ```\r\n    @property labels\r\n    @type Object\r\n  */\r\n  labels: property('labels', {\r\n    get: function(value) {\r\n      if (isBoolean(value))\r\n        value = {display: value};\r\n      else if (!value)\r\n        value = {display: false};\r\n\r\n      return defaults({}, value, {\r\n        type: 'Labels'\r\n      });\r\n    }\r\n  }),\r\n\r\n  // Array of methods to proxy on labels chart\r\n  proxyLabelMethods: []\r\n};\r\n\r\n/**\r\n  Mixin for handling labels in XY charts\r\n  (proxies `x` and `y` to properly place labels for XY charts)\r\n\r\n  @class LabelsXY\r\n  @namespace mixins\r\n  @extends Labels\r\n*/\r\nvar LabelsXY = extend({}, Labels, {\r\n  proxyLabelMethods: ['x', 'y']\r\n});\r\n\r\nexport {\r\n  Labels as default,\r\n  LabelsXY\r\n};\r\n","import Series from './series';\r\nimport XY from './xy';\r\nimport XYValues from './xy-values';\r\nimport XYInverted from './xy-inverted';\r\nimport Labels, { LabelsXY } from './labels';\r\nimport Hover, { HoverPoints } from './hover';\r\nimport Transition from './transition';\r\nimport StandardLayer from './standard-layer';\r\n\r\nvar mixins = {\r\n  Series: Series,\r\n  XY: XY,\r\n  XYValues: XYValues,\r\n  XYInverted: XYInverted,\r\n  Labels: Labels,\r\n  LabelsXY: LabelsXY,\r\n  Hover: Hover,\r\n  HoverPoints: HoverPoints,\r\n  Transition: Transition,\r\n  StandardLayer: StandardLayer,\r\n\r\n  // DEPRECATED: renamed to XYInverted\r\n  InvertedXY: XYInverted,\r\n  // DEPRECATED: renamed to LabelsXY\r\n  XYLabels: LabelsXY\r\n};\r\n\r\nexport {\r\n  mixins as default,\r\n  Series,\r\n  XY,\r\n  XYValues,\r\n  XYInverted,\r\n  Labels,\r\n  LabelsXY,\r\n  Hover,\r\n  HoverPoints,\r\n  Transition,\r\n  StandardLayer\r\n};\r\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nimport mixins from './src/mixins';\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered,\r\n\r\n  mixins: mixins\r\n};\r\n\r\nexport default d3c;\r\n"],"sourceRoot":"/source/"}