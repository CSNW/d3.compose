{"version":3,"sources":["d3.compose.min.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers/index.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/index.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","valueOrDefault","default_value","property","name","options","prop_key","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","isArray","mixed","constructor","initialize","args","forEach","extension","transform","reduceRight","bind","stack","elements","direction","origin","element_dimensions","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","id","layered","items","_layered","findById","Int8Array","utils","helpers","style","Base","isProperty","unset","base","draw","trigger","Chart","z_index","layer_type","Component","position","skip_layout","prepareLayout","getLayout","setLayout","Overlay","hidden","display","getAbsolutePosition","container","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","rawData","tagName","append","classed","attachHoverListeners","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","charts","chart_options","_attachItems","components","component_options","config","_prepareConfig","_updateDimensions","layout","redraw","demux","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","chart_position","parts","part","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","was_inside","on","getBoundingClientRect","scrollY","is_inside","attach","detach","remove","_attached","_positionComponents","_positionByZIndex","remove_ids","remove_id","Item","layer_options","createLayer","component","overlay","prepareComponent","row_index","col_index","extractData","normalized","found","row","row_components","chart_index","unshift","selectAll","index","previousPart","setZIndex","layer","zIndex","parseInt","sortZIndex","getLayer","layers","sort","appendChild","overall_layout","compose","VERSION","_index"],"mappings":"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","file":"d3.compose.min.js","sourcesContent":[null,"// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\r\n  isFunction,\r\n  isUndefined,\r\n  valueOrDefault\r\n} from '../utils';\r\n\r\n/**\r\n  Helper for creating properties for charts/components\r\n\r\n  @example\r\n  ```javascript\r\n  var Custom = d3.chart('Chart').extend('Custom', {\r\n    // Create property that's stored internally as 'simple'\r\n    simple: property('simple')\r\n  });\r\n  var custom; // = new Custom(...);\r\n\r\n  // set\r\n  custom.simple('Howdy');\r\n\r\n  // get\r\n  console.log(custom.simple()); // -> 'Howdy'\r\n\r\n  // Advanced\r\n  // --------\r\n  // Default values:\r\n  Custom.prototype.message = property('message', {\r\n    default_value: 'Howdy!'\r\n  });\r\n\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n  custom.message('Goodbye');\r\n  console.log(custom.message()); // -> 'Goodbye'\r\n\r\n  // Set to undefined to reset to default value\r\n  custom.message(undefined);\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n\r\n  // Custom getter:\r\n  Custom.prototype.exclaimed = property('exclaimed', {\r\n    get: function(value) {\r\n      // Value is the underlying set value\r\n      return value + '!';\r\n    }\r\n  });\r\n\r\n  custom.exclaimed('Howdy');\r\n  console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n  // Custom setter:\r\n  Custom.prototype.feeling = property('feeling', {\r\n    set: function(value, previous) {\r\n      if (value == 'Hate') {\r\n        // To override value, return Object with override specified\r\n        return {\r\n          override: 'Love',\r\n\r\n          // To do something after override, use after callback\r\n          after: function() {\r\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    custom.feeling('Hate'); // -> 'After: Love'\r\n    console.log(custom.feeling()); // -> 'Love'\r\n  });\r\n  ```\r\n  @method property\r\n  @for helpers\r\n  @param {String} name of stored property\r\n  @param {Object} [options]\r\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`)\r\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n  @param {String} [options.type] `get` is evaluated by default, use `\"Function\"` to skip evaluation\r\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n  @param {String} [options.prop_key='__properties'] underlying key on object to store property\r\n  @return {Function} `()`: get, `(value)`: set\r\n*/\r\nexport default function property(name, options) {\r\n  options = options || {};\r\n  var prop_key = options.prop_key || '__properties';\r\n\r\n  var property = function(value) {//eslint-disable-line no-shadow\r\n    var properties = this[prop_key] = this[prop_key] || {};\r\n    var context = valueOrDefault(property.context, this);\r\n\r\n    if (arguments.length)\r\n      return set.call(this);\r\n    else\r\n      return get.call(this);\r\n\r\n    function get() {\r\n      value = valueOrDefault(properties[name], property.default_value);\r\n\r\n      // Unwrap value if its type is not a function\r\n      if (isFunction(value) && options.type != 'Function')\r\n        value = value.call(this);\r\n\r\n      return isFunction(options.get) ? options.get.call(context, value) : value;\r\n    }\r\n\r\n    function set() {\r\n      // Validate\r\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(this, value))\r\n        throw new Error('Invalid value for ' + name + ': ' + JSON.stringify(value));\r\n\r\n      property.previous = properties[name];\r\n      properties[name] = value;\r\n\r\n      if (isFunction(options.set) && !isUndefined(value)) {\r\n        var response = options.set.call(context, value, property.previous);\r\n\r\n        if (response && 'override' in response)\r\n          properties[name] = response.override;\r\n        if (response && isFunction(response.after))\r\n          response.after.call(context, properties[name]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // For checking if function is a property\r\n  property.is_property = true;\r\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n  property.default_value = options.default_value;\r\n  property.context = options.context;\r\n\r\n  return property;\r\n}\r\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector\r\n\r\n  @method dimensions\r\n  @for helpers\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from './index';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05]\r\n  });\r\n  ```\r\n  @method createScale\r\n  @for helpers\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import { extend } from '../utils';\r\n\r\n/**\r\n  Mix prototypes into single combined prototype for chart/component\r\n\r\n  Designed specifically to work with d3.chart:\r\n\r\n  - transform is called from last to first\r\n  - initialize is called from first to last\r\n  - remaining are overriden from first to last\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  d3.chart('Chart').extend('Custom', mixin(a, b, c, {\r\n    initialize: function() {\r\n      // d\r\n    },\r\n    transform: function() {\r\n      // d\r\n    }\r\n  }));\r\n\r\n  // initialize: Chart -> b -> d\r\n  // transform: d -> a -> Chart\r\n  ```\r\n  @method mixin\r\n  @for helpers\r\n  @param {Array|Object...} mixins... Array of mixins or mixins as separate arguments\r\n  @return {Object}\r\n*/\r\nexport default function mixin(mixins) {\r\n  mixins = Array.isArray(mixins) ? mixins : Array.prototype.slice.call(arguments);\r\n  var mixed = extend.apply(null, [{}].concat(mixins));\r\n\r\n  // Don't mixin constructor with prototype\r\n  delete mixed.constructor;\r\n\r\n  if (mixed.initialize) {\r\n    mixed.initialize = function initialize() {\r\n      var args = Array.prototype.slice.call(arguments);\r\n\r\n      mixins.forEach(function(extension) {\r\n        if (extension.initialize)\r\n          extension.initialize.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n  if (mixed.transform) {\r\n    mixed.transform = function transform(data) {\r\n      return mixins.reduceRight(function(memo, extension) {\r\n        if (extension && extension.transform)\r\n          return extension.transform.call(this, memo);\r\n        else\r\n          return memo;\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return mixed;\r\n}\r\n","import { translate } from './index';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack)\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack.bind(this, {\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n*/\r\nexport default function stack(options, elements) {\r\n  if (options && !elements) {\r\n    elements = options;\r\n    options = {\r\n      direction: 'vertical',\r\n      origin: 'top',\r\n      padding: 0\r\n    };\r\n  }\r\n\r\n  function padding(d, i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  if (elements && elements.attr) {\r\n    var previous = 0;\r\n    elements\r\n      .attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var x = 0;\r\n        var y = 0;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          if (!(options.origin == 'left' || options.origin == 'right'))\r\n            options.origin = 'left';\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(d, i);\r\n          else\r\n            x = previous + element_dimensions.width + padding(d, i);\r\n\r\n          previous = previous + element_dimensions.width + padding(d, i);\r\n        }\r\n        else {\r\n          if (!(options.origin == 'top' || options.origin == 'bottom'))\r\n            options.origin = 'top';\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(d, i);\r\n          else\r\n            y = previous + element_dimensions.height + padding(d, i);\r\n\r\n          previous = previous + element_dimensions.height + padding(d, i);\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n  }\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  defaults,\r\n  extend,\r\n  first,\r\n  isNumber,\r\n  isObject,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './property';\r\nimport dimensions from './dimensions';\r\nimport createScale from './create-scale';\r\nimport mixin from './mixin';\r\nimport stack from './stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Get formatted margins for varying input\r\n\r\n  @method getMargins\r\n  @example\r\n  ```js\r\n  getMargins(4);\r\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n  getMargins({top: 20}, {top: 8, bottom: 8});\r\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n  ```\r\n  @param {Number|Object} margins\r\n  @param {Object} default_margins\r\n  @return {Object}\r\n*/\r\nexport function getMargins(margins, default_margins) {\r\n  if (isNumber(margins))\r\n    return {top: margins, right: margins, bottom: margins, left: margins};\r\n  else\r\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  getMargins: getMargins,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  contains,\r\n  find,\r\n  defaults,\r\n  extend,\r\n  objectEach,\r\n  difference,\r\n  pluck\r\n} from './utils';\r\nimport {\r\n  getMargins,\r\n  property,\r\n  style,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n/**\r\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n  @example\r\n  ```html\r\n  <div id=\"#chart\"></div>\r\n  ```\r\n  ```js\r\n  var chart = d3.select('#chart')\r\n    .chart('Compose', function(data) {\r\n      // Process data...\r\n\r\n      // Create shared scales\r\n      var scales = {\r\n        x: {data: data.input, key: 'x', adjacent: true},\r\n        y: {data: data.input, key: 'y'},\r\n        y2: {data: data.output, key: 'y'}\r\n      };\r\n\r\n      return {\r\n        charts: {\r\n          input: {\r\n            type: 'Bars', data: data.input, xScale: scales.x, yScale: scales.y\r\n          },\r\n          output: {\r\n            type: 'Lines', data: data.output, xScale: scales.x, yScale: scales.y2}\r\n          }\r\n        },\r\n        components: {\r\n          'axis.y': {\r\n            type: 'Axis', scale: scales.y, position: 'left'\r\n          },\r\n          'axis.y2': {\r\n            type: 'Axis', scale: scales.y2, position: 'right'\r\n          }\r\n          title: {\r\n            type: 'Title', position: 'top', text: 'd3.compose'\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n  chart.draw({input: [...], output: [...]});\r\n  ```\r\n  @class Compose\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Compose', {\r\n  initialize: function() {\r\n    // Overriding transform in init jumps it to the top of the transform cascade\r\n    // Therefore, data coming in hasn't been transformed and is raw\r\n    // (Save raw data for redraw)\r\n    this.transform = function(data) {\r\n      this.rawData(data);\r\n      return data;\r\n    };\r\n\r\n    // Responsive svg based on the following approach (embedded + padding hack)\r\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n    // (not enabled if selection is svg)\r\n    if (this.base.node().tagName != 'svg') {\r\n      this.container = this.base.append('div')\r\n        .attr('class', 'chart-compose-container');\r\n\r\n      this.base = this.container.append('svg')\r\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n        .attr('version', '1.1')\r\n        .attr('class', 'chart-compose');\r\n    }\r\n    else {\r\n      this.base.classed('chart-compose', true);\r\n    }\r\n\r\n    this.attachHoverListeners();\r\n  },\r\n\r\n  /**\r\n    Get/set the options `object/function` for the chart that takes `data` and\r\n    returns `{charts, components}` for composing child charts and components.\r\n\r\n    @example\r\n    ```js\r\n    // get\r\n    chart.options();\r\n\r\n    // set (static)\r\n    chart.options({\r\n      charts: {},\r\n      components: {}\r\n    });\r\n\r\n    // set (dynamic, takes data and returns options)\r\n    chart.options(function(data) {\r\n      // process data...\r\n\r\n      return {\r\n        charts: {},\r\n        components: {}\r\n      };\r\n    });\r\n\r\n    // Set directly from d3.chart creation\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n    ```\r\n    @property options\r\n    @type Function|Object\r\n  */\r\n  options: property('options', {\r\n    default_value: function() {},\r\n    type: 'Function',\r\n    set: function(options) {\r\n      // If options is plain object,\r\n      // return from generic options function\r\n      if (!isFunction(options)) {\r\n        return {\r\n          override: function() {\r\n            return options;\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Store raw data for container before it has been transformed\r\n  rawData: property('rawData'),\r\n\r\n  /**\r\n    Margins between edge of container and components/chart\r\n\r\n    @example\r\n    ```js\r\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n    ```\r\n    @property margins\r\n    @type Object {top, right, bottom, left}\r\n    @default {top: 10, right: 10, bottom: 10, left: 10}\r\n  */\r\n  margins: property('margins', {\r\n    default_value: default_compose_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_compose_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  // Chart position\r\n  chartPosition: property('chartPosition', {\r\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n    set: function(values) {\r\n      return {\r\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    },\r\n    get: function(values) {\r\n      values.width = this._width() - values.right - values.left;\r\n      values.height = this._height() - values.bottom - values.top;\r\n\r\n      return values;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set overall width of chart\r\n\r\n    @property width\r\n    @type Number\r\n  */\r\n  width: property('width', {\r\n    default_value: null\r\n  }),\r\n\r\n  /**\r\n    Get/set overall height of chart\r\n\r\n    @property height\r\n    @type Number\r\n  */\r\n  height: property('height', {\r\n    default_value: null\r\n  }),\r\n\r\n  _width: function() {\r\n    var width = this.width();\r\n    return width != null ? width : Base.prototype.width.call(this);\r\n  },\r\n  _height: function() {\r\n    var height = this.height();\r\n    return height != null ? height : Base.prototype.height.call(this);\r\n  },\r\n\r\n  /**\r\n    Enable responsive container + viewBox so that chart scales to fill width\r\n    (only works if selection is not an svg)\r\n\r\n    @property responsive\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  responsive: property('responsive', {\r\n    default_value: true\r\n  }),\r\n\r\n  // Set svg viewBox attribute\r\n  viewBox: property('viewBox', {\r\n    default_value: function() {\r\n      if (this.responsive() && this.width() && this.height())\r\n        return '0 0 ' + this.width() + ' ' + this.height();\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set svg preserveAspectRatio attribute\r\n  preserveAspectRatio: property('preserveAspectRatio', {\r\n    default_value: function() {\r\n      if (this.responsive())\r\n        return 'xMidYMid meet';\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set container style\r\n  containerStyle: property('containerStyle', {\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        var aspect_ratio = 1;\r\n        if (this.width() && this.height())\r\n          aspect_ratio = this.height() / this.width();\r\n\r\n        return style({\r\n          width: '100%',\r\n          height: 0,\r\n          'padding-top': (aspect_ratio * 100) + '%',\r\n          position: 'relative'\r\n        });\r\n      }\r\n      else {\r\n        return style({position: 'relative'});\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Set base style\r\n  baseStyle: property('baseStyle', {\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        return style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0\r\n        });\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Set charts from options or get chart instances.\r\n    Each chart should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n    @example\r\n    ```js\r\n    chart.charts([\r\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n    ]);\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property('charts', {\r\n    set: function(chart_options, charts) {\r\n      // Store actual charts rather than options\r\n      return {\r\n        override: this._attachItems(chart_options, charts, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Set components from options or get components instances.\r\n    Each component should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n    @example\r\n    ```js\r\n    chart.components([\r\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n      {id: 'title', type: 'Title'} // options to pass to Title component\r\n    ])\r\n    ```\r\n    @property components\r\n    @type Array\r\n  */\r\n  components: property('components', {\r\n    set: function(component_options, components) {\r\n      // Store actual components rather than options\r\n      return {\r\n        override: this._attachItems(component_options, components, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Draw chart with given data\r\n\r\n    @example\r\n    ```js\r\n    var chart = d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n\r\n    chart.draw([1, 2, 3]);\r\n\r\n    chart.draw({values: [1, 2, 3]});\r\n\r\n    chart.draw([\r\n      {values: [1, 2, 3]},\r\n      {values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method draw\r\n    @param {Any} data\r\n  */\r\n  draw: function(data) {\r\n    var config = this._prepareConfig(this.options(), data);\r\n\r\n    // Set charts and components from config\r\n    if (config.charts)\r\n      this.charts(config.charts);\r\n    if (config.components)\r\n      this.components(config.components);\r\n\r\n    // Add config data\r\n    data = {\r\n      original: data,\r\n      config: config.data\r\n    };\r\n    this.data(data);\r\n\r\n    this._updateDimensions();\r\n\r\n    // Layout components\r\n    this.layout(data);\r\n\r\n    // Full draw now that everything has been laid out\r\n    d3.chart().prototype.draw.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Redraw chart with current data\r\n\r\n    @method redraw\r\n  */\r\n  redraw: function() {\r\n    if (this.rawData())\r\n      this.draw(this.rawData().original);\r\n  },\r\n\r\n  demux: function(name, data) {\r\n    if (!data || !data.config || !data.original)\r\n      return data;\r\n\r\n    if (findById(this.charts(), name) && data.config.charts[name])\r\n      return data.config.charts[name];\r\n    else if (findById(this.components(), name) && data.config.components[name])\r\n      return data.config.components[name];\r\n    else\r\n      return data.original;\r\n  },\r\n\r\n  // Create chart layer (for laying out charts)\r\n  createChartLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create component layer\r\n  createComponentLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-component-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create overlay layer\r\n  createOverlayLayer: function() {\r\n    if (!this.container)\r\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n    return this.container.append('div')\r\n      .attr('class', 'chart-overlay-layer');\r\n  },\r\n\r\n  // Layout components and charts for given data\r\n  layout: function(data) {\r\n    // 1. Place chart layers\r\n    this._positionChartLayers();\r\n\r\n    // 2. Extract layout from components\r\n    var layout = this._extractLayout(data);\r\n\r\n    // 3. Set chart position from layout\r\n    var chart_position = extend({}, this.margins());\r\n    objectEach(layout, function(parts, key) {\r\n      parts.forEach(function(part) {\r\n        chart_position[key] += part.offset || 0;\r\n      });\r\n    });\r\n    this.chartPosition(chart_position);\r\n\r\n    // 4. Position layers with layout\r\n    this.positionLayers(layout);\r\n  },\r\n\r\n  attachHoverListeners: function() {\r\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n    // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n    var trigger = this.trigger.bind(this);\r\n    var chartPosition = this.chartPosition.bind(this);\r\n    var container = this.container || this.base;\r\n    var base = this.base.node();\r\n    var chart_position, bounds, was_inside;\r\n\r\n    container.on('mouseenter', function() {\r\n      // Calculate chart position and bounds on enter and cache during move\r\n      chart_position = chartPosition();\r\n      bounds = extend({}, base.getBoundingClientRect());\r\n      bounds.top += window.scrollY;\r\n      bounds.bottom += window.scrollY;\r\n\r\n      was_inside = inside(bounds);\r\n      if (was_inside)\r\n        enter();\r\n    });\r\n    container.on('mousemove', function() {\r\n      var is_inside = inside(bounds);\r\n      if (was_inside && is_inside)\r\n        move();\r\n      else if (was_inside)\r\n        leave();\r\n      else if (is_inside)\r\n        enter();\r\n\r\n      was_inside = is_inside;\r\n    });\r\n    container.on('mouseleave', function() {\r\n      if (was_inside) {\r\n        was_inside = false;\r\n        leave();\r\n      }\r\n    });\r\n\r\n    function inside() {\r\n      var mouse = d3.mouse(document.documentElement);\r\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n    }\r\n    function enter() {\r\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n    }\r\n    function move() {\r\n      trigger('mousemove', translateToXY(d3.mouse(base)));\r\n    }\r\n    function leave() {\r\n      trigger('mouseleave');\r\n    }\r\n\r\n    function translateToXY(coordinates) {\r\n      var x = coordinates[0];\r\n      var y = coordinates[1];\r\n      var chart_x = x - chart_position.left;\r\n      var chart_y = y - chart_position.top;\r\n\r\n      // Set at chart bounds if outside of chart\r\n      if (x > (chart_position.left + chart_position.width))\r\n        chart_x = chart_position.width;\r\n      else if (x < chart_position.left)\r\n        chart_x = 0;\r\n\r\n      if (y > (chart_position.top + chart_position.height))\r\n        chart_y = chart_position.height;\r\n      else if (y < chart_position.top)\r\n        chart_y = 0;\r\n\r\n      return {\r\n        container: {x: x, y: y},\r\n        chart: {x: chart_x, y: chart_y}\r\n      };\r\n    }\r\n  },\r\n\r\n  // Attach chart/component child item with id\r\n  attach: function(id, item) {\r\n    item.id = id;\r\n    item.base.attr('data-id', id);\r\n    item.container = this;\r\n\r\n    Base.prototype.attach.call(this, id, item);\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('attach');\r\n  },\r\n\r\n  // Detach chart/component child item by id\r\n  detach: function(id, item) {\r\n    item.base.remove();\r\n\r\n    delete this._attached[id];\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('detach');\r\n  },\r\n\r\n  // Position chart and component layers\r\n  positionLayers: function(layout) {\r\n    this._positionChartLayers();\r\n    this._positionComponents(layout);\r\n    this._positionByZIndex();\r\n  },\r\n\r\n  //\r\n  // Internal\r\n  //\r\n\r\n  _updateDimensions: function() {\r\n    // Set container and svg dimensions\r\n    // (if original selection is svg, no container and skip responsiveness)\r\n    if (this.container) {\r\n      this.container\r\n        .attr('style', this.containerStyle());\r\n    }\r\n\r\n    this.base\r\n      .attr('viewBox', this.viewBox())\r\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n      .attr('style', this.baseStyle())\r\n      .attr('width', this.responsive() ? null : this.width())\r\n      .attr('height', this.responsive() ? null : this.height());\r\n  },\r\n\r\n  _attachItems: function(items, container, context) {\r\n    items = items || [];\r\n    container = container || [];\r\n\r\n    // Remove charts that are no longer needed\r\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n    remove_ids.forEach(function(remove_id) {\r\n      context.detach(remove_id, findById(container, remove_id));\r\n    });\r\n\r\n    // Create or update charts\r\n    return items.map(function(options) {\r\n      // TODO May not have id, might need to auto-generate\r\n      // (might be during another step)\r\n      var id = options.id;\r\n      var item = findById(container, id);\r\n\r\n      if (options instanceof d3.chart()) {\r\n        // If chart instance, replace with instance\r\n        if (item)\r\n          context.detach(id, item);\r\n\r\n        context.attach(id, options);\r\n        return options;\r\n      }\r\n      else {\r\n        if (item && item.type != options.type) {\r\n          // If chart type has changed, detach and re-create\r\n          context.detach(id, item);\r\n          item = undefined;\r\n        }\r\n\r\n        if (!item) {\r\n          var Item = d3.chart(options.type);\r\n\r\n          if (!Item)\r\n            throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n          var layer_options = {z_index: Item.z_index || 0};\r\n          var createLayer = {\r\n            'chart': 'createChartLayer',\r\n            'component': 'createComponentLayer',\r\n            'overlay': 'createOverlayLayer'\r\n          }[Item.layer_type];\r\n\r\n          if (!createLayer)\r\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n          var base = context[createLayer](layer_options);\r\n\r\n          item = new Item(base, options);\r\n          item.type = options.type;\r\n\r\n          context.attach(id, item);\r\n        }\r\n        else {\r\n          item.options(options);\r\n        }\r\n\r\n        return item;\r\n      }\r\n    });\r\n  },\r\n\r\n  _prepareConfig: function(options, data) {\r\n    // Load config from options fn\r\n    var config = options(data);\r\n    var normalized = {\r\n      data: {\r\n        charts: {},\r\n        components: {}\r\n      }\r\n    };\r\n\r\n    if (!config) {\r\n      return normalized;\r\n    }\r\n    else {\r\n      normalized.charts = [];\r\n      normalized.components = [];\r\n    }\r\n\r\n    if (Array.isArray(config)) {\r\n      // TEMP Idenfify charts from layered,\r\n      // eventually no distinction between charts and components\r\n      var found = {\r\n        row: false,\r\n        charts: false\r\n      };\r\n\r\n      config.forEach(function(row, row_index) {\r\n        // Components are added from inside-out\r\n        // so for position: top, position: left, use unshift\r\n\r\n        if (Array.isArray(row)) {\r\n          found.row = true;\r\n          var row_components = [];\r\n\r\n          row.forEach(function(item, col_index) {\r\n            if (item._layered) {\r\n              found.charts = true;\r\n              normalized.charts = item.items.map(function(chart, chart_index) {\r\n                return defaults({}, chart, {id: 'chart-' + (chart_index + 1)});\r\n              });\r\n            }\r\n            else if (!found.charts) {\r\n              row_components.unshift(prepareComponent(item, 'left', row_index, col_index));\r\n            }\r\n            else {\r\n              row_components.push(prepareComponent(item, 'right', row_index, col_index));\r\n            }\r\n          });\r\n\r\n          normalized.components = normalized.components.concat(row_components);\r\n        }\r\n        else {\r\n          if (row._layered) {\r\n            found.row = found.charts = true;\r\n            normalized.charts = row.items.slice();\r\n          }\r\n          else {\r\n            if (!found.row)\r\n              normalized.components.unshift(prepareComponent(row, 'top', row_index, 0));\r\n            else\r\n              normalized.components.push(prepareComponent(row, 'bottom', row_index, 0));\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      // DEPRECATED\r\n      objectEach(config.charts, function(chart_options, id) {\r\n        normalized.charts.push(extend({id: id}, chart_options));\r\n      });\r\n\r\n      objectEach(config.components, function(component_options, id) {\r\n        normalized.components.push(extend({id: id}, component_options));\r\n      });\r\n    }\r\n\r\n    normalized.charts.forEach(extractData('charts'));\r\n    normalized.components.forEach(extractData('components'));\r\n\r\n    return normalized;\r\n\r\n    function prepareComponent(component, position, row_index, col_index) {\r\n      if (component && isFunction(component.position))\r\n        component.position(position);\r\n      else\r\n        component = extend({position: position}, component);\r\n\r\n      return defaults(component, {id: 'component-' + (row_index + 1) + '-' + (col_index + 1)});\r\n    }\r\n\r\n    function extractData(type) {\r\n      return function(item) {\r\n        if (item.data && !isFunction(item.data)) {\r\n          normalized.data[type][item.id] = item.data;\r\n          delete item.data;\r\n        }\r\n      };\r\n    }\r\n  },\r\n\r\n  _positionChartLayers: function() {\r\n    var position = this.chartPosition();\r\n    this.base.selectAll('.chart-layer')\r\n      .attr('transform', translate(position.left, position.top))\r\n      .attr('width', position.width)\r\n      .attr('height', position.height);\r\n  },\r\n\r\n  _positionComponents: function(layout) {\r\n    var chart = this.chartPosition();\r\n    var width = this._width();\r\n    var height = this._height();\r\n\r\n    layout.top.reduce(function(previous, part) {\r\n      var y = previous - part.offset;\r\n      setLayout(part.component, chart.left, y, {width: chart.width});\r\n\r\n      return y;\r\n    }, chart.top);\r\n\r\n    layout.right.reduce(function(previous, part, index, parts) {\r\n      var previousPart = parts[index - 1] || {offset: 0};\r\n      var x = previous + previousPart.offset;\r\n      setLayout(part.component, x, chart.top, {height: chart.height});\r\n\r\n      return x;\r\n    }, width - chart.right);\r\n\r\n    layout.bottom.reduce(function(previous, part, index, parts) {\r\n      var previousPart = parts[index - 1] || {offset: 0};\r\n      var y = previous + previousPart.offset;\r\n      setLayout(part.component, chart.left, y, {width: chart.width});\r\n\r\n      return y;\r\n    }, height - chart.bottom);\r\n\r\n    layout.left.reduce(function(previous, part) {\r\n      var x = previous - part.offset;\r\n      setLayout(part.component, x, chart.top, {height: chart.height});\r\n\r\n      return x;\r\n    }, chart.left);\r\n\r\n    function setLayout(component, x, y, options) {\r\n      if (component && isFunction(component.setLayout))\r\n        component.setLayout(x, y, options);\r\n    }\r\n  },\r\n\r\n  _positionByZIndex: function() {\r\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n    // Sort by z-index\r\n    function setZIndex(layer) {\r\n      return {\r\n        layer: layer,\r\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n      };\r\n    }\r\n    function sortZIndex(a, b) {\r\n      if (a.zIndex < b.zIndex)\r\n        return -1;\r\n      else if (a.zIndex > b.zIndex)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n    function getLayer(wrapped) {\r\n      return wrapped.layer;\r\n    }\r\n\r\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n    // Move layers to z-index order\r\n    layers.forEach(function(layer) {\r\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n        layer.parentNode.appendChild(layer);\r\n    });\r\n  },\r\n\r\n  _extractLayout: function(data) {\r\n    var overall_layout = {top: [], right: [], bottom: [], left: []};\r\n    this.components().forEach(function(component) {\r\n      if (component.skip_layout || !component.getLayout)\r\n        return;\r\n\r\n      var layout = component.getLayout(this.demux(component.id, data));\r\n      var position = layout && layout.position;\r\n\r\n      if (!contains(['top', 'right', 'bottom', 'left'], position))\r\n        return;\r\n\r\n      overall_layout[position].push({\r\n        offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\r\n        component: component\r\n      });\r\n    }, this);\r\n\r\n    return overall_layout;\r\n  }\r\n});\r\n\r\n// TODO Find better place for this\r\nexport function layered(items) {\r\n  if (!Array.isArray(items))\r\n    items = Array.prototype.slice.call(arguments);\r\n\r\n  return {_layered: true, items: items};\r\n}\r\n\r\nfunction findById(items, id) {\r\n  return find(items, function(item) {\r\n    return item.id == id;\r\n  });\r\n}\r\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered\r\n};\r\n\r\nexport default d3c;\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\n\r\n/**\r\n  TEMP Clear namespace from mixins\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nexport default d3.chart('Base', {\r\n  initialize: function(options) {\r\n    // Bind all di-functions to this chart\r\n    bindAllDi(this);\r\n\r\n    if (options)\r\n      this.options(options);\r\n  },\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property('data'),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property('a'),\r\n      b: property('b', {\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property('options', {\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  },\r\n\r\n  // Store fully-transformed data for reference\r\n  // (Base is last transform to be called, so stored data has been fully transformed)\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    this.data(data);\r\n    return data;\r\n  },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    this.trigger('before:draw', data);\r\n    d3.chart().prototype.draw.apply(this, arguments);\r\n    this.trigger('draw', data);\r\n  }\r\n});\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property('centered', {\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Chart', {}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: false` and the static `layer_type: 'Chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Component', {\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property('position', {\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property('width', {\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property('height', {\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property('centered', {\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      if (options.height)\r\n        y += (options.height - this.height()) / 2;\r\n      if (options.width)\r\n        x += (options.width - this.width()) / 2;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nexport default Component.extend('Overlay', {\r\n  initialize: function() {\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property('x', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property('y', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property('hidden', {\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property('style', {\r\n    default_value: function() {\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        transform: translate(this.x() + 'px', this.y() + 'px')\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n"],"sourceRoot":"/source/"}