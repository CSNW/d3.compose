{"version":3,"sources":["d3.compose.min.js","d3.compose.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/layout.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js","../C:/dev/d3.compose/index.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","inherits","Child","Parent","create","constructor","enumerable","writeable","configurable","setPrototypeOf","__proto__","valueOrDefault","default_value","property","options","console","warn","id","unique_index","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","__properties","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","initializes","transforms","mixed","forEach","mix","initialize","args","init","transform","trans","bind","stack","direction","origin","min_height","min_width","elements","next_position","element_dimensions","spacing_width","spacing_height","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","isArray","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","Base","base","_layers","_attached","_events","extractLayout","prepareComponent","component","row_index","col_index","getId","setPosition","position","layered_index","extractData","_charts","_components","items","layout","charts","components","found","row","row_components","row_layout","_layered","chart_ids","chart_index","unshift","calculateLayout","demux","overall_layout","skip_layout","getLayout","applyLayout","chart_position","setLayout","part","index","parts","previousPart","layered","findById","Int8Array","utils","helpers","style","Base__Chart","name","draw","trigger","layer","attachment","unlayer","attach","on","once","off","isProperty","unset","proto_props","static_props","hasOwnProperty","src_Chart__Chart","z_index","layer_type","Chart","src_Chart","Component","prepareLayout","actual_dimensions","Overlay","hidden","-webkit-transform","-ms-transform","display","getAbsolutePosition","container","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","tagName","append","classed","attachHoverListeners","rawData","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","chart_options","_attachItems","component_options","delay","duration","ease","config","_prepareConfig","_setDimensions","redraw","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","getBounds","scroll_y","scrollY","scrollTop","getBoundingClientRect","was_inside","is_inside","detach","remove","_positionComponents","_positionByZIndex","remove_ids","remove_id","changed_position","Item","layer_options","createLayer","overlay","selectAll","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","sort","appendChild","compose","VERSION","_index"],"mappings":"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","file":"d3.compose.min.js","sourcesContent":[null,"/*!\n * d3.compose - Compose complex, data-driven visualizations from reusable charts and components with d3\n * v0.15.7 - https://github.com/CSNW/d3.compose - license: MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('d3')) :\n  typeof define === 'function' && define.amd ? define(['d3'], factory) :\n  global.d3c = factory(global.d3)\n}(this, function (d3) { 'use strict';\n\n  // Many utils inlined from Underscore.js\r\n  // (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\n  var slice = Array.prototype.slice;\r\n  var toString = Object.prototype.toString;\r\n\r\n  function _extend(target, extensions, undefined_only) {\r\n    for (var i = 0, length = extensions.length; i < length; i++) {\r\n      for (var key in extensions[i]) {\r\n        if (!undefined_only || target[key] === void 0)\r\n          target[key] = extensions[i][key];\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  function contains(arr, item) {\r\n    return arr.indexOf(item) >= 0;\r\n  }\r\n\r\n  function compact(arr) {\r\n    return arr.filter(function(item) {\r\n      return item;\r\n    });\r\n  }\r\n\r\n  function difference(a, b) {\r\n    return a.filter(function(value) {\r\n      return b.indexOf(value) < 0;\r\n    });\r\n  }\r\n\r\n  function defaults(target) {\r\n    return _extend(target, slice.call(arguments, 1), true);\r\n  }\r\n\r\n  function extend(target) {\r\n    return _extend(target, slice.call(arguments, 1));\r\n  }\r\n\r\n  function flatten(arr) {\r\n    // Assumes all items in arr are arrays and only flattens one level\r\n    return arr.reduce(function(memo, item) {\r\n      return memo.concat(item);\r\n    }, []);\r\n  }\r\n\r\n  function find(arr, fn, context) {\r\n    if (!arr) return;\r\n    for (var i = 0, length = arr.length; i < length; i++) {\r\n      if (fn.call(context, arr[i], i, arr))\r\n        return arr[i];\r\n    }\r\n  }\r\n\r\n  function first(arr, n) {\r\n    if (arr == null) return void 0;\r\n    if (n == null) return arr[0];\r\n    return Array.prototype.slice.call(arr, 0, n);\r\n  }\r\n\r\n  function isBoolean(obj) {\r\n    return obj === true || obj === false;\r\n  }\r\n  function isObject(obj) {\r\n    var type = typeof obj;\r\n    return type === 'function' || type === 'object' && !!obj;\r\n  }\r\n  function isNumber(obj) {\r\n    return toString.call(obj) === '[object Number]';\r\n  }\r\n  function isString(obj) {\r\n    return toString.call(obj) === '[object String]';\r\n  }\r\n  function isUndefined(obj) {\r\n    return obj === void 0;\r\n  }\r\n\r\n  var isFunction = function(obj) {\r\n    return toString.call(obj) === '[object Function]';\r\n  };\r\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n    isFunction = function(obj) {\r\n      return typeof obj == 'function' || false;\r\n    };\r\n  }\r\n\r\n  function objectEach(obj, fn, context) {\r\n    if (!obj) return;\r\n    var keys = Object.keys(obj);\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      fn.call(context, obj[keys[i]], keys[i], obj);\r\n    }\r\n  }\r\n\r\n  function objectFind(obj, fn, context) {\r\n    if (!obj) return;\r\n    var keys = Object.keys(obj);\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n        return obj[keys[i]];\r\n    }\r\n  }\r\n\r\n  function pluck(objs, key) {\r\n    if (!objs) return [];\r\n    return objs.map(function(obj) {\r\n      return obj[key];\r\n    });\r\n  }\r\n\r\n  function uniq(arr) {\r\n    var result = [];\r\n    for (var i = 0, length = arr.length; i < length; i++) {\r\n      if (result.indexOf(arr[i]) < 0)\r\n        result.push(arr[i]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function inherits(Child, Parent) {\r\n    Child.prototype = Object.create(Parent.prototype, {\r\n      constructor: {\r\n        value: Child,\r\n        enumerable: false,\r\n        writeable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n\r\n    if (Object.setPrototypeOf) {\r\n      Object.setPrototypeOf(Child, Parent);\r\n    }\r\n    else {\r\n      Child.__proto__ = Parent; //eslint-disable-line no-proto\r\n\r\n      // __proto__ isn't supported in IE,\r\n      // use one-time copy of static properties to approximate\r\n      defaults(Child, Parent);\r\n    }\r\n  }\r\n\r\n  // If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n  //\r\n  // @method valueOrDefault\r\n  // @param {Any} [value]\r\n  // @param {Any} default_value\r\n  // @return {Any}\r\n  function valueOrDefault(value, default_value) {\r\n    return !isUndefined(value) ? value : default_value;\r\n  }\r\n\r\n  var utils = {\r\n    slice: slice,\r\n    toString: toString,\r\n    contains: contains,\r\n    compact: compact,\r\n    difference: difference,\r\n    defaults: defaults,\r\n    extend: extend,\r\n    flatten: flatten,\r\n    find: find,\r\n    first: first,\r\n    isBoolean: isBoolean,\r\n    isFunction: isFunction,\r\n    isObject: isObject,\r\n    isNumber: isNumber,\r\n    isString: isString,\r\n    isUndefined: isUndefined,\r\n    objectEach: objectEach,\r\n    objectFind: objectFind,\r\n    pluck: pluck,\r\n    uniq: uniq,\r\n    inherits: inherits,\r\n    valueOrDefault: valueOrDefault\r\n  };\n\n  var unique_index = 0;\r\n\r\n  /**\r\n    Helper for creating properties for charts/components\r\n\r\n    @example\r\n    ```javascript\r\n    var Custom = d3.chart('Chart').extend('Custom', {\r\n      // Create property that's stored internally as 'simple'\r\n      simple: property()\r\n    });\r\n    var custom; // = new Custom(...);\r\n\r\n    // set\r\n    custom.simple('Howdy');\r\n\r\n    // get\r\n    console.log(custom.simple()); // -> 'Howdy'\r\n\r\n    // Advanced\r\n    // --------\r\n    // Default values:\r\n    Custom.prototype.message = property({\r\n      default_value: 'Howdy!'\r\n    });\r\n\r\n    console.log(custom.message()); // -> 'Howdy!'\r\n    custom.message('Goodbye');\r\n    console.log(custom.message()); // -> 'Goodbye'\r\n\r\n    // Set to undefined to reset to default value\r\n    custom.message(undefined);\r\n    console.log(custom.message()); // -> 'Howdy!'\r\n\r\n    // Computed default value:\r\n    Custom.property.computed = property({\r\n      default_value: function() {\r\n        // \"this\" = Custom instance\r\n        return this.message();\r\n      }\r\n    });\r\n\r\n    // Function default value:\r\n    // For function default_values, wrap in function to differentiate from computed\r\n    Custom.property.fn = property({\r\n      default_value: function() {\r\n        return function defaultFn() {};\r\n      }\r\n      // The following would be incorrectly evaluated\r\n      // default_value: function defaultFn() {}\r\n    })\r\n\r\n    // Custom getter:\r\n    Custom.prototype.exclaimed = property({\r\n      get: function(value) {\r\n        // Value is the underlying set value\r\n        return value + '!';\r\n      }\r\n    });\r\n\r\n    custom.exclaimed('Howdy');\r\n    console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n    // Custom setter:\r\n    Custom.prototype.feeling = property({\r\n      set: function(value, previous) {\r\n        if (value == 'Hate') {\r\n          // To override value, return Object with override specified\r\n          return {\r\n            override: 'Love',\r\n\r\n            // To do something after override, use after callback\r\n            after: function() {\r\n              console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n            }\r\n          };\r\n        }\r\n      }\r\n\r\n      custom.feeling('Hate'); // -> 'After: Love'\r\n      console.log(custom.feeling()); // -> 'Love'\r\n    });\r\n    ```\r\n    @method property\r\n    @for helpers\r\n    @param {Object} [options]\r\n    @param {Any} [options.default_value] default value for property (when set value is `undefined`). If default value is a function, wrap in another function as default_value is evaluated by default.\r\n    @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n    @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n    @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n    @return {Function} `()`: get, `(value)`: set\r\n  */\r\n  function property(options) {\r\n    // DEPRECATED: name as first argument\r\n    if (arguments.length == 2) {\r\n      if (typeof console != 'undefined' && console.warn)\r\n        console.warn('DEPRECATED - name argument for property is no longer supported will be removed in the next version of d3.compose');\r\n      options = arguments[1];\r\n    }\r\n\r\n    options = options || {};\r\n    var id = 'property_' + unique_index++;\r\n\r\n    var property = function(value) {//eslint-disable-line no-shadow\r\n      var properties = this.__properties = this.__properties || {};\r\n      var context = valueOrDefault(property.context, this);\r\n\r\n      if (arguments.length)\r\n        return set.call(this);\r\n      else\r\n        return get.call(this);\r\n\r\n      function get() {\r\n        value = properties[id];\r\n\r\n        if (isUndefined(value)) {\r\n          // Use default value and unwrap if it's a function\r\n          value = property.default_value;\r\n          if (isFunction(value))\r\n            value = value.call(context);\r\n        }\r\n\r\n        return isFunction(options.get) ? options.get.call(context, value) : value;\r\n      }\r\n\r\n      function set() {\r\n        // Validate\r\n        if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(context, value))\r\n          throw new Error('Invalid value for property: ' + JSON.stringify(value));\r\n\r\n        var previous = properties[id];\r\n        properties[id] = value;\r\n\r\n        if (isFunction(options.set) && !isUndefined(value)) {\r\n          var response = options.set.call(context, value, previous);\r\n\r\n          if (response && 'override' in response)\r\n            properties[id] = response.override;\r\n          if (response && isFunction(response.after))\r\n            response.after.call(context, properties[id]);\r\n        }\r\n\r\n        return this;\r\n      }\r\n    };\r\n\r\n    // For checking if function is a property\r\n    property.is_property = true;\r\n    property.id = id;\r\n    property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n    property.default_value = options.default_value;\r\n    property.context = options.context;\r\n    property.options = options;\r\n\r\n    return property;\r\n  }\n\n  /**\r\n    Helper for robustly determining width/height of given selector.\r\n    Checks dimensions from css, attributes, and bounding box.\r\n\r\n    @method dimensions\r\n    @for helpers\r\n    @param {d3.Selection} selection\r\n    @return {Object} `{width, height}`\r\n  */\r\n  function dimensions(selection) {\r\n    // 1. Get width/height set via css (only valid for svg and some other elements)\r\n    var client = clientDimensions(selection);\r\n\r\n    if (client.width && client.height)\r\n      return client;\r\n\r\n    // 2. Get width/height set via attribute\r\n    var attr = attrDimensions(selection);\r\n\r\n    if (isSVG(selection)) {\r\n      return {\r\n        width: client.width != null ? client.width : attr.width || 0,\r\n        height: client.height != null ? client.height : attr.height || 0\r\n      };\r\n    }\r\n    else {\r\n      var bbox = bboxDimensions(selection);\r\n\r\n      // Size set by css -> client (only valid for svg and some other elements)\r\n      // Size set by svg -> attr override or bounding_box\r\n      // -> Take maximum\r\n      return {\r\n        width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n        height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n      };\r\n    }\r\n  }\r\n\r\n  function clientDimensions(selection) {\r\n    var element = selection.node();\r\n\r\n    var client_dimensions = {\r\n      width: element && element.clientWidth,\r\n      height: element && element.clientHeight\r\n    };\r\n\r\n    // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n    //        calculate from css\r\n    //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n    //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n    if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n      var styles = window.getComputedStyle(element);\r\n      client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n      client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n    }\r\n\r\n    return client_dimensions;\r\n  }\r\n\r\n  function attrDimensions(selection) {\r\n    return {\r\n      width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n      height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n    };\r\n  }\r\n\r\n  function bboxDimensions(selection) {\r\n    var element = selection.node();\r\n    var bbox;\r\n    try {\r\n      bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n    }\r\n    catch(ex) {\r\n      // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n      // Ignore error and set to empty\r\n      bbox = {width: 0, height: 0};\r\n    }\r\n\r\n    return bbox;\r\n  }\r\n\r\n  function isSVG(selection) {\r\n    return selection.node().nodeName == 'svg';\r\n  }\n\n  /**\r\n    Create scale from options\r\n\r\n    @example\r\n    ```javascript\r\n    // Simple type, range, and domain\r\n    var scale = createScale({\r\n      type: 'linear',\r\n      domain: [0, 100],\r\n      range: [0, 500]\r\n    });\r\n\r\n    // Calculate domain for data\r\n    var scale = createScale({\r\n      type: 'log',\r\n      data: [{y: 1}, {y: 100}, {y: 2000}, {y: 5000}],\r\n      key: 'y'\r\n    });\r\n\r\n    // Scale is passed through\r\n    var original = d3.scale.linear();\r\n    var scale = createScale(original);\r\n    scale === original;\r\n\r\n    // Set other properties by passing in \"arguments\" array\r\n    var scale = createScale({\r\n      type: 'ordinal',\r\n      domain: ['a', 'b', 'c', 'd', 'e'],\r\n      rangeRoundBands: [[0, 100], 0.1, 0.05] // -> rangeRoundBands([0, 100], 0.1, 0.05)\r\n    });\r\n\r\n    // Use ordinal + adjacent for bar charts\r\n    var scale = createScale({\r\n      type: 'ordinal',\r\n      adjacent: true,\r\n      domain: ['a', 'b', 'c'],\r\n      series: 2 // Series count is required for adjacent if data isn't given\r\n    })\r\n    ```\r\n    @method createScale\r\n    @for helpers\r\n    @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n    @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n    @param {Array} [options.domain] Domain for scale\r\n    @param {Array} [options.range] Range for scale\r\n    @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n    @param {Function} [options.value] \"di\"-function for getting value for data\r\n    @param {String} [options.key] Data key to extract value\r\n    @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n    @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n    - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n    - Requires \"data\" or \"series\" options to determine number of series\r\n    @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n    @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n    @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n    @return {d3.Scale}\r\n  */\r\n  function createScale(options) {\r\n    options = options || {};\r\n\r\n    // If function, scale was passed in as options\r\n    if (isFunction(options))\r\n      return options;\r\n\r\n    // Create scale (using d3.time.scale() if type is 'time')\r\n    var scale;\r\n    if (options.type == 'time')\r\n      scale = d3.time.scale();\r\n    else if (d3.scale[options.type])\r\n      scale = d3.scale[options.type]();\r\n    else\r\n      scale = d3.scale.linear();\r\n\r\n    objectEach(options, function(value, key) {\r\n      if (scale[key]) {\r\n        // If option is standard property (domain or range), pass in directly\r\n        // otherwise, pass in as arguments\r\n        // (don't pass through internal options)\r\n        if (key == 'range' || key == 'domain')\r\n          scale[key](value);\r\n        else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n          scale[key].apply(scale, value);\r\n      }\r\n    });\r\n\r\n    if (!options.domain && options.data && (options.key || options.value))\r\n      scale = setDomain(scale, options);\r\n\r\n    // Add centered and adjacent extensions to ordinal\r\n    // (centered by default for ordinal)\r\n    var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n    if (options.type == 'ordinal' && (centered || options.adjacent))\r\n      scale = addCentered(scale, options);\r\n\r\n    // Add padding extension to ordinal\r\n    if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n      scale = addPadding(scale, options);\r\n\r\n    return scale;\r\n  }\r\n\r\n  function setDomain(scale, options) {\r\n    // Use value \"di\" or create for key\r\n    var getValue = options.value || function(d) {\r\n      return d[options.key];\r\n    };\r\n\r\n    // Enforce series data\r\n    var data = options.data;\r\n    if (!isSeriesData(data))\r\n      data = [{values: data}];\r\n\r\n    var domain;\r\n    if (options.type == 'ordinal') {\r\n      // Domain for ordinal is array of unique values\r\n      domain = uniq(flatten(data.map(function(series) {\r\n        if (series && series.values)\r\n          return series.values.map(getValue);\r\n      })));\r\n    }\r\n    else {\r\n      var min_value = min(data, getValue);\r\n\r\n      domain = [\r\n        min_value < 0 ? min_value : 0,\r\n        max(data, getValue)\r\n      ];\r\n    }\r\n\r\n    scale.domain(domain);\r\n    return scale;\r\n  }\r\n\r\n  function addCentered(original, options) {\r\n    // Get series count for adjacent\r\n    var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n    // TODO Look into removing closure\r\n    var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n      var context = function(value, series_index) {\r\n        var width = context.width();\r\n\r\n        if (!options.adjacent)\r\n          series_index = 0;\r\n\r\n        return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n      };\r\n      extend(context, original, {\r\n        width: function() {\r\n          var range_band = context.rangeBand && context.rangeBand();\r\n          var width = isFinite(range_band) ? range_band : 0;\r\n\r\n          if (options.adjacent)\r\n            width = width / series_count;\r\n\r\n          return width;\r\n        }\r\n      });\r\n\r\n      // TODO test copy() behavior\r\n\r\n      return context;\r\n    })(original, options, series_count);\r\n\r\n    return scale;\r\n  }\r\n\r\n  function addPadding(scale, options) {\r\n    var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n    var original_range = scale.range;\r\n    scale.range = function(range) {\r\n      if (!arguments.length) return original_range();\r\n\r\n      scale.rangeBands(\r\n        range,\r\n        padding,\r\n        padding / 2\r\n      );\r\n    };\r\n\r\n    if (options.range)\r\n      scale.range(options.range);\r\n\r\n    // TODO test copy() behavior\r\n    return scale;\r\n  }\n\n  /**\r\n    Combine mixins with Parent super class for extension\r\n\r\n    @example\r\n    ```js\r\n    var a = {transform: function() {}, a: 1};\r\n    var b = {initialize: function() {}, b: 2};\r\n    var c = {c: 3};\r\n\r\n    var Custom = mixin(Chart, a, b, c).extend({\r\n      initialize: function(options) {\r\n        this._super.initialize.call(this, options);\r\n        // d\r\n      },\r\n      transform: function(data) {\r\n        data = this._super.transform.call(this, data);\r\n        // d\r\n      }\r\n    });\r\n\r\n    // initialize: Chart, b, d\r\n    // transform: Chart, a, d\r\n    ```\r\n    @method mixin\r\n    @for helpers\r\n    @param {Function} Parent\r\n    @param {...Object} ...mixins\r\n    @return {Function}\r\n  */\r\n  function mixin(Parent/*, ...mixins*/) {\r\n    var mixins = slice.call(arguments, 1);\r\n    var initializes = [];\r\n    var transforms = [];\r\n    var mixed = {};\r\n\r\n    mixins.forEach(function(mix) {\r\n      objectEach(mix, function(value, key) {\r\n        if (key == 'initialize')\r\n          initializes.push(value);\r\n        else if (key == 'transform')\r\n          transforms.push(value);\r\n        else\r\n          mixed[key] = value;\r\n      });\r\n    });\r\n\r\n    if (initializes.length) {\r\n      mixed.initialize = function initialize() {\r\n        var args = slice.call(arguments);\r\n        Parent.prototype.initialize.apply(this, args);\r\n        initializes.forEach(function(init) {\r\n          init.apply(this, args);\r\n        }, this);\r\n      };\r\n    }\r\n\r\n    if (transforms.length) {\r\n      mixed.transform = function transform(data) {\r\n        data = Parent.prototype.transform.call(this, data);\r\n        return transforms.reduce(function(memo, trans) {\r\n          return trans.call(this, memo);\r\n        }.bind(this), data);\r\n      };\r\n    }\r\n\r\n    return Parent.extend(mixed);\r\n  }\n\n  /**\r\n    Stack given array of elements vertically or horizontally\r\n\r\n    @example\r\n    ```js\r\n    // Stack all text elements vertically, from the top, with 0px padding\r\n    d3.selectAll('text').call(helpers.stack())\r\n\r\n    // Stack all text elements horizontally, from the right, with 5px padding\r\n    d3.selectAll('text').call(helpers.stack({\r\n      direction: 'horizontal',\r\n      origin: 'right',\r\n      padding: 5\r\n    }));\r\n    ```\r\n    @method stack\r\n    @for helpers\r\n    @param {Object} [options]\r\n    @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n    @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n    @param {Number} [options.padding=0] padding (in px) between elements\r\n    @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n    @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n    @return {Function}\r\n  */\r\n  function stack(options) {\r\n    options = extend({\r\n      direction: 'vertical',\r\n      origin: 'top',\r\n      padding: 0,\r\n      min_height: 0,\r\n      min_width: 0\r\n    }, options);\r\n\r\n    // Ensure valid origin based on direction\r\n    if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n      options.origin = 'left';\r\n    else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n      options.origin = 'top';\r\n\r\n    function padding(i) {\r\n      return i > 0 && options.padding ? options.padding : 0;\r\n    }\r\n\r\n    return function(elements) {\r\n      if (elements && elements.attr) {\r\n        var previous = 0;\r\n\r\n        elements.attr('transform', function(d, i) {\r\n          var element_dimensions = this.getBBox();\r\n          var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n          var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n          var x = 0;\r\n          var y = 0;\r\n          var next_position;\r\n\r\n          if (options.direction == 'horizontal') {\r\n            next_position = previous + spacing_width + padding(i);\r\n\r\n            if (options.origin == 'left')\r\n              x = previous + padding(i);\r\n            else\r\n              x = next_position;\r\n\r\n            previous = next_position;\r\n          }\r\n          else {\r\n            next_position = previous + spacing_height + padding(i);\r\n\r\n            if (options.origin == 'top')\r\n              y = previous + padding(i);\r\n            else\r\n              y = next_position;\r\n\r\n            previous = next_position;\r\n          }\r\n\r\n          return translate(x, y);\r\n        });\r\n      }\r\n    };\r\n  }\n\n  /**\r\n    Translate by (x, y) distance\r\n\r\n    @example\r\n    ```javascript\r\n    translate(10, 15) == 'translate(10, 15)'\r\n    translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n    ```\r\n    @method translate\r\n    @param {Number|Object} [x] value or `{x, y}`\r\n    @param {Number} [y]\r\n    @return {String}\r\n  */\r\n  function translate(x, y) {\r\n    if (isObject(x)) {\r\n      y = x.y;\r\n      x = x.x;\r\n    }\r\n\r\n    return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n  }\r\n\r\n  /**\r\n    Rotate by degrees, with optional center\r\n\r\n    @method rotate\r\n    @param {Number} degrees\r\n    @param {Object} [center = {x: 0, y: 0}]\r\n    @return {String}\r\n  */\r\n  function rotate(degrees, center) {\r\n    var rotation = 'rotate(' + (degrees || 0);\r\n    if (center)\r\n      rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n    rotation += ')';\r\n\r\n    return rotation;\r\n  }\r\n\r\n  /**\r\n    Find vertical offset to vertically align text\r\n    (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n    @example\r\n    ```js\r\n    var label = d3.select('text');\r\n\r\n    // Place label vertically so that origin is top-left\r\n    var offset = alignText(label);\r\n    label.attr('transform', translate(0, offset));\r\n\r\n    // Center label for line-height of 20px\r\n    var offset = alignText(label, 20);\r\n    label.attr('transform', translate(0, offset));\r\n    ```\r\n    @method alignText\r\n    @param {element} element\r\n    @param {Number} [line_height]\r\n    @return {Number} offset\r\n  */\r\n  function alignText(element, line_height) {\r\n    var offset = 0;\r\n    try {\r\n      var height = element.getBBox().height;\r\n\r\n      var element_style = window.getComputedStyle(element);\r\n      var css_font_size = parseFloat(element_style['font-size']);\r\n      var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n      // If line-height: normal, use estimate 1.14em\r\n      // (actual line-height depends on browser and font)\r\n      if (isNaN(css_line_height))\r\n        css_line_height = 1.15 * css_font_size;\r\n\r\n      var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n      // Add additional line-height, if specified\r\n      var height_adjustment = 0;\r\n      if (line_height && line_height > 0)\r\n        height_adjustment = (line_height - height) / 2;\r\n\r\n      offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n    }\r\n    catch (ex) {\r\n      // Errors can occur from getBBox and getComputedStyle\r\n      // No useful information for offset, do nothing\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n    Determine if given data is likely series data\r\n\r\n    @method isSeriesData\r\n    @param {Array} data\r\n    @return {Boolean}\r\n  */\r\n  function isSeriesData(data) {\r\n    var first_item = first(data);\r\n    return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n  }\r\n\r\n  /**\r\n    Get max for array/series by value di\r\n\r\n    @example\r\n    ```js\r\n    var data = [\r\n      {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n      {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n    ];\r\n    max(data, function(d, i) { return d.y; }); // -> 4\r\n    ```\r\n    @method max\r\n    @param {Array} data\r\n    @param {Function} getValue di function that returns value for given (d, i)\r\n    @return {Number}\r\n  */\r\n  function max(data, getValue) {\r\n    var getMax = function(series_data) {\r\n      return series_data && d3.extent(series_data, getValue)[1];\r\n    };\r\n\r\n    if (isSeriesData(data)) {\r\n      return data.reduce(function(memo, series) {\r\n        if (series && Array.isArray(series.values)) {\r\n          var series_max = getMax(series.values);\r\n          return series_max > memo ? series_max : memo;\r\n        }\r\n        else {\r\n          return memo;\r\n        }\r\n      }, -Infinity);\r\n    }\r\n    else {\r\n      return getMax(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n    Get min for array/series by value di\r\n\r\n    @example\r\n    ```js\r\n    var data = [\r\n      {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n      {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n    ];\r\n    min(data, function(d, i) { return d.x; }); // -> 0\r\n    ```\r\n    @method min\r\n    @param {Array} data\r\n    @param {Function} getValue di function that returns value for given (d, i)\r\n    @return {Number}\r\n  */\r\n  function min(data, getValue) {\r\n    var getMin = function(series_data) {\r\n      return series_data && d3.extent(series_data, getValue)[0];\r\n    };\r\n\r\n    if (isSeriesData(data)) {\r\n      return data.reduce(function(memo, series) {\r\n        if (series && Array.isArray(series.values)) {\r\n          var series_min = getMin(series.values);\r\n          return series_min < memo ? series_min : memo;\r\n        }\r\n        else {\r\n          return memo;\r\n        }\r\n      }, Infinity);\r\n    }\r\n    else {\r\n      return getMin(data);\r\n    }\r\n  }\r\n\r\n  // TODO Look into converting to d3's internal style handling\r\n  // Convert key,values to style string\r\n  //\r\n  // @example\r\n  // ```js\r\n  // style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n  // ```\r\n  // @method style\r\n  // @param {Object} styles\r\n  // @return {String}\r\n  function src_helpers__style(styles) {\r\n    if (!styles)\r\n      return '';\r\n\r\n    var keyValues = [];\r\n    objectEach(styles, function(value, key) {\r\n      keyValues.push(key + ': ' + value);\r\n    });\r\n    styles = keyValues.join('; ');\r\n\r\n    return styles ? styles + ';' : '';\r\n  }\r\n\r\n  /**\r\n    Get formatted margins for varying input\r\n\r\n    @method getMargins\r\n    @example\r\n    ```js\r\n    getMargins(4);\r\n    // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n    getMargins({top: 20}, {top: 8, bottom: 8});\r\n    // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n    ```\r\n    @param {Number|Object} margins\r\n    @param {Object} default_margins\r\n    @return {Object}\r\n  */\r\n  function getMargins(margins, default_margins) {\r\n    if (isNumber(margins))\r\n      return {top: margins, right: margins, bottom: margins, left: margins};\r\n    else\r\n      return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n  }\r\n\r\n  /**\r\n    Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n    Wrapped function uses standard d3 arguments and context.\r\n\r\n    Note: in order to pass proper context to di-functions called within di-function\r\n    use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n    @example\r\n    ```javascript\r\n    d3.chart('Base').extend('Custom', {\r\n      initialize: function() {\r\n        this.base.select('point')\r\n          .attr('cx', this.x);\r\n        // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n      },\r\n\r\n      x: di(function(chart, d, i) {\r\n        // \"this\" is standard d3 context: node\r\n        return chart.xScale()(chart.xValue.call(this, d, i));\r\n      })\r\n\r\n      // xScale, xValue...\r\n    });\r\n    ```\r\n    @method di\r\n    @param {Function} callback with `(chart, d, i)` arguments\r\n    @return {Function}\r\n  */\r\n  function di(callback) {\r\n    // Create intermediate wrapping in case it's called without binding\r\n    var wrapped = function wrapped(d, i, j) {\r\n      return callback.call(this, undefined, d, i, j);\r\n    };\r\n    wrapped._is_di = true;\r\n    wrapped.original = callback;\r\n\r\n    return wrapped;\r\n  }\r\n\r\n  function bindDi(diFn, chart) {\r\n    return function wrapped(d, i, j) {\r\n      return (diFn.original || diFn).call(this, chart, d, i, j);\r\n    };\r\n  }\r\n\r\n  // Bind all di-functions found in chart\r\n  function bindAllDi(chart) {\r\n    for (var key in chart) {\r\n      if (chart[key] && chart[key]._is_di)\r\n        chart[key] = bindDi(chart[key], chart);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n    Get parent data for element (used to get parent series for data point)\r\n\r\n    @example\r\n    ```js\r\n    var data = [{\r\n      name: 'Input',\r\n      values: [1, 2, 3]\r\n    }];\r\n\r\n    d3.selectAll('g')\r\n      .data(data)\r\n      .enter().append('g')\r\n        .selectAll('text')\r\n          .data(function(d) { return d.values; })\r\n          .enter().append('text')\r\n            .text(function(d) {\r\n              var series_data = getParentData(this);\r\n              return series_data.name + ': ' + d;\r\n            });\r\n\r\n    // Input: 1, Input: 2, Input: 3\r\n    ```\r\n    @method getParentData\r\n    @param {Element} element\r\n    @return {Any}\r\n  */\r\n  function getParentData(element) {\r\n    // @internal Shortcut if element + parentData needs to be mocked\r\n    if (element._parent_data)\r\n      return element._parent_data;\r\n\r\n    var parent = element && element.parentNode;\r\n    if (parent) {\r\n      var data = d3.select(parent).data();\r\n      return data && data[0];\r\n    }\r\n  }\r\n\r\n  function createHelper(type) {\r\n    return function(id, options) {\r\n      if (!options) {\r\n        options = id;\r\n        id = undefined;\r\n      }\r\n\r\n      return extend({id: id, type: type}, options);\r\n    };\r\n  }\r\n\r\n  var helpers = {\r\n    property: property,\r\n    dimensions: dimensions,\r\n    translate: translate,\r\n    rotate: rotate,\r\n    alignText: alignText,\r\n    isSeriesData: isSeriesData,\r\n    max: max,\r\n    min: min,\r\n    createScale: createScale,\r\n    style: src_helpers__style,\r\n    getMargins: getMargins,\r\n    stack: stack,\r\n    di: di,\r\n    bindDi: bindDi,\r\n    bindAllDi: bindAllDi,\r\n    getParentData: getParentData,\r\n    mixin: mixin,\r\n    createHelper: createHelper\r\n  };\n\n  var Base__Chart = d3.chart();\r\n\r\n  // TEMP Clear namespace from mixins\r\n  /**\r\n    @namespace\r\n  */\r\n\r\n  /**\r\n    Shared functionality between all charts and components.\r\n\r\n    - Set properties automatically from `options`,\r\n    - Store fully transformed data\r\n    - Adds `\"before:draw\"` and `\"draw\"` events\r\n    - Standard `width` and `height` calculations\r\n\r\n    @class Base\r\n  */\r\n  function Base(selection, options) {\r\n    // d3.chart() constructor without transform and initialize cascade\r\n    this.base = selection;\r\n    this._layers = {};\r\n    this._attached = {};\r\n    this._events = {};\r\n\r\n    // Bind all di-functions to this chart\r\n    bindAllDi(this);\r\n\r\n    // Set options (and properties with set_from_options)\r\n    if (options)\r\n      this.options(options);\r\n\r\n    // Initialize Chart (relies on explicitly calling super in initialize)\r\n    this.initialize(options);\r\n  }\r\n\r\n  inherits(Base, Base__Chart);\r\n\r\n  extend(Base.prototype, {\r\n    initialize: function() {},\r\n    transform: function(data) {\r\n      return data;\r\n    },\r\n    demux: function(name, data) { return data; },\r\n\r\n    // Add events to draw: \"before:draw\" and \"draw\"\r\n    draw: function(data) {\r\n      // Transform data (relies on explicitly calling super in transform)\r\n      data = this.transform(data);\r\n\r\n      // Store fully-transformed data for reference\r\n      this.data(data);\r\n\r\n      this.trigger('before:draw', data);\r\n\r\n      objectEach(this._layers, function(layer) {\r\n        layer.draw(data);\r\n      });\r\n      objectEach(this._attached, function(attachment, name) {\r\n        attachment.draw(this.demux(name, data));\r\n      }, this);\r\n\r\n      this.trigger('draw', data);\r\n    },\r\n\r\n    // Explicitly load d3.chart prototype\r\n    layer: Base__Chart.prototype.layer,\r\n    unlayer: Base__Chart.prototype.unlayer,\r\n    attach: Base__Chart.prototype.attach,\r\n    on: Base__Chart.prototype.on,\r\n    once: Base__Chart.prototype.once,\r\n    off: Base__Chart.prototype.off,\r\n    trigger: Base__Chart.prototype.trigger,\r\n\r\n    /**\r\n      Store fully-transformed data for direct access from the chart\r\n\r\n      @property data\r\n      @type Any\r\n    */\r\n    data: property(),\r\n\r\n    /**\r\n      Overall options for chart/component, automatically setting any matching properties.\r\n\r\n      @example\r\n      ```js\r\n      var property = d3.compose.helpers.property;\r\n\r\n      d3.chart('Base').extend('HasProperties', {\r\n        a: property(),\r\n        b: property({\r\n          set: function(value) {\r\n            return {\r\n              override: value + '!'\r\n            };\r\n          }\r\n        })\r\n      });\r\n\r\n      var instance = d3.select('#chart')\r\n        .chart('HasProperties', {\r\n          a: 123,\r\n          b: 'Howdy',\r\n          c: true\r\n        });\r\n\r\n      // Equivalent to:\r\n      // d3.select(...)\r\n      //   .chart('HasProperties')\r\n      //   .options({...});\r\n\r\n      console.log(instance.a()); // -> 123\r\n      console.log(instance.b()); // -> Howdy!\r\n      console.log(instance.options().c); // -> true\r\n      ```\r\n      @property options\r\n      @type Object\r\n    */\r\n    options: property({\r\n      default_value: {},\r\n      set: function(options, previous) {\r\n        // Clear all unset options, except for data and options\r\n        if (previous) {\r\n          var unset = difference(Object.keys(previous), Object.keys(options));\r\n          unset.forEach(function(key) {\r\n            if (key != 'data' && key != 'options' && isProperty(this, key))\r\n              this[key](undefined);\r\n          }, this);\r\n        }\r\n\r\n        objectEach(options, function setFromOptions(value, key) {\r\n          if (isProperty(this, key))\r\n            this[key](value);\r\n        }, this);\r\n\r\n        function isProperty(chart, key) {\r\n          return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get width of `this.base`.\r\n      (Does not include `set` for setting width of `this.base`)\r\n\r\n      @method width\r\n      @return {Number}\r\n    */\r\n    width: function width() {\r\n      return dimensions(this.base).width;\r\n    },\r\n\r\n    /**\r\n      Get height of `this.base`.\r\n      (Does not include `set` for setting height of `this.base`)\r\n\r\n      @method height\r\n      @return {Number}\r\n    */\r\n    height: function height() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  });\r\n\r\n  Base.extend = function(proto_props, static_props) {\r\n    // name may be first parameter for d3.chart usage\r\n    var name;\r\n    if (isString(proto_props)) {\r\n      name = proto_props;\r\n      proto_props = static_props;\r\n      static_props = arguments[2];\r\n    }\r\n\r\n    var Parent = this;\r\n    var Child;\r\n\r\n    if (proto_props && proto_props.hasOwnProperty('constructor')) {\r\n      Child = proto_props.constructor;\r\n\r\n      // inherits sets constructor, remove from proto_props\r\n      proto_props = extend({}, proto_props);\r\n      delete proto_props.constructor;\r\n    }\r\n    else {\r\n      Child = function() { return Parent.apply(this, arguments); };\r\n    }\r\n\r\n    inherits(Child, Parent);\r\n    if (static_props)\r\n      extend(Child, static_props);\r\n    if (proto_props)\r\n      extend(Child.prototype, proto_props);\r\n\r\n    // If name is given, register with d3.chart\r\n    if (name)\r\n      Base__Chart[name] = Child;\r\n\r\n    return Child;\r\n  };\r\n\r\n  // Export to d3.chart\r\n  Base__Chart.Base = Base;\n\n  /**\r\n    Common base for creating charts.\r\n    Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n    ### Extending\r\n\r\n    To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n    and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n    and `d3.compose.helpers.property` when creating your chart.\r\n\r\n    @example\r\n    ```js\r\n    var helpers = d3.compose.helpers;\r\n\r\n    d3.chart('Chart').extend('Pie', {\r\n      initialize: function() {\r\n        // same as d3.chart\r\n      },\r\n      transform: function(data) {\r\n        // same as d3.chart\r\n      },\r\n\r\n      color: helpers.di(function(chart, d, i) {\r\n        // \"di\" function with parent chart injected (\"this\" = element)\r\n      }),\r\n\r\n      centered: helpers.property({\r\n        default_value: true\r\n        // can be automatically set from options object\r\n      })\r\n    });\r\n    ```\r\n    @class Chart\r\n    @extends Base\r\n  */\r\n  var src_Chart__Chart = Base.extend({}, {\r\n    /**\r\n      Default z-index for chart\r\n      (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Chart').extend('BelowComponentLayers', {\r\n        // ...\r\n      }, {\r\n        z_index: 40\r\n      });\r\n      ```\r\n      @attribute z_index\r\n      @static\r\n      @type Number\r\n      @default 100\r\n    */\r\n    z_index: 100,\r\n    layer_type: 'chart'\r\n  });\r\n\r\n  d3.chart().Chart = src_Chart__Chart;\r\n  var src_Chart = src_Chart__Chart;\n\n  /**\r\n    Common base for creating components that includes helpers for positioning and layout.\r\n\r\n    ### Extending\r\n\r\n    `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n    Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n    - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n    - To layout a component within the chart, use `skip_layout: true` and the static `layer_type: 'chart'`\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Key', {\r\n      initialize: function() {\r\n        this.layer('Key', this.base, {\r\n          dataBind: function(data) {\r\n            return this.selectAll('text')\r\n              .data(data);\r\n          },\r\n          insert: function() {\r\n            return this.append('text');\r\n          },\r\n          events: {\r\n            merge: function() {\r\n              this.text(this.chart().keyText)\r\n            }\r\n          }\r\n        })\r\n      },\r\n\r\n      keyText: helpers.di(function(chart, d, i) {\r\n        return d.abbr + ' = ' + d.value;\r\n      })\r\n    });\r\n    ```\r\n    @class Component\r\n    @extends Base\r\n  */\r\n  var Component = Base.extend({\r\n    /**\r\n      Component's position relative to chart\r\n      (top, right, bottom, left)\r\n\r\n      @property position\r\n      @type String\r\n      @default 'top'\r\n    */\r\n    position: property({\r\n      default_value: 'top',\r\n      validate: function(value) {\r\n        return contains(['top', 'right', 'bottom', 'left'], value);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get/set the width of the component (in pixels)\r\n      (used in layout calculations)\r\n\r\n      @property width\r\n      @type Number\r\n      @default (actual width)\r\n    */\r\n    width: property({\r\n      default_value: function() {\r\n        return dimensions(this.base).width;\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get/set the height of the component (in pixels)\r\n      (used in layout calculations)\r\n\r\n      @property height\r\n      @type Number\r\n      @default (actual height)\r\n    */\r\n    height: property({\r\n      default_value: function() {\r\n        return dimensions(this.base).height;\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Margins (in pixels) around component\r\n\r\n      @property margins\r\n      @type Object\r\n      @default {top: 0, right: 0, bottom: 0, left: 0}\r\n    */\r\n    margins: property({\r\n      set: function(values) {\r\n        return {\r\n          override: getMargins(values)\r\n        };\r\n      },\r\n      default_value: getMargins()\r\n    }),\r\n\r\n    /**\r\n      Center the component vertically/horizontally (depending on position)\r\n\r\n      @property centered\r\n      @type Boolean\r\n      @default false\r\n    */\r\n    centered: property({\r\n      default_value: false\r\n    }),\r\n\r\n    /**\r\n      Skip component during layout calculations and positioning\r\n      (override in prototype of extension)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('NotLaidOut', {\r\n        skip_layout: true\r\n      });\r\n      ```\r\n      @attribute skip_layout\r\n      @type Boolean\r\n      @default false\r\n    */\r\n    skip_layout: false,\r\n\r\n    /**\r\n      Perform any layout preparation required before getLayout (default is draw)\r\n      (override in prototype of extension)\r\n\r\n      Note: By default, components are double-drawn;\r\n      for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n      This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('Custom', {\r\n        prepareLayout: function(data) {\r\n          // default: this.draw(data);\r\n          // so that getLayout has real dimensions\r\n\r\n          // -> custom preparation (if necessary)\r\n        }\r\n      })\r\n      ```\r\n      @method prepareLayout\r\n      @param {Any} data\r\n    */\r\n    prepareLayout: function(data) {\r\n      this.draw(data);\r\n    },\r\n\r\n    /**\r\n      Get layout details for use when laying out component\r\n      (override in prototype of extension)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('Custom', {\r\n        getLayout: function(data) {\r\n          var calculated_width, calculated_height;\r\n\r\n          // Perform custom calculations...\r\n\r\n          // Must return position, width, and height\r\n          return {\r\n            position: this.position(),\r\n            width: calculated_width,\r\n            height: calculated_height\r\n          };\r\n        }\r\n      });\r\n      ```\r\n      @method getLayout\r\n      @param {Any} data\r\n      @return {Object} position, width, and height for layout\r\n    */\r\n    getLayout: function(data) {\r\n      this.prepareLayout(data);\r\n\r\n      var margins = this.margins();\r\n      return {\r\n        position: this.position(),\r\n        width: this.width() + margins.left + margins.right,\r\n        height: this.height() + margins.top + margins.bottom\r\n      };\r\n    },\r\n\r\n    /**\r\n      Set layout of underlying base\r\n      (override in prototype of extension)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('Custom', {\r\n        setLayout: function(x, y, options) {\r\n          // Set layout of this.base...\r\n          // (the following is the default implementation)\r\n          var margins = this.margins();\r\n\r\n          // (handle this.centered())\r\n\r\n          this.base\r\n            .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n          this.height(options && options.height);\r\n          this.width(options && options.width);\r\n        }\r\n      });\r\n      ```\r\n      @method setLayout\r\n      @param {Number} x position of base top-left\r\n      @param {Number} y position of base top-left\r\n      @param {Object} options\r\n        @param {Object} [options.height] height of component in layout\r\n        @param {Object} [options.width] width of component in layout\r\n    */\r\n    setLayout: function(x, y, options) {\r\n      var margins = this.margins();\r\n\r\n      if (this.centered()) {\r\n        var actual_dimensions = dimensions(this.base);\r\n        if (options.height)\r\n          y += (options.height - actual_dimensions.height) / 2;\r\n        if (options.width)\r\n          x += (options.width - actual_dimensions.width) / 2;\r\n      }\r\n      else {\r\n        x += margins.left;\r\n        y += margins.top;\r\n      }\r\n\r\n      this.base.attr('transform', translate(x, y));\r\n      this.height(options && options.height);\r\n      this.width(options && options.width);\r\n    }\r\n  }, {\r\n    /**\r\n      Default z-index for component\r\n      (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('AboveChartLayers', {\r\n        // ...\r\n      }, {\r\n        z_index: 150\r\n      });\r\n      ```\r\n      @attribute z_index\r\n      @static\r\n      @type Number\r\n      @default 50\r\n    */\r\n    z_index: 50,\r\n\r\n    /**\r\n      Set to `'chart'` to use chart layer for component.\r\n      (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('ChartComponent', {\r\n        // ...\r\n      }, {\r\n        layer_type: 'chart'\r\n      });\r\n      ```\r\n      @attribute layer_type\r\n      @static\r\n      @type String\r\n      @default 'component'\r\n    */\r\n    layer_type: 'component'\r\n  });\r\n\r\n  d3.chart().Component = Component;\n\n  /**\r\n    Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n    ### Extending\r\n\r\n    Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n    - To adjust positioning, override `position`\r\n    - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Overlay').extend('ClosestPoints', {\r\n      // TODO\r\n    });\r\n    ```\r\n    @class Overlay\r\n    @extends Component\r\n  */\r\n  var Overlay = Component.extend({\r\n    initialize: function(options) {\r\n      Component.prototype.initialize.call(this, options);\r\n      this.base.attr('style', this.style());\r\n    },\r\n    skip_layout: true,\r\n\r\n    /**\r\n      Overlay's top-left x-position in px from left\r\n\r\n      @property x\r\n      @type Number\r\n      @default 0\r\n    */\r\n    x: property({\r\n      default_value: 0\r\n    }),\r\n\r\n    /**\r\n      Overlay's top-left y-position in px from top\r\n\r\n      @property y\r\n      @type Number\r\n      @default 0\r\n    */\r\n    y: property({\r\n      default_value: 0\r\n    }),\r\n\r\n    /**\r\n      Whether overlay is currently hidden\r\n\r\n      @property hidden\r\n      @type Boolean\r\n      @default true\r\n    */\r\n    hidden: property({\r\n      default_value: true\r\n    }),\r\n\r\n    /**\r\n      Overlays base styling\r\n      (default includes position and hidden)\r\n\r\n      @property style\r\n      @type String\r\n      @default set from x, y, and hidden\r\n    */\r\n    style: property({\r\n      default_value: function() {\r\n        var transform = translate(this.x() + 'px', this.y() + 'px');\r\n        var styles = {\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          '-webkit-transform': transform,\r\n          '-ms-transform': transform,\r\n          transform: transform\r\n        };\r\n\r\n        if (this.hidden())\r\n          styles.display = 'none';\r\n\r\n        return src_helpers__style(styles);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Position overlay layer at given x,y coordinates\r\n\r\n      @example\r\n      ```js\r\n      // Absolute, x: 100, y: 50\r\n      overlay.position(100, 50);\r\n      overlay.position({x: 100, y: 50});\r\n\r\n      // Relative-to-chart, x: 50, y: 40\r\n      overlay.position({chart: {x: 50, y: 40}});\r\n\r\n      // Relative-to-container, x: 75, y: 50\r\n      overlay.position({container: {x: 75, y: 50}});\r\n      ```\r\n      @method position\r\n      @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n      @param {Number} [y] in px from top\r\n    */\r\n    // TODO This conflicts with component.position(), might need a rename\r\n    position: function(position, y) {\r\n      if (arguments.length > 1) {\r\n        position = {\r\n          x: position,\r\n          y: y\r\n        };\r\n      }\r\n      else {\r\n        if ('container' in position) {\r\n          position = this.getAbsolutePosition(position.container);\r\n        }\r\n        else if ('chart' in position) {\r\n          if (this.container) {\r\n            var chart = this.container.chartPosition();\r\n            position = this.getAbsolutePosition({\r\n              x: position.chart.x + chart.left,\r\n              y: position.chart.y + chart.top\r\n            });\r\n          }\r\n          else {\r\n            position = this.getAbsolutePosition(position.chart);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.x(position.x).y(position.y);\r\n      this.base.attr('style', this.style());\r\n    },\r\n\r\n    /**\r\n      Show overlay (with `display: block`)\r\n\r\n      @method show\r\n    */\r\n    show: function() {\r\n      this.hidden(false);\r\n      this.base.attr('style', this.style());\r\n    },\r\n\r\n    /**\r\n      Hide overlay (with `display: none`)\r\n\r\n      @method hide\r\n    */\r\n    hide: function() {\r\n      this.hidden(true);\r\n      this.base.attr('style', this.style());\r\n    },\r\n\r\n    /**\r\n      Get absolute position from container position\r\n      (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n      @method getAbsolutePosition\r\n      @param {Object} container_position ({x, y})\r\n      @return {Object} absolute {x, y} relative to container div\r\n    */\r\n    getAbsolutePosition: function(container_position) {\r\n      var container = this.container && this.container.container;\r\n\r\n      if (container && this.container.responsive()) {\r\n        var container_dimensions = dimensions(container);\r\n        var chart_width = this.container.width();\r\n        var chart_height = this.container.height();\r\n        var width_ratio = container_dimensions.width / chart_width;\r\n        var height_ratio = container_dimensions.height / chart_height;\r\n\r\n        return {\r\n          x: width_ratio * container_position.x,\r\n          y: height_ratio * container_position.y\r\n        };\r\n      }\r\n      else {\r\n        // Not attached so can't get actual dimensions\r\n        // fallback to container position\r\n        return container_position;\r\n      }\r\n    }\r\n  }, {\r\n    layer_type: 'overlay'\r\n  });\r\n\r\n  d3.chart().Overlay = Overlay;\n\n  /*\r\n    Extract layout from the given options\r\n\r\n    @param {Array} options\r\n    @return {Object} {data, items, layout}\r\n  */\r\n  function extractLayout(options) {\r\n    if (!options)\r\n      return;\r\n\r\n    var data = {\r\n      _charts: {},\r\n      _components: {}\r\n    };\r\n    var items = {};\r\n    var layout = [];\r\n    var charts = [];\r\n    var components = [];\r\n\r\n    // TEMP Idenfify charts from layered,\r\n    // eventually no distinction between charts and components\r\n    var found = {\r\n      row: false,\r\n      charts: false\r\n    };\r\n\r\n    // Components are added from inside-out\r\n    // so for position: top, position: left, use unshift\r\n    options.forEach(function(row, row_index) {\r\n      var row_components = [];\r\n\r\n      if (!Array.isArray(row))\r\n        row = [row];\r\n      if (row.length > 1)\r\n        found.row = true;\r\n\r\n      var row_layout = row.map(function(item, col_index) {\r\n        if (!item)\r\n          return;\r\n\r\n        if (item._layered) {\r\n          // Charts\r\n          found.charts = found.row = true;\r\n          var chart_ids = [];\r\n\r\n          item.items.forEach(function(chart, chart_index) {\r\n            if (!chart)\r\n              return;\r\n\r\n            chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\r\n\r\n            chart_ids.push(chart.id);\r\n            charts.push(chart);\r\n            items[chart.id] = chart;\r\n          });\r\n\r\n          return chart_ids;\r\n        }\r\n\r\n        var component = prepareComponent(item, row_index, col_index);\r\n        items[component.id] = component;\r\n\r\n        if (row.length > 1) {\r\n          if (!found.charts) {\r\n            // Left\r\n            setPosition(component, 'left');\r\n            row_components.unshift(component);\r\n          }\r\n          else {\r\n            // Right\r\n            setPosition(component, 'right');\r\n            row_components.push(component);\r\n          }\r\n        }\r\n        else {\r\n          if (!found.row) {\r\n            // Top\r\n            setPosition(component, 'top');\r\n            components.unshift(component);\r\n          }\r\n          else {\r\n            // Bottom\r\n            setPosition(component, 'bottom');\r\n            components.push(component);\r\n          }\r\n        }\r\n\r\n        return component.id;\r\n      });\r\n\r\n      if (row_components.length)\r\n        components = components.concat(row_components);\r\n\r\n      layout.push(row_layout);\r\n    });\r\n\r\n    charts.forEach(extractData('_charts'));\r\n    components.forEach(extractData('_components'));\r\n\r\n    return {\r\n      data: data,\r\n      items: items,\r\n      layout: layout,\r\n\r\n      charts: charts,\r\n      components: components\r\n    };\r\n\r\n    function prepareComponent(component, row_index, col_index) {\r\n      return defaults({}, component, {id: getId(row_index, col_index)});\r\n    }\r\n    function setPosition(component, position) {\r\n      if (component && isFunction(component.position))\r\n        component.position(position);\r\n      else\r\n        component.position = position;\r\n    }\r\n    function getId(row_index, col_index, layered_index) {\r\n      var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\r\n      if (layered_index != null)\r\n        id += '-' + (layered_index + 1);\r\n\r\n      return id;\r\n    }\r\n\r\n    function extractData(type) {\r\n      return function(item) {\r\n        if (item.data && !isFunction(item.data)) {\r\n          data[type][item.id] = item.data;\r\n          data[item.id] = item.data;\r\n          delete item.data;\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  /*\r\n    Calculate component and chart coordinates for given layout\r\n  */\r\n  function calculateLayout(components, data, demux) {\r\n    var overall_layout = {top: [], right: [], bottom: [], left: []};\r\n    components.forEach(function(component) {\r\n      if (component.skip_layout || !component.getLayout)\r\n        return;\r\n\r\n      var layout = component.getLayout(demux(component.id, data));\r\n      var position = layout && layout.position;\r\n\r\n      if (!contains(['top', 'right', 'bottom', 'left'], position))\r\n        return;\r\n\r\n      overall_layout[position].push({\r\n        offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\r\n        component: component\r\n      });\r\n    });\r\n\r\n    return overall_layout;\r\n  }\r\n\r\n  /*\r\n    Apply calculated layout to charts and components\r\n  */\r\n  function applyLayout(layout, chart_position, width, height) {\r\n    layout.top.reduce(function(previous, part) {\r\n      var y = previous - part.offset;\r\n      setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n      return y;\r\n    }, chart_position.top);\r\n\r\n    layout.right.reduce(function(previous, part, index, parts) {\r\n      var previousPart = parts[index - 1] || {offset: 0};\r\n      var x = previous + previousPart.offset;\r\n      setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n      return x;\r\n    }, width - chart_position.right);\r\n\r\n    layout.bottom.reduce(function(previous, part, index, parts) {\r\n      var previousPart = parts[index - 1] || {offset: 0};\r\n      var y = previous + previousPart.offset;\r\n      setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n      return y;\r\n    }, height - chart_position.bottom);\r\n\r\n    layout.left.reduce(function(previous, part) {\r\n      var x = previous - part.offset;\r\n      setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n      return x;\r\n    }, chart_position.left);\r\n\r\n    function setLayout(component, x, y, options) {\r\n      if (component && isFunction(component.setLayout))\r\n        component.setLayout(x, y, options);\r\n    }\r\n  }\n\n  var default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n  /**\r\n    Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n    Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n    @example\r\n    ```html\r\n    <div id=\"#chart\"></div>\r\n    ```\r\n    ```js\r\n    var chart = d3.select('#chart').chart('Compose', function(data) {\r\n      // Process data...\r\n\r\n      // Create shared scales\r\n      var scales = {\r\n        x: {data: data.input, key: 'x', adjacent: true},\r\n        y: {data: data.input, key: 'y'},\r\n        y2: {data: data.output, key: 'y'}\r\n      };\r\n\r\n      // Setup charts and components\r\n      var charts = [\r\n        d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\r\n        d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\r\n      ];\r\n\r\n      var title = d3c.title('d3.compose');\r\n      var xAxis = d3c.axis('xAxis', {scale: scales.x});\r\n      var yAxis = d3c.axis('yAxis', {scale: scales.y});\r\n      var y2Axis = d3c.axis('y2Axis', {scale: scales.y2});\r\n\r\n      // Layout charts and components\r\n      return [\r\n        title,\r\n        [yAxis, d3c.layered(charts), y2Axis],\r\n        xAxis\r\n      ];;\r\n    });\r\n\r\n    chart.draw({input: [...], output: [...]});\r\n    ```\r\n    @class Compose\r\n    @extends Base\r\n  */\r\n  var Compose = Base.extend({\r\n    initialize: function(options) {\r\n      Base.prototype.initialize.call(this, options);\r\n\r\n      // Responsive svg based on the following approach (embedded + padding hack)\r\n      // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n      // (not enabled if selection is svg)\r\n      if (this.base.node().tagName != 'svg') {\r\n        this.container = this.base.append('div')\r\n          .attr('class', 'chart-compose-container');\r\n\r\n        this.base = this.container.append('svg')\r\n          .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n          .attr('version', '1.1')\r\n          .attr('class', 'chart-compose');\r\n      }\r\n      else {\r\n        this.base.classed('chart-compose', true);\r\n      }\r\n\r\n      this.attachHoverListeners();\r\n    },\r\n\r\n    transform: function(data) {\r\n      // Save raw data for redraw\r\n      this.rawData(data);\r\n      return Base.prototype.transform.call(this, data);\r\n    },\r\n\r\n    /**\r\n      Get/set the options `object/function` for the chart that takes `data` and\r\n      returns `[...layout]` for composing child charts and components.\r\n\r\n      @example\r\n      ```js\r\n      // get\r\n      chart.options();\r\n\r\n      // set (static)\r\n      chart.options([\r\n        // ...\r\n      ]);\r\n\r\n      // set (dynamic, takes data and returns options)\r\n      chart.options(function(data) {\r\n        // process data...\r\n\r\n        return [\r\n          // ...\r\n        ];\r\n      });\r\n\r\n      // Set directly from d3.chart creation\r\n      d3.select('#chart')\r\n        .chart('Compose', function(data) {\r\n          // ...\r\n        });\r\n      ```\r\n      @property options\r\n      @type Function|Object\r\n    */\r\n    options: property({\r\n      default_value: function() { return function() {}; },\r\n      set: function(options) {\r\n        // If options is plain object,\r\n        // return from generic options function\r\n        if (!isFunction(options)) {\r\n          return {\r\n            override: function() {\r\n              return options;\r\n            }\r\n          };\r\n        }\r\n      }\r\n    }),\r\n\r\n    // Store raw data for container before it has been transformed\r\n    rawData: property(),\r\n\r\n    /**\r\n      Margins between edge of container and components/chart\r\n\r\n      @example\r\n      ```js\r\n      chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n      ```\r\n      @property margins\r\n      @type Object {top, right, bottom, left}\r\n      @default {top: 10, right: 10, bottom: 10, left: 10}\r\n    */\r\n    margins: property({\r\n      default_value: default_compose_margins,\r\n      set: function(values) {\r\n        return {\r\n          override: getMargins(values, default_compose_margins)\r\n        };\r\n      }\r\n    }),\r\n\r\n    // Chart position\r\n    chartPosition: property({\r\n      default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n      set: function(values) {\r\n        return {\r\n          override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n        };\r\n      },\r\n      get: function(values) {\r\n        values.width = this._width() - values.right - values.left;\r\n        values.height = this._height() - values.bottom - values.top;\r\n\r\n        return values;\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get/set overall width of chart\r\n\r\n      @property width\r\n      @type Number\r\n    */\r\n    width: property({\r\n      default_value: null\r\n    }),\r\n\r\n    /**\r\n      Get/set overall height of chart\r\n\r\n      @property height\r\n      @type Number\r\n    */\r\n    height: property({\r\n      default_value: null\r\n    }),\r\n\r\n    _width: function() {\r\n      var width = this.width();\r\n      return width != null ? width : Base.prototype.width.call(this);\r\n    },\r\n    _height: function() {\r\n      var height = this.height();\r\n      return height != null ? height : Base.prototype.height.call(this);\r\n    },\r\n\r\n    /**\r\n      Enable responsive container + viewBox so that chart scales to fill width\r\n      (only works if selection is not an svg)\r\n\r\n      @property responsive\r\n      @type Boolean\r\n      @default true\r\n    */\r\n    responsive: property({\r\n      default_value: true\r\n    }),\r\n\r\n    // Set svg viewBox attribute\r\n    viewBox: property({\r\n      default_value: function() {\r\n        if (this.responsive() && this.width() && this.height())\r\n          return '0 0 ' + this.width() + ' ' + this.height();\r\n        else\r\n          return null;\r\n      }\r\n    }),\r\n\r\n    // Set svg preserveAspectRatio attribute\r\n    preserveAspectRatio: property({\r\n      default_value: function() {\r\n        if (this.responsive())\r\n          return 'xMidYMid meet';\r\n        else\r\n          return null;\r\n      }\r\n    }),\r\n\r\n    // Set container style\r\n    containerStyle: property({\r\n      default_value: function() {\r\n        if (this.responsive()) {\r\n          var aspect_ratio = 1;\r\n          if (this.width() && this.height())\r\n            aspect_ratio = this.height() / this.width();\r\n\r\n          return src_helpers__style({\r\n            width: '100%',\r\n            height: 0,\r\n            'padding-top': (aspect_ratio * 100) + '%',\r\n            position: 'relative'\r\n          });\r\n        }\r\n        else {\r\n          return src_helpers__style({position: 'relative'});\r\n        }\r\n      }\r\n    }),\r\n\r\n    // Set base style\r\n    baseStyle: property({\r\n      default_value: function() {\r\n        if (this.responsive() && this.container) {\r\n          return src_helpers__style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0\r\n          });\r\n        }\r\n        else {\r\n          return null;\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Set charts from options or get chart instances.\r\n      Each chart should use a unique key so that updates are passed to the existing chart\r\n      (otherwise they are recreated on update).\r\n      The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n      @example\r\n      ```js\r\n      chart.charts([\r\n        {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n        {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n      ]);\r\n      ```\r\n      @property charts\r\n      @type Array\r\n    */\r\n    charts: property({\r\n      set: function(chart_options, charts) {\r\n        // Store actual charts rather than options\r\n        return {\r\n          override: this._attachItems(chart_options, charts, this)\r\n        };\r\n      },\r\n      default_value: []\r\n    }),\r\n\r\n    /**\r\n      Set components from options or get components instances.\r\n      Each component should use a unique key so that updates are passed to the existing chart\r\n      (otherwise they are recreated on update).\r\n      The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n      @example\r\n      ```js\r\n      chart.components([\r\n        {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n        {id: 'title', type: 'Title'} // options to pass to Title component\r\n      ])\r\n      ```\r\n      @property components\r\n      @type Array\r\n    */\r\n    components: property({\r\n      set: function(component_options, components) {\r\n        // Store actual components rather than options\r\n        return {\r\n          override: this._attachItems(component_options, components, this)\r\n        };\r\n      },\r\n      default_value: []\r\n    }),\r\n\r\n    /**\r\n      Delay start of transition by specified milliseconds.\r\n      (applied to all charts and components as default)\r\n\r\n      @property delay\r\n      @type Number|Function\r\n      @default d3 default: 0\r\n    */\r\n    delay: property(),\r\n\r\n    /**\r\n      Transition duration in milliseconds.\r\n      (applied to all charts and components as default)\r\n\r\n      @property duration\r\n      @type Number|Function\r\n      @default d3 default: 250ms\r\n    */\r\n    duration: property(),\r\n\r\n    /**\r\n      Transition ease function.\r\n      (applied to all charts and components as default)\r\n\r\n      - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n      - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n      @property ease\r\n      @type String|Function\r\n      @default d3 default: 'cubic-in-out'\r\n    */\r\n    ease: property(),\r\n\r\n    /**\r\n      Draw chart with given data\r\n\r\n      @example\r\n      ```js\r\n      var chart = d3.select('#chart')\r\n        .chart('Compose', function(data) {\r\n          // ...\r\n        });\r\n\r\n      chart.draw([1, 2, 3]);\r\n\r\n      chart.draw({values: [1, 2, 3]});\r\n\r\n      chart.draw([\r\n        {values: [1, 2, 3]},\r\n        {values: [4, 5, 6]}\r\n      ]);\r\n      ```\r\n      @method draw\r\n      @param {Any} data\r\n    */\r\n    draw: function(data) {\r\n      var config = this._prepareConfig(this.options(), data);\r\n      if (!config)\r\n        config = {data: {_charts: {}, _components: {}}, layout: []};\r\n\r\n      // Set charts and components from config\r\n      this.charts(config.charts);\r\n      this.components(config.components);\r\n\r\n      // Add config data\r\n      data = {\r\n        original: data,\r\n        config: config.data\r\n      };\r\n      this.data(data);\r\n\r\n      this._setDimensions();\r\n\r\n      // Layout components\r\n      this.layout(config.layout, data);\r\n\r\n      // Full draw now that everything has been laid out\r\n      d3.chart().prototype.draw.call(this, data);\r\n    },\r\n\r\n    /**\r\n      Redraw chart with current data\r\n\r\n      @method redraw\r\n    */\r\n    redraw: function() {\r\n      if (this.rawData())\r\n        this.draw(this.rawData().original);\r\n    },\r\n\r\n    demux: function(name, data) {\r\n      if (!data || !data.config || !data.original)\r\n        return data;\r\n\r\n      if (findById(this.charts(), name) && data.config._charts[name])\r\n        return data.config._charts[name];\r\n      else if (findById(this.components(), name) && data.config._components[name])\r\n        return data.config._components[name];\r\n      else\r\n        return data.original;\r\n    },\r\n\r\n    // Create chart layer (for laying out charts)\r\n    createChartLayer: function(options) {\r\n      return this.base.append('g')\r\n        .attr('class', 'chart-layer')\r\n        .attr('data-zIndex', options && options.z_index);\r\n    },\r\n\r\n    // Create component layer\r\n    createComponentLayer: function(options) {\r\n      return this.base.append('g')\r\n        .attr('class', 'chart-component-layer')\r\n        .attr('data-zIndex', options && options.z_index);\r\n    },\r\n\r\n    // Create overlay layer\r\n    createOverlayLayer: function() {\r\n      if (!this.container)\r\n        throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n      return this.container.append('div')\r\n        .attr('class', 'chart-overlay-layer');\r\n    },\r\n\r\n    // Layout components and charts for given data\r\n    layout: function(layout, data) {\r\n      // 1. Place chart layers\r\n      this._positionChartLayers();\r\n\r\n      // 2. Extract layout from components\r\n      layout = this._extractLayout(data);\r\n\r\n      // 3. Set chart position from layout\r\n      var chart_position = extend({}, this.margins());\r\n      objectEach(layout, function(parts, key) {\r\n        parts.forEach(function(part) {\r\n          chart_position[key] += part.offset || 0;\r\n        });\r\n      });\r\n      this.chartPosition(chart_position);\r\n\r\n      // 4. Position layers with layout\r\n      this.positionLayers(layout);\r\n    },\r\n\r\n    attachHoverListeners: function() {\r\n      // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n      // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n      var trigger = this.trigger.bind(this);\r\n      var chartPosition = this.chartPosition.bind(this);\r\n      var container = this.container || this.base;\r\n      var base = this.base.node();\r\n      var chart_position, bounds, was_inside;\r\n\r\n      container.on('mouseenter', function() {\r\n        // Calculate chart position and bounds on enter and cache during move\r\n        chart_position = chartPosition();\r\n        bounds = getBounds();\r\n\r\n        was_inside = inside(bounds);\r\n        if (was_inside)\r\n          enter();\r\n      });\r\n      container.on('mousemove', function() {\r\n        // Mousemove may fire before mouseenter in IE\r\n        if (!chart_position || !bounds) {\r\n          chart_position = chartPosition();\r\n          bounds = getBounds();\r\n        }\r\n\r\n        var is_inside = inside(bounds);\r\n        if (was_inside && is_inside)\r\n          move();\r\n        else if (was_inside)\r\n          leave();\r\n        else if (is_inside)\r\n          enter();\r\n\r\n        was_inside = is_inside;\r\n      });\r\n      container.on('mouseleave', function() {\r\n        if (was_inside) {\r\n          was_inside = false;\r\n          leave();\r\n        }\r\n      });\r\n\r\n      function inside() {\r\n        var mouse = d3.mouse(document.documentElement);\r\n        return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n      }\r\n      function enter() {\r\n        trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n      }\r\n      function move() {\r\n        trigger('mousemove', translateToXY(d3.mouse(base)));\r\n      }\r\n      function leave() {\r\n        trigger('mouseleave');\r\n      }\r\n\r\n      function translateToXY(coordinates) {\r\n        var x = coordinates[0];\r\n        var y = coordinates[1];\r\n        var chart_x = x - chart_position.left;\r\n        var chart_y = y - chart_position.top;\r\n\r\n        // Set at chart bounds if outside of chart\r\n        if (x > (chart_position.left + chart_position.width))\r\n          chart_x = chart_position.width;\r\n        else if (x < chart_position.left)\r\n          chart_x = 0;\r\n\r\n        if (y > (chart_position.top + chart_position.height))\r\n          chart_y = chart_position.height;\r\n        else if (y < chart_position.top)\r\n          chart_y = 0;\r\n\r\n        return {\r\n          container: {x: x, y: y},\r\n          chart: {x: chart_x, y: chart_y}\r\n        };\r\n      }\r\n\r\n      function getBounds() {\r\n        var scroll_y = 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop;\r\n\r\n        bounds = extend({}, base.getBoundingClientRect());\r\n        bounds.top += scroll_y;\r\n        bounds.bottom += scroll_y;\r\n\r\n        return bounds;\r\n      }\r\n    },\r\n\r\n    // Attach chart/component child item with id\r\n    attach: function(id, item) {\r\n      item.id = id;\r\n      item.base.attr('data-id', id);\r\n      item.container = this;\r\n\r\n      Base.prototype.attach.call(this, id, item);\r\n\r\n      if (item && isFunction(item.trigger))\r\n        item.trigger('attach');\r\n    },\r\n\r\n    // Detach chart/component child item by id\r\n    detach: function(id, item) {\r\n      item.base.remove();\r\n\r\n      delete this._attached[id];\r\n\r\n      if (item && isFunction(item.trigger))\r\n        item.trigger('detach');\r\n    },\r\n\r\n    // Position chart and component layers\r\n    positionLayers: function(layout) {\r\n      this._positionChartLayers();\r\n      this._positionComponents(layout);\r\n      this._positionByZIndex();\r\n    },\r\n\r\n    //\r\n    // Internal\r\n    //\r\n\r\n    _setDimensions: function() {\r\n      // Set container and svg dimensions\r\n      // (if original selection is svg, no container and skip responsiveness)\r\n      if (this.container) {\r\n        this.container\r\n          .attr('style', this.containerStyle());\r\n      }\r\n\r\n      this.base\r\n        .attr('viewBox', this.viewBox())\r\n        .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n        .attr('style', this.baseStyle())\r\n        .attr('width', this.responsive() ? null : this.width())\r\n        .attr('height', this.responsive() ? null : this.height());\r\n    },\r\n\r\n    _attachItems: function(items, container, context) {\r\n      items = items || [];\r\n      container = container || [];\r\n\r\n      // Remove charts that are no longer needed\r\n      var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n      remove_ids.forEach(function(remove_id) {\r\n        context.detach(remove_id, findById(container, remove_id));\r\n      });\r\n\r\n      // Create or update charts\r\n      return items.map(function(options) {\r\n        // TODO May not have id, might need to auto-generate\r\n        // (might be during another step)\r\n        var id = options.id;\r\n        var item = findById(container, id);\r\n\r\n        if (options instanceof d3.chart()) {\r\n          // If chart instance, replace with instance\r\n          if (item)\r\n            context.detach(id, item);\r\n\r\n          context.attach(id, options);\r\n          return options;\r\n        }\r\n        else {\r\n          // TEMP Changing position has nasty side effects, disable for now\r\n          var changed_position = item && !(item instanceof Overlay) && item.position && options.position && item.position() != options.position;\r\n\r\n          if (item && (item.type != options.type || changed_position)) {\r\n            // If chart type has changed, detach and re-create\r\n            context.detach(id, item);\r\n            item = undefined;\r\n          }\r\n\r\n          if (!item) {\r\n            var Item = d3.chart(options.type);\r\n\r\n            if (!Item)\r\n              throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n            var layer_options = {z_index: Item.z_index || 0};\r\n            var createLayer = {\r\n              'chart': 'createChartLayer',\r\n              'component': 'createComponentLayer',\r\n              'overlay': 'createOverlayLayer'\r\n            }[Item.layer_type];\r\n\r\n            if (!createLayer)\r\n              throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n            var base = context[createLayer](layer_options);\r\n\r\n            item = new Item(base, options);\r\n            item.type = options.type;\r\n\r\n            context.attach(id, item);\r\n          }\r\n          else {\r\n            item.options(options);\r\n          }\r\n\r\n          return item;\r\n        }\r\n      });\r\n    },\r\n\r\n    _prepareConfig: function(options, data) {\r\n      return extractLayout(options(data));\r\n    },\r\n\r\n    _positionChartLayers: function() {\r\n      var position = this.chartPosition();\r\n      this.base.selectAll('.chart-layer')\r\n        .attr('transform', translate(position.left, position.top))\r\n        .attr('width', position.width)\r\n        .attr('height', position.height);\r\n    },\r\n\r\n    _positionComponents: function(layout) {\r\n      var chart_position = this.chartPosition();\r\n      var width = this._width();\r\n      var height = this._height();\r\n\r\n      applyLayout(layout, chart_position, width, height);\r\n    },\r\n\r\n    _positionByZIndex: function() {\r\n      var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n      // Sort by z-index\r\n      function setZIndex(layer) {\r\n        return {\r\n          layer: layer,\r\n          zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n        };\r\n      }\r\n      function sortZIndex(a, b) {\r\n        if (a.zIndex < b.zIndex)\r\n          return -1;\r\n        else if (a.zIndex > b.zIndex)\r\n          return 1;\r\n        else\r\n          return 0;\r\n      }\r\n      function getLayer(wrapped) {\r\n        return wrapped.layer;\r\n      }\r\n\r\n      layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n      // Move layers to z-index order\r\n      layers.forEach(function(layer) {\r\n        if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n          layer.parentNode.appendChild(layer);\r\n      });\r\n    },\r\n\r\n    _extractLayout: function(data) {\r\n      return calculateLayout(this.components(), data, this.demux.bind(this));\r\n    }\r\n  });\r\n\r\n  // TODO Find better place for this\r\n  function layered(items) {\r\n    if (!Array.isArray(items))\r\n      items = Array.prototype.slice.call(arguments);\r\n\r\n    return {_layered: true, items: items};\r\n  }\r\n\r\n  function findById(items, id) {\r\n    return find(items, function(item) {\r\n      return item.id == id;\r\n    });\r\n  }\r\n\r\n  d3.chart().Compose = Compose;\n\n  var d3c = d3.compose = {\r\n    VERSION: '0.15.7',\r\n    utils: utils,\r\n    helpers: helpers,\r\n    Base: Base,\r\n    Chart: src_Chart,\r\n    Component: Component,\r\n    Overlay: Overlay,\r\n    Compose: Compose,\r\n    layered: layered\r\n  };\r\n\r\n  var _index = d3c;\n\n  return _index;\n\n}));\n","// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nexport var slice = Array.prototype.slice;\r\nexport var toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function inherits(Child, Parent) {\r\n  Child.prototype = Object.create(Parent.prototype, {\r\n    constructor: {\r\n      value: Child,\r\n      enumerable: false,\r\n      writeable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n\r\n  if (Object.setPrototypeOf) {\r\n    Object.setPrototypeOf(Child, Parent);\r\n  }\r\n  else {\r\n    Child.__proto__ = Parent; //eslint-disable-line no-proto\r\n\r\n    // __proto__ isn't supported in IE,\r\n    // use one-time copy of static properties to approximate\r\n    defaults(Child, Parent);\r\n  }\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  slice: slice,\r\n  toString: toString,\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  inherits: inherits,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\r\n  isFunction,\r\n  isUndefined,\r\n  valueOrDefault\r\n} from '../utils';\r\nvar unique_index = 0;\r\n\r\n/**\r\n  Helper for creating properties for charts/components\r\n\r\n  @example\r\n  ```javascript\r\n  var Custom = d3.chart('Chart').extend('Custom', {\r\n    // Create property that's stored internally as 'simple'\r\n    simple: property()\r\n  });\r\n  var custom; // = new Custom(...);\r\n\r\n  // set\r\n  custom.simple('Howdy');\r\n\r\n  // get\r\n  console.log(custom.simple()); // -> 'Howdy'\r\n\r\n  // Advanced\r\n  // --------\r\n  // Default values:\r\n  Custom.prototype.message = property({\r\n    default_value: 'Howdy!'\r\n  });\r\n\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n  custom.message('Goodbye');\r\n  console.log(custom.message()); // -> 'Goodbye'\r\n\r\n  // Set to undefined to reset to default value\r\n  custom.message(undefined);\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n\r\n  // Computed default value:\r\n  Custom.property.computed = property({\r\n    default_value: function() {\r\n      // \"this\" = Custom instance\r\n      return this.message();\r\n    }\r\n  });\r\n\r\n  // Function default value:\r\n  // For function default_values, wrap in function to differentiate from computed\r\n  Custom.property.fn = property({\r\n    default_value: function() {\r\n      return function defaultFn() {};\r\n    }\r\n    // The following would be incorrectly evaluated\r\n    // default_value: function defaultFn() {}\r\n  })\r\n\r\n  // Custom getter:\r\n  Custom.prototype.exclaimed = property({\r\n    get: function(value) {\r\n      // Value is the underlying set value\r\n      return value + '!';\r\n    }\r\n  });\r\n\r\n  custom.exclaimed('Howdy');\r\n  console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n  // Custom setter:\r\n  Custom.prototype.feeling = property({\r\n    set: function(value, previous) {\r\n      if (value == 'Hate') {\r\n        // To override value, return Object with override specified\r\n        return {\r\n          override: 'Love',\r\n\r\n          // To do something after override, use after callback\r\n          after: function() {\r\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    custom.feeling('Hate'); // -> 'After: Love'\r\n    console.log(custom.feeling()); // -> 'Love'\r\n  });\r\n  ```\r\n  @method property\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`). If default value is a function, wrap in another function as default_value is evaluated by default.\r\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n  @return {Function} `()`: get, `(value)`: set\r\n*/\r\nexport default function property(options) {\r\n  // DEPRECATED: name as first argument\r\n  if (arguments.length == 2) {\r\n    if (typeof console != 'undefined' && console.warn)\r\n      console.warn('DEPRECATED - name argument for property is no longer supported will be removed in the next version of d3.compose');\r\n    options = arguments[1];\r\n  }\r\n\r\n  options = options || {};\r\n  var id = 'property_' + unique_index++;\r\n\r\n  var property = function(value) {//eslint-disable-line no-shadow\r\n    var properties = this.__properties = this.__properties || {};\r\n    var context = valueOrDefault(property.context, this);\r\n\r\n    if (arguments.length)\r\n      return set.call(this);\r\n    else\r\n      return get.call(this);\r\n\r\n    function get() {\r\n      value = properties[id];\r\n\r\n      if (isUndefined(value)) {\r\n        // Use default value and unwrap if it's a function\r\n        value = property.default_value;\r\n        if (isFunction(value))\r\n          value = value.call(context);\r\n      }\r\n\r\n      return isFunction(options.get) ? options.get.call(context, value) : value;\r\n    }\r\n\r\n    function set() {\r\n      // Validate\r\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(context, value))\r\n        throw new Error('Invalid value for property: ' + JSON.stringify(value));\r\n\r\n      var previous = properties[id];\r\n      properties[id] = value;\r\n\r\n      if (isFunction(options.set) && !isUndefined(value)) {\r\n        var response = options.set.call(context, value, previous);\r\n\r\n        if (response && 'override' in response)\r\n          properties[id] = response.override;\r\n        if (response && isFunction(response.after))\r\n          response.after.call(context, properties[id]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // For checking if function is a property\r\n  property.is_property = true;\r\n  property.id = id;\r\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n  property.default_value = options.default_value;\r\n  property.context = options.context;\r\n  property.options = options;\r\n\r\n  return property;\r\n}\r\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector.\r\n  Checks dimensions from css, attributes, and bounding box.\r\n\r\n  @method dimensions\r\n  @for helpers\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from '../helpers';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Calculate domain for data\r\n  var scale = createScale({\r\n    type: 'log',\r\n    data: [{y: 1}, {y: 100}, {y: 2000}, {y: 5000}],\r\n    key: 'y'\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05] // -> rangeRoundBands([0, 100], 0.1, 0.05)\r\n  });\r\n\r\n  // Use ordinal + adjacent for bar charts\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    adjacent: true,\r\n    domain: ['a', 'b', 'c'],\r\n    series: 2 // Series count is required for adjacent if data isn't given\r\n  })\r\n  ```\r\n  @method createScale\r\n  @for helpers\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import {\r\n  objectEach,\r\n  slice\r\n} from '../utils';\r\n\r\n/**\r\n  Combine mixins with Parent super class for extension\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  var Custom = mixin(Chart, a, b, c).extend({\r\n    initialize: function(options) {\r\n      this._super.initialize.call(this, options);\r\n      // d\r\n    },\r\n    transform: function(data) {\r\n      data = this._super.transform.call(this, data);\r\n      // d\r\n    }\r\n  });\r\n\r\n  // initialize: Chart, b, d\r\n  // transform: Chart, a, d\r\n  ```\r\n  @method mixin\r\n  @for helpers\r\n  @param {Function} Parent\r\n  @param {...Object} ...mixins\r\n  @return {Function}\r\n*/\r\nexport default function mixin(Parent/*, ...mixins*/) {\r\n  var mixins = slice.call(arguments, 1);\r\n  var initializes = [];\r\n  var transforms = [];\r\n  var mixed = {};\r\n\r\n  mixins.forEach(function(mix) {\r\n    objectEach(mix, function(value, key) {\r\n      if (key == 'initialize')\r\n        initializes.push(value);\r\n      else if (key == 'transform')\r\n        transforms.push(value);\r\n      else\r\n        mixed[key] = value;\r\n    });\r\n  });\r\n\r\n  if (initializes.length) {\r\n    mixed.initialize = function initialize() {\r\n      var args = slice.call(arguments);\r\n      Parent.prototype.initialize.apply(this, args);\r\n      initializes.forEach(function(init) {\r\n        init.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n\r\n  if (transforms.length) {\r\n    mixed.transform = function transform(data) {\r\n      data = Parent.prototype.transform.call(this, data);\r\n      return transforms.reduce(function(memo, trans) {\r\n        return trans.call(this, memo);\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return Parent.extend(mixed);\r\n}\r\n","import { extend } from '../utils';\r\nimport { translate } from '../helpers';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack())\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack({\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n  @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n  @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n  @return {Function}\r\n*/\r\nexport default function stack(options) {\r\n  options = extend({\r\n    direction: 'vertical',\r\n    origin: 'top',\r\n    padding: 0,\r\n    min_height: 0,\r\n    min_width: 0\r\n  }, options);\r\n\r\n  // Ensure valid origin based on direction\r\n  if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n    options.origin = 'left';\r\n  else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n    options.origin = 'top';\r\n\r\n  function padding(i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  return function(elements) {\r\n    if (elements && elements.attr) {\r\n      var previous = 0;\r\n\r\n      elements.attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n        var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n        var x = 0;\r\n        var y = 0;\r\n        var next_position;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          next_position = previous + spacing_width + padding(i);\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(i);\r\n          else\r\n            x = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n        else {\r\n          next_position = previous + spacing_height + padding(i);\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(i);\r\n          else\r\n            y = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  defaults,\r\n  extend,\r\n  first,\r\n  isNumber,\r\n  isObject,\r\n  objectEach\r\n} from './utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './helpers/property';\r\nimport dimensions from './helpers/dimensions';\r\nimport createScale from './helpers/create-scale';\r\nimport mixin from './helpers/mixin';\r\nimport stack from './helpers/stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Get formatted margins for varying input\r\n\r\n  @method getMargins\r\n  @example\r\n  ```js\r\n  getMargins(4);\r\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n  getMargins({top: 20}, {top: 8, bottom: 8});\r\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n  ```\r\n  @param {Number|Object} margins\r\n  @param {Object} default_margins\r\n  @return {Object}\r\n*/\r\nexport function getMargins(margins, default_margins) {\r\n  if (isNumber(margins))\r\n    return {top: margins, right: margins, bottom: margins, left: margins};\r\n  else\r\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  getMargins: getMargins,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  extend,\r\n  inherits,\r\n  isString,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\nvar Chart = d3.chart();\r\n\r\n// TEMP Clear namespace from mixins\r\n/**\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nfunction Base(selection, options) {\r\n  // d3.chart() constructor without transform and initialize cascade\r\n  this.base = selection;\r\n  this._layers = {};\r\n  this._attached = {};\r\n  this._events = {};\r\n\r\n  // Bind all di-functions to this chart\r\n  bindAllDi(this);\r\n\r\n  // Set options (and properties with set_from_options)\r\n  if (options)\r\n    this.options(options);\r\n\r\n  // Initialize Chart (relies on explicitly calling super in initialize)\r\n  this.initialize(options);\r\n}\r\n\r\ninherits(Base, Chart);\r\n\r\nextend(Base.prototype, {\r\n  initialize: function() {},\r\n  transform: function(data) {\r\n    return data;\r\n  },\r\n  demux: function(name, data) { return data; },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    // Transform data (relies on explicitly calling super in transform)\r\n    data = this.transform(data);\r\n\r\n    // Store fully-transformed data for reference\r\n    this.data(data);\r\n\r\n    this.trigger('before:draw', data);\r\n\r\n    objectEach(this._layers, function(layer) {\r\n      layer.draw(data);\r\n    });\r\n    objectEach(this._attached, function(attachment, name) {\r\n      attachment.draw(this.demux(name, data));\r\n    }, this);\r\n\r\n    this.trigger('draw', data);\r\n  },\r\n\r\n  // Explicitly load d3.chart prototype\r\n  layer: Chart.prototype.layer,\r\n  unlayer: Chart.prototype.unlayer,\r\n  attach: Chart.prototype.attach,\r\n  on: Chart.prototype.on,\r\n  once: Chart.prototype.once,\r\n  off: Chart.prototype.off,\r\n  trigger: Chart.prototype.trigger,\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property(),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property(),\r\n      b: property({\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property({\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  }\r\n});\r\n\r\nBase.extend = function(proto_props, static_props) {\r\n  // name may be first parameter for d3.chart usage\r\n  var name;\r\n  if (isString(proto_props)) {\r\n    name = proto_props;\r\n    proto_props = static_props;\r\n    static_props = arguments[2];\r\n  }\r\n\r\n  var Parent = this;\r\n  var Child;\r\n\r\n  if (proto_props && proto_props.hasOwnProperty('constructor')) {\r\n    Child = proto_props.constructor;\r\n\r\n    // inherits sets constructor, remove from proto_props\r\n    proto_props = extend({}, proto_props);\r\n    delete proto_props.constructor;\r\n  }\r\n  else {\r\n    Child = function() { return Parent.apply(this, arguments); };\r\n  }\r\n\r\n  inherits(Child, Parent);\r\n  if (static_props)\r\n    extend(Child, static_props);\r\n  if (proto_props)\r\n    extend(Child.prototype, proto_props);\r\n\r\n  // If name is given, register with d3.chart\r\n  if (name)\r\n    Chart[name] = Child;\r\n\r\n  return Child;\r\n};\r\n\r\n// Export to d3.chart\r\nChart.Base = Base;\r\nexport default Base;\r\n","import {\r\n  contains,\r\n  defaults,\r\n  isFunction\r\n} from './utils';\r\n\r\n/*\r\n  Extract layout from the given options\r\n\r\n  @param {Array} options\r\n  @return {Object} {data, items, layout}\r\n*/\r\nexport function extractLayout(options) {\r\n  if (!options)\r\n    return;\r\n\r\n  var data = {\r\n    _charts: {},\r\n    _components: {}\r\n  };\r\n  var items = {};\r\n  var layout = [];\r\n  var charts = [];\r\n  var components = [];\r\n\r\n  // TEMP Idenfify charts from layered,\r\n  // eventually no distinction between charts and components\r\n  var found = {\r\n    row: false,\r\n    charts: false\r\n  };\r\n\r\n  // Components are added from inside-out\r\n  // so for position: top, position: left, use unshift\r\n  options.forEach(function(row, row_index) {\r\n    var row_components = [];\r\n\r\n    if (!Array.isArray(row))\r\n      row = [row];\r\n    if (row.length > 1)\r\n      found.row = true;\r\n\r\n    var row_layout = row.map(function(item, col_index) {\r\n      if (!item)\r\n        return;\r\n\r\n      if (item._layered) {\r\n        // Charts\r\n        found.charts = found.row = true;\r\n        var chart_ids = [];\r\n\r\n        item.items.forEach(function(chart, chart_index) {\r\n          if (!chart)\r\n            return;\r\n\r\n          chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\r\n\r\n          chart_ids.push(chart.id);\r\n          charts.push(chart);\r\n          items[chart.id] = chart;\r\n        });\r\n\r\n        return chart_ids;\r\n      }\r\n\r\n      var component = prepareComponent(item, row_index, col_index);\r\n      items[component.id] = component;\r\n\r\n      if (row.length > 1) {\r\n        if (!found.charts) {\r\n          // Left\r\n          setPosition(component, 'left');\r\n          row_components.unshift(component);\r\n        }\r\n        else {\r\n          // Right\r\n          setPosition(component, 'right');\r\n          row_components.push(component);\r\n        }\r\n      }\r\n      else {\r\n        if (!found.row) {\r\n          // Top\r\n          setPosition(component, 'top');\r\n          components.unshift(component);\r\n        }\r\n        else {\r\n          // Bottom\r\n          setPosition(component, 'bottom');\r\n          components.push(component);\r\n        }\r\n      }\r\n\r\n      return component.id;\r\n    });\r\n\r\n    if (row_components.length)\r\n      components = components.concat(row_components);\r\n\r\n    layout.push(row_layout);\r\n  });\r\n\r\n  charts.forEach(extractData('_charts'));\r\n  components.forEach(extractData('_components'));\r\n\r\n  return {\r\n    data: data,\r\n    items: items,\r\n    layout: layout,\r\n\r\n    charts: charts,\r\n    components: components\r\n  };\r\n\r\n  function prepareComponent(component, row_index, col_index) {\r\n    return defaults({}, component, {id: getId(row_index, col_index)});\r\n  }\r\n  function setPosition(component, position) {\r\n    if (component && isFunction(component.position))\r\n      component.position(position);\r\n    else\r\n      component.position = position;\r\n  }\r\n  function getId(row_index, col_index, layered_index) {\r\n    var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\r\n    if (layered_index != null)\r\n      id += '-' + (layered_index + 1);\r\n\r\n    return id;\r\n  }\r\n\r\n  function extractData(type) {\r\n    return function(item) {\r\n      if (item.data && !isFunction(item.data)) {\r\n        data[type][item.id] = item.data;\r\n        data[item.id] = item.data;\r\n        delete item.data;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\n  Calculate component and chart coordinates for given layout\r\n*/\r\nexport function calculateLayout(components, data, demux) {\r\n  var overall_layout = {top: [], right: [], bottom: [], left: []};\r\n  components.forEach(function(component) {\r\n    if (component.skip_layout || !component.getLayout)\r\n      return;\r\n\r\n    var layout = component.getLayout(demux(component.id, data));\r\n    var position = layout && layout.position;\r\n\r\n    if (!contains(['top', 'right', 'bottom', 'left'], position))\r\n      return;\r\n\r\n    overall_layout[position].push({\r\n      offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\r\n      component: component\r\n    });\r\n  });\r\n\r\n  return overall_layout;\r\n}\r\n\r\n/*\r\n  Apply calculated layout to charts and components\r\n*/\r\nexport function applyLayout(layout, chart_position, width, height) {\r\n  layout.top.reduce(function(previous, part) {\r\n    var y = previous - part.offset;\r\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n    return y;\r\n  }, chart_position.top);\r\n\r\n  layout.right.reduce(function(previous, part, index, parts) {\r\n    var previousPart = parts[index - 1] || {offset: 0};\r\n    var x = previous + previousPart.offset;\r\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n    return x;\r\n  }, width - chart_position.right);\r\n\r\n  layout.bottom.reduce(function(previous, part, index, parts) {\r\n    var previousPart = parts[index - 1] || {offset: 0};\r\n    var y = previous + previousPart.offset;\r\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n    return y;\r\n  }, height - chart_position.bottom);\r\n\r\n  layout.left.reduce(function(previous, part) {\r\n    var x = previous - part.offset;\r\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n    return x;\r\n  }, chart_position.left);\r\n\r\n  function setLayout(component, x, y, options) {\r\n    if (component && isFunction(component.setLayout))\r\n      component.setLayout(x, y, options);\r\n  }\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  find,\r\n  defaults,\r\n  extend,\r\n  objectEach,\r\n  difference,\r\n  pluck\r\n} from './utils';\r\nimport {\r\n  getMargins,\r\n  property,\r\n  style,\r\n  translate\r\n} from './helpers';\r\nimport {\r\n  extractLayout,\r\n  calculateLayout,\r\n  applyLayout\r\n} from './layout';\r\nimport Base from './Base';\r\nimport Overlay from './Overlay';\r\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n/**\r\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n  @example\r\n  ```html\r\n  <div id=\"#chart\"></div>\r\n  ```\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Process data...\r\n\r\n    // Create shared scales\r\n    var scales = {\r\n      x: {data: data.input, key: 'x', adjacent: true},\r\n      y: {data: data.input, key: 'y'},\r\n      y2: {data: data.output, key: 'y'}\r\n    };\r\n\r\n    // Setup charts and components\r\n    var charts = [\r\n      d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\r\n      d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\r\n    ];\r\n\r\n    var title = d3c.title('d3.compose');\r\n    var xAxis = d3c.axis('xAxis', {scale: scales.x});\r\n    var yAxis = d3c.axis('yAxis', {scale: scales.y});\r\n    var y2Axis = d3c.axis('y2Axis', {scale: scales.y2});\r\n\r\n    // Layout charts and components\r\n    return [\r\n      title,\r\n      [yAxis, d3c.layered(charts), y2Axis],\r\n      xAxis\r\n    ];;\r\n  });\r\n\r\n  chart.draw({input: [...], output: [...]});\r\n  ```\r\n  @class Compose\r\n  @extends Base\r\n*/\r\nvar Compose = Base.extend({\r\n  initialize: function(options) {\r\n    Base.prototype.initialize.call(this, options);\r\n\r\n    // Responsive svg based on the following approach (embedded + padding hack)\r\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n    // (not enabled if selection is svg)\r\n    if (this.base.node().tagName != 'svg') {\r\n      this.container = this.base.append('div')\r\n        .attr('class', 'chart-compose-container');\r\n\r\n      this.base = this.container.append('svg')\r\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n        .attr('version', '1.1')\r\n        .attr('class', 'chart-compose');\r\n    }\r\n    else {\r\n      this.base.classed('chart-compose', true);\r\n    }\r\n\r\n    this.attachHoverListeners();\r\n  },\r\n\r\n  transform: function(data) {\r\n    // Save raw data for redraw\r\n    this.rawData(data);\r\n    return Base.prototype.transform.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Get/set the options `object/function` for the chart that takes `data` and\r\n    returns `[...layout]` for composing child charts and components.\r\n\r\n    @example\r\n    ```js\r\n    // get\r\n    chart.options();\r\n\r\n    // set (static)\r\n    chart.options([\r\n      // ...\r\n    ]);\r\n\r\n    // set (dynamic, takes data and returns options)\r\n    chart.options(function(data) {\r\n      // process data...\r\n\r\n      return [\r\n        // ...\r\n      ];\r\n    });\r\n\r\n    // Set directly from d3.chart creation\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n    ```\r\n    @property options\r\n    @type Function|Object\r\n  */\r\n  options: property({\r\n    default_value: function() { return function() {}; },\r\n    set: function(options) {\r\n      // If options is plain object,\r\n      // return from generic options function\r\n      if (!isFunction(options)) {\r\n        return {\r\n          override: function() {\r\n            return options;\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Store raw data for container before it has been transformed\r\n  rawData: property(),\r\n\r\n  /**\r\n    Margins between edge of container and components/chart\r\n\r\n    @example\r\n    ```js\r\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n    ```\r\n    @property margins\r\n    @type Object {top, right, bottom, left}\r\n    @default {top: 10, right: 10, bottom: 10, left: 10}\r\n  */\r\n  margins: property({\r\n    default_value: default_compose_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_compose_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  // Chart position\r\n  chartPosition: property({\r\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n    set: function(values) {\r\n      return {\r\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    },\r\n    get: function(values) {\r\n      values.width = this._width() - values.right - values.left;\r\n      values.height = this._height() - values.bottom - values.top;\r\n\r\n      return values;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set overall width of chart\r\n\r\n    @property width\r\n    @type Number\r\n  */\r\n  width: property({\r\n    default_value: null\r\n  }),\r\n\r\n  /**\r\n    Get/set overall height of chart\r\n\r\n    @property height\r\n    @type Number\r\n  */\r\n  height: property({\r\n    default_value: null\r\n  }),\r\n\r\n  _width: function() {\r\n    var width = this.width();\r\n    return width != null ? width : Base.prototype.width.call(this);\r\n  },\r\n  _height: function() {\r\n    var height = this.height();\r\n    return height != null ? height : Base.prototype.height.call(this);\r\n  },\r\n\r\n  /**\r\n    Enable responsive container + viewBox so that chart scales to fill width\r\n    (only works if selection is not an svg)\r\n\r\n    @property responsive\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  responsive: property({\r\n    default_value: true\r\n  }),\r\n\r\n  // Set svg viewBox attribute\r\n  viewBox: property({\r\n    default_value: function() {\r\n      if (this.responsive() && this.width() && this.height())\r\n        return '0 0 ' + this.width() + ' ' + this.height();\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set svg preserveAspectRatio attribute\r\n  preserveAspectRatio: property({\r\n    default_value: function() {\r\n      if (this.responsive())\r\n        return 'xMidYMid meet';\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set container style\r\n  containerStyle: property({\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        var aspect_ratio = 1;\r\n        if (this.width() && this.height())\r\n          aspect_ratio = this.height() / this.width();\r\n\r\n        return style({\r\n          width: '100%',\r\n          height: 0,\r\n          'padding-top': (aspect_ratio * 100) + '%',\r\n          position: 'relative'\r\n        });\r\n      }\r\n      else {\r\n        return style({position: 'relative'});\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Set base style\r\n  baseStyle: property({\r\n    default_value: function() {\r\n      if (this.responsive() && this.container) {\r\n        return style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0\r\n        });\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Set charts from options or get chart instances.\r\n    Each chart should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n    @example\r\n    ```js\r\n    chart.charts([\r\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n    ]);\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property({\r\n    set: function(chart_options, charts) {\r\n      // Store actual charts rather than options\r\n      return {\r\n        override: this._attachItems(chart_options, charts, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Set components from options or get components instances.\r\n    Each component should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n    @example\r\n    ```js\r\n    chart.components([\r\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n      {id: 'title', type: 'Title'} // options to pass to Title component\r\n    ])\r\n    ```\r\n    @property components\r\n    @type Array\r\n  */\r\n  components: property({\r\n    set: function(component_options, components) {\r\n      // Store actual components rather than options\r\n      return {\r\n        override: this._attachItems(component_options, components, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Delay start of transition by specified milliseconds.\r\n    (applied to all charts and components as default)\r\n\r\n    @property delay\r\n    @type Number|Function\r\n    @default d3 default: 0\r\n  */\r\n  delay: property(),\r\n\r\n  /**\r\n    Transition duration in milliseconds.\r\n    (applied to all charts and components as default)\r\n\r\n    @property duration\r\n    @type Number|Function\r\n    @default d3 default: 250ms\r\n  */\r\n  duration: property(),\r\n\r\n  /**\r\n    Transition ease function.\r\n    (applied to all charts and components as default)\r\n\r\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n    - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n    @property ease\r\n    @type String|Function\r\n    @default d3 default: 'cubic-in-out'\r\n  */\r\n  ease: property(),\r\n\r\n  /**\r\n    Draw chart with given data\r\n\r\n    @example\r\n    ```js\r\n    var chart = d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n\r\n    chart.draw([1, 2, 3]);\r\n\r\n    chart.draw({values: [1, 2, 3]});\r\n\r\n    chart.draw([\r\n      {values: [1, 2, 3]},\r\n      {values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method draw\r\n    @param {Any} data\r\n  */\r\n  draw: function(data) {\r\n    var config = this._prepareConfig(this.options(), data);\r\n    if (!config)\r\n      config = {data: {_charts: {}, _components: {}}, layout: []};\r\n\r\n    // Set charts and components from config\r\n    this.charts(config.charts);\r\n    this.components(config.components);\r\n\r\n    // Add config data\r\n    data = {\r\n      original: data,\r\n      config: config.data\r\n    };\r\n    this.data(data);\r\n\r\n    this._setDimensions();\r\n\r\n    // Layout components\r\n    this.layout(config.layout, data);\r\n\r\n    // Full draw now that everything has been laid out\r\n    d3.chart().prototype.draw.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Redraw chart with current data\r\n\r\n    @method redraw\r\n  */\r\n  redraw: function() {\r\n    if (this.rawData())\r\n      this.draw(this.rawData().original);\r\n  },\r\n\r\n  demux: function(name, data) {\r\n    if (!data || !data.config || !data.original)\r\n      return data;\r\n\r\n    if (findById(this.charts(), name) && data.config._charts[name])\r\n      return data.config._charts[name];\r\n    else if (findById(this.components(), name) && data.config._components[name])\r\n      return data.config._components[name];\r\n    else\r\n      return data.original;\r\n  },\r\n\r\n  // Create chart layer (for laying out charts)\r\n  createChartLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create component layer\r\n  createComponentLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-component-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create overlay layer\r\n  createOverlayLayer: function() {\r\n    if (!this.container)\r\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n    return this.container.append('div')\r\n      .attr('class', 'chart-overlay-layer');\r\n  },\r\n\r\n  // Layout components and charts for given data\r\n  layout: function(layout, data) {\r\n    // 1. Place chart layers\r\n    this._positionChartLayers();\r\n\r\n    // 2. Extract layout from components\r\n    layout = this._extractLayout(data);\r\n\r\n    // 3. Set chart position from layout\r\n    var chart_position = extend({}, this.margins());\r\n    objectEach(layout, function(parts, key) {\r\n      parts.forEach(function(part) {\r\n        chart_position[key] += part.offset || 0;\r\n      });\r\n    });\r\n    this.chartPosition(chart_position);\r\n\r\n    // 4. Position layers with layout\r\n    this.positionLayers(layout);\r\n  },\r\n\r\n  attachHoverListeners: function() {\r\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n    // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n    var trigger = this.trigger.bind(this);\r\n    var chartPosition = this.chartPosition.bind(this);\r\n    var container = this.container || this.base;\r\n    var base = this.base.node();\r\n    var chart_position, bounds, was_inside;\r\n\r\n    container.on('mouseenter', function() {\r\n      // Calculate chart position and bounds on enter and cache during move\r\n      chart_position = chartPosition();\r\n      bounds = getBounds();\r\n\r\n      was_inside = inside(bounds);\r\n      if (was_inside)\r\n        enter();\r\n    });\r\n    container.on('mousemove', function() {\r\n      // Mousemove may fire before mouseenter in IE\r\n      if (!chart_position || !bounds) {\r\n        chart_position = chartPosition();\r\n        bounds = getBounds();\r\n      }\r\n\r\n      var is_inside = inside(bounds);\r\n      if (was_inside && is_inside)\r\n        move();\r\n      else if (was_inside)\r\n        leave();\r\n      else if (is_inside)\r\n        enter();\r\n\r\n      was_inside = is_inside;\r\n    });\r\n    container.on('mouseleave', function() {\r\n      if (was_inside) {\r\n        was_inside = false;\r\n        leave();\r\n      }\r\n    });\r\n\r\n    function inside() {\r\n      var mouse = d3.mouse(document.documentElement);\r\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n    }\r\n    function enter() {\r\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n    }\r\n    function move() {\r\n      trigger('mousemove', translateToXY(d3.mouse(base)));\r\n    }\r\n    function leave() {\r\n      trigger('mouseleave');\r\n    }\r\n\r\n    function translateToXY(coordinates) {\r\n      var x = coordinates[0];\r\n      var y = coordinates[1];\r\n      var chart_x = x - chart_position.left;\r\n      var chart_y = y - chart_position.top;\r\n\r\n      // Set at chart bounds if outside of chart\r\n      if (x > (chart_position.left + chart_position.width))\r\n        chart_x = chart_position.width;\r\n      else if (x < chart_position.left)\r\n        chart_x = 0;\r\n\r\n      if (y > (chart_position.top + chart_position.height))\r\n        chart_y = chart_position.height;\r\n      else if (y < chart_position.top)\r\n        chart_y = 0;\r\n\r\n      return {\r\n        container: {x: x, y: y},\r\n        chart: {x: chart_x, y: chart_y}\r\n      };\r\n    }\r\n\r\n    function getBounds() {\r\n      var scroll_y = 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop;\r\n\r\n      bounds = extend({}, base.getBoundingClientRect());\r\n      bounds.top += scroll_y;\r\n      bounds.bottom += scroll_y;\r\n\r\n      return bounds;\r\n    }\r\n  },\r\n\r\n  // Attach chart/component child item with id\r\n  attach: function(id, item) {\r\n    item.id = id;\r\n    item.base.attr('data-id', id);\r\n    item.container = this;\r\n\r\n    Base.prototype.attach.call(this, id, item);\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('attach');\r\n  },\r\n\r\n  // Detach chart/component child item by id\r\n  detach: function(id, item) {\r\n    item.base.remove();\r\n\r\n    delete this._attached[id];\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('detach');\r\n  },\r\n\r\n  // Position chart and component layers\r\n  positionLayers: function(layout) {\r\n    this._positionChartLayers();\r\n    this._positionComponents(layout);\r\n    this._positionByZIndex();\r\n  },\r\n\r\n  //\r\n  // Internal\r\n  //\r\n\r\n  _setDimensions: function() {\r\n    // Set container and svg dimensions\r\n    // (if original selection is svg, no container and skip responsiveness)\r\n    if (this.container) {\r\n      this.container\r\n        .attr('style', this.containerStyle());\r\n    }\r\n\r\n    this.base\r\n      .attr('viewBox', this.viewBox())\r\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n      .attr('style', this.baseStyle())\r\n      .attr('width', this.responsive() ? null : this.width())\r\n      .attr('height', this.responsive() ? null : this.height());\r\n  },\r\n\r\n  _attachItems: function(items, container, context) {\r\n    items = items || [];\r\n    container = container || [];\r\n\r\n    // Remove charts that are no longer needed\r\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n    remove_ids.forEach(function(remove_id) {\r\n      context.detach(remove_id, findById(container, remove_id));\r\n    });\r\n\r\n    // Create or update charts\r\n    return items.map(function(options) {\r\n      // TODO May not have id, might need to auto-generate\r\n      // (might be during another step)\r\n      var id = options.id;\r\n      var item = findById(container, id);\r\n\r\n      if (options instanceof d3.chart()) {\r\n        // If chart instance, replace with instance\r\n        if (item)\r\n          context.detach(id, item);\r\n\r\n        context.attach(id, options);\r\n        return options;\r\n      }\r\n      else {\r\n        // TEMP Changing position has nasty side effects, disable for now\r\n        var changed_position = item && !(item instanceof Overlay) && item.position && options.position && item.position() != options.position;\r\n\r\n        if (item && (item.type != options.type || changed_position)) {\r\n          // If chart type has changed, detach and re-create\r\n          context.detach(id, item);\r\n          item = undefined;\r\n        }\r\n\r\n        if (!item) {\r\n          var Item = d3.chart(options.type);\r\n\r\n          if (!Item)\r\n            throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n          var layer_options = {z_index: Item.z_index || 0};\r\n          var createLayer = {\r\n            'chart': 'createChartLayer',\r\n            'component': 'createComponentLayer',\r\n            'overlay': 'createOverlayLayer'\r\n          }[Item.layer_type];\r\n\r\n          if (!createLayer)\r\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n          var base = context[createLayer](layer_options);\r\n\r\n          item = new Item(base, options);\r\n          item.type = options.type;\r\n\r\n          context.attach(id, item);\r\n        }\r\n        else {\r\n          item.options(options);\r\n        }\r\n\r\n        return item;\r\n      }\r\n    });\r\n  },\r\n\r\n  _prepareConfig: function(options, data) {\r\n    return extractLayout(options(data));\r\n  },\r\n\r\n  _positionChartLayers: function() {\r\n    var position = this.chartPosition();\r\n    this.base.selectAll('.chart-layer')\r\n      .attr('transform', translate(position.left, position.top))\r\n      .attr('width', position.width)\r\n      .attr('height', position.height);\r\n  },\r\n\r\n  _positionComponents: function(layout) {\r\n    var chart_position = this.chartPosition();\r\n    var width = this._width();\r\n    var height = this._height();\r\n\r\n    applyLayout(layout, chart_position, width, height);\r\n  },\r\n\r\n  _positionByZIndex: function() {\r\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n    // Sort by z-index\r\n    function setZIndex(layer) {\r\n      return {\r\n        layer: layer,\r\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n      };\r\n    }\r\n    function sortZIndex(a, b) {\r\n      if (a.zIndex < b.zIndex)\r\n        return -1;\r\n      else if (a.zIndex > b.zIndex)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n    function getLayer(wrapped) {\r\n      return wrapped.layer;\r\n    }\r\n\r\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n    // Move layers to z-index order\r\n    layers.forEach(function(layer) {\r\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n        layer.parentNode.appendChild(layer);\r\n    });\r\n  },\r\n\r\n  _extractLayout: function(data) {\r\n    return calculateLayout(this.components(), data, this.demux.bind(this));\r\n  }\r\n});\r\n\r\n// TODO Find better place for this\r\nfunction layered(items) {\r\n  if (!Array.isArray(items))\r\n    items = Array.prototype.slice.call(arguments);\r\n\r\n  return {_layered: true, items: items};\r\n}\r\n\r\nfunction findById(items, id) {\r\n  return find(items, function(item) {\r\n    return item.id == id;\r\n  });\r\n}\r\n\r\nd3.chart().Compose = Compose;\r\nexport {\r\n  Compose as default,\r\n  layered\r\n};\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property({\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nvar Chart = Base.extend({}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n\r\nd3.chart().Chart = Chart;\r\nexport default Chart;\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: true` and the static `layer_type: 'chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nvar Component = Base.extend({\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property({\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property({\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property({\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property({\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property({\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        // (handle this.centered())\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      var actual_dimensions = dimensions(this.base);\r\n      if (options.height)\r\n        y += (options.height - actual_dimensions.height) / 2;\r\n      if (options.width)\r\n        x += (options.width - actual_dimensions.width) / 2;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n\r\nd3.chart().Component = Component;\r\nexport default Component;\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nvar Overlay = Component.extend({\r\n  initialize: function(options) {\r\n    Component.prototype.initialize.call(this, options);\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property({\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property({\r\n    default_value: function() {\r\n      var transform = translate(this.x() + 'px', this.y() + 'px');\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        '-webkit-transform': transform,\r\n        '-ms-transform': transform,\r\n        transform: transform\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  // TODO This conflicts with component.position(), might need a rename\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n\r\nd3.chart().Overlay = Overlay;\r\nexport default Overlay;\r\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered\r\n};\r\n\r\nexport default d3c;\r\n"],"sourceRoot":"/source/"}