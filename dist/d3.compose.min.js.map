{"version":3,"sources":["d3.compose.min.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers/index.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/layout.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js","../C:/dev/d3.compose/index.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","inherits","Child","Parent","create","constructor","enumerable","writeable","configurable","setPrototypeOf","__proto__","valueOrDefault","default_value","property","options","console","warn","id","unique_index","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","__properties","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","initializes","transforms","mixed","forEach","mix","initialize","args","init","transform","trans","bind","stack","direction","origin","min_height","min_width","elements","next_position","element_dimensions","spacing_width","spacing_height","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","isArray","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","Base","base","_layers","_attached","_events","extractLayout","prepareComponent","component","row_index","col_index","getId","setPosition","position","layered_index","extractData","_charts","_components","items","layout","charts","components","found","row","row_components","row_layout","_layered","chart_ids","chart_index","unshift","calculateLayout","demux","overall_layout","skip_layout","getLayout","applyLayout","chart_position","setLayout","part","index","parts","previousPart","layered","findById","Int8Array","utils","helpers","style","Base__Chart","name","draw","trigger","layer","attachment","unlayer","attach","on","once","off","isProperty","unset","proto_props","static_props","hasOwnProperty","src_Chart__Chart","z_index","layer_type","Chart","src_Chart","Component","prepareLayout","actual_dimensions","Overlay","hidden","display","getAbsolutePosition","container","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","tagName","append","classed","attachHoverListeners","rawData","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","chart_options","_attachItems","component_options","delay","duration","ease","config","_prepareConfig","_setDimensions","redraw","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","getBounds","scroll_y","scrollY","scrollTop","getBoundingClientRect","was_inside","is_inside","detach","remove","_positionComponents","_positionByZIndex","remove_ids","remove_id","changed_position","Item","layer_options","createLayer","overlay","selectAll","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","sort","appendChild","compose","VERSION","_index"],"mappings":"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","file":"d3.compose.min.js","sourcesContent":[null,"// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nexport var slice = Array.prototype.slice;\r\nexport var toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function inherits(Child, Parent) {\r\n  Child.prototype = Object.create(Parent.prototype, {\r\n    constructor: {\r\n      value: Child,\r\n      enumerable: false,\r\n      writeable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n\r\n  if (Object.setPrototypeOf)\r\n    Object.setPrototypeOf(Child, Parent);\r\n  else\r\n    Child.__proto__ = Parent; //eslint-disable-line no-proto\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  slice: slice,\r\n  toString: toString,\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  inherits: inherits,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\r\n  isFunction,\r\n  isUndefined,\r\n  valueOrDefault\r\n} from '../utils';\r\nvar unique_index = 0;\r\n\r\n/**\r\n  Helper for creating properties for charts/components\r\n\r\n  @example\r\n  ```javascript\r\n  var Custom = d3.chart('Chart').extend('Custom', {\r\n    // Create property that's stored internally as 'simple'\r\n    simple: property()\r\n  });\r\n  var custom; // = new Custom(...);\r\n\r\n  // set\r\n  custom.simple('Howdy');\r\n\r\n  // get\r\n  console.log(custom.simple()); // -> 'Howdy'\r\n\r\n  // Advanced\r\n  // --------\r\n  // Default values:\r\n  Custom.prototype.message = property({\r\n    default_value: 'Howdy!'\r\n  });\r\n\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n  custom.message('Goodbye');\r\n  console.log(custom.message()); // -> 'Goodbye'\r\n\r\n  // Set to undefined to reset to default value\r\n  custom.message(undefined);\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n\r\n  // Computed default value:\r\n  Custom.property.computed = property({\r\n    default_value: function() {\r\n      // \"this\" = Custom instance\r\n      return this.message();\r\n    }\r\n  });\r\n\r\n  // Function default value:\r\n  // For function default_values, wrap in function to differentiate from computed\r\n  Custom.property.fn = property({\r\n    default_value: function() {\r\n      return function defaultFn() {};\r\n    }\r\n    // The following would be incorrectly evaluated\r\n    // default_value: function defaultFn() {}\r\n  })\r\n\r\n  // Custom getter:\r\n  Custom.prototype.exclaimed = property({\r\n    get: function(value) {\r\n      // Value is the underlying set value\r\n      return value + '!';\r\n    }\r\n  });\r\n\r\n  custom.exclaimed('Howdy');\r\n  console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n  // Custom setter:\r\n  Custom.prototype.feeling = property({\r\n    set: function(value, previous) {\r\n      if (value == 'Hate') {\r\n        // To override value, return Object with override specified\r\n        return {\r\n          override: 'Love',\r\n\r\n          // To do something after override, use after callback\r\n          after: function() {\r\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    custom.feeling('Hate'); // -> 'After: Love'\r\n    console.log(custom.feeling()); // -> 'Love'\r\n  });\r\n  ```\r\n  @method property\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`). If default value is a function, wrap in another function as default_value is evaluated by default.\r\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n  @return {Function} `()`: get, `(value)`: set\r\n*/\r\nexport default function property(options) {\r\n  // DEPRECATED: name as first argument\r\n  if (arguments.length == 2) {\r\n    if (typeof console != 'undefined' && console.warn)\r\n      console.warn('DEPRECATED - name argument for property is no longer supported will be removed in the next version of d3.compose');\r\n    options = arguments[1];\r\n  }\r\n\r\n  options = options || {};\r\n  var id = 'property_' + unique_index++;\r\n\r\n  var property = function(value) {//eslint-disable-line no-shadow\r\n    var properties = this.__properties = this.__properties || {};\r\n    var context = valueOrDefault(property.context, this);\r\n\r\n    if (arguments.length)\r\n      return set.call(this);\r\n    else\r\n      return get.call(this);\r\n\r\n    function get() {\r\n      value = properties[id];\r\n\r\n      if (isUndefined(value)) {\r\n        // Use default value and unwrap if it's a function\r\n        value = property.default_value;\r\n        if (isFunction(value))\r\n          value = value.call(context);\r\n      }\r\n\r\n      return isFunction(options.get) ? options.get.call(context, value) : value;\r\n    }\r\n\r\n    function set() {\r\n      // Validate\r\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(context, value))\r\n        throw new Error('Invalid value for property: ' + JSON.stringify(value));\r\n\r\n      var previous = properties[id];\r\n      properties[id] = value;\r\n\r\n      if (isFunction(options.set) && !isUndefined(value)) {\r\n        var response = options.set.call(context, value, previous);\r\n\r\n        if (response && 'override' in response)\r\n          properties[id] = response.override;\r\n        if (response && isFunction(response.after))\r\n          response.after.call(context, properties[id]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // For checking if function is a property\r\n  property.is_property = true;\r\n  property.id = id;\r\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n  property.default_value = options.default_value;\r\n  property.context = options.context;\r\n  property.options = options;\r\n\r\n  return property;\r\n}\r\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector\r\n\r\n  @method dimensions\r\n  @for helpers\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from './index';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05]\r\n  });\r\n  ```\r\n  @method createScale\r\n  @for helpers\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import {\r\n  objectEach,\r\n  slice\r\n} from '../utils';\r\n\r\n/**\r\n  Combine mixins with Parent super class for extension\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  var Custom = mixin(Chart, a, b, c).extend({\r\n    initialize: function(options) {\r\n      this._super.initialize.call(this, options);\r\n      // d\r\n    },\r\n    transform: function(data) {\r\n      data = this._super.transform.call(this, data);\r\n      // d\r\n    }\r\n  });\r\n\r\n  // initialize: Chart, b, d\r\n  // transform: Chart, a, d\r\n  ```\r\n  @method mixin\r\n  @for helpers\r\n  @param {Function} Parent\r\n  @param {...Object} ...mixins\r\n  @return {Function}\r\n*/\r\nexport default function mixin(Parent/*, ...mixins*/) {\r\n  var mixins = slice.call(arguments, 1);\r\n  var initializes = [];\r\n  var transforms = [];\r\n  var mixed = {};\r\n\r\n  mixins.forEach(function(mix) {\r\n    objectEach(mix, function(value, key) {\r\n      if (key == 'initialize')\r\n        initializes.push(value);\r\n      else if (key == 'transform')\r\n        transforms.push(value);\r\n      else\r\n        mixed[key] = value;\r\n    });\r\n  });\r\n\r\n  if (initializes.length) {\r\n    mixed.initialize = function initialize() {\r\n      var args = slice.call(arguments);\r\n      Parent.prototype.initialize.apply(this, args);\r\n      initializes.forEach(function(init) {\r\n        init.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n\r\n  if (transforms.length) {\r\n    mixed.transform = function transform(data) {\r\n      data = Parent.prototype.transform.call(this, data);\r\n      return transforms.reduce(function(memo, trans) {\r\n        return trans.call(this, memo);\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return Parent.extend(mixed);\r\n}\r\n","import { extend } from '../utils';\r\nimport { translate } from './index';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack())\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack({\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n  @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n  @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n  @return {Function}\r\n*/\r\nexport default function stack(options) {\r\n  options = extend({\r\n    direction: 'vertical',\r\n    origin: 'top',\r\n    padding: 0,\r\n    min_height: 0,\r\n    min_width: 0\r\n  }, options);\r\n\r\n  // Ensure valid origin based on direction\r\n  if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n    options.origin = 'left';\r\n  else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n    options.origin = 'top';\r\n\r\n  function padding(i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  return function(elements) {\r\n    if (elements && elements.attr) {\r\n      var previous = 0;\r\n\r\n      elements.attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n        var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n        var x = 0;\r\n        var y = 0;\r\n        var next_position;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          next_position = previous + spacing_width + padding(i);\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(i);\r\n          else\r\n            x = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n        else {\r\n          next_position = previous + spacing_height + padding(i);\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(i);\r\n          else\r\n            y = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  defaults,\r\n  extend,\r\n  first,\r\n  isNumber,\r\n  isObject,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './property';\r\nimport dimensions from './dimensions';\r\nimport createScale from './create-scale';\r\nimport mixin from './mixin';\r\nimport stack from './stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Get formatted margins for varying input\r\n\r\n  @method getMargins\r\n  @example\r\n  ```js\r\n  getMargins(4);\r\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n  getMargins({top: 20}, {top: 8, bottom: 8});\r\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n  ```\r\n  @param {Number|Object} margins\r\n  @param {Object} default_margins\r\n  @return {Object}\r\n*/\r\nexport function getMargins(margins, default_margins) {\r\n  if (isNumber(margins))\r\n    return {top: margins, right: margins, bottom: margins, left: margins};\r\n  else\r\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  getMargins: getMargins,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  extend,\r\n  inherits,\r\n  isString,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\nvar Chart = d3.chart();\r\n\r\n/**\r\n  TEMP Clear namespace from mixins\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nfunction Base(selection, options) {\r\n  // d3.chart() constructor without transform and initialize cascade\r\n  this.base = selection;\r\n  this._layers = {};\r\n  this._attached = {};\r\n  this._events = {};\r\n\r\n  // Bind all di-functions to this chart\r\n  bindAllDi(this);\r\n\r\n  // Set options (and properties with set_from_options)\r\n  if (options)\r\n    this.options(options);\r\n\r\n  // Initialize Chart (relies on explicitly calling super in initialize)\r\n  this.initialize(options);\r\n}\r\n\r\ninherits(Base, Chart);\r\n\r\nextend(Base.prototype, {\r\n  initialize: function() {},\r\n  transform: function(data) {\r\n    return data;\r\n  },\r\n  demux: function(name, data) { return data; },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    // Transform data (relies on explicitly calling super in transform)\r\n    data = this.transform(data);\r\n\r\n    // Store fully-transformed data for reference\r\n    this.data(data);\r\n\r\n    this.trigger('before:draw', data);\r\n\r\n    objectEach(this._layers, function(layer) {\r\n      layer.draw(data);\r\n    });\r\n    objectEach(this._attached, function(attachment, name) {\r\n      attachment.draw(this.demux(name, data));\r\n    }, this);\r\n\r\n    this.trigger('draw', data);\r\n  },\r\n\r\n  // Explicitly load d3.chart prototype\r\n  layer: Chart.prototype.layer,\r\n  unlayer: Chart.prototype.unlayer,\r\n  attach: Chart.prototype.attach,\r\n  on: Chart.prototype.on,\r\n  once: Chart.prototype.once,\r\n  off: Chart.prototype.off,\r\n  trigger: Chart.prototype.trigger,\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property(),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property(),\r\n      b: property({\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property({\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  }\r\n});\r\n\r\nBase.extend = function(proto_props, static_props) {\r\n  // name may be first parameter for d3.chart usage\r\n  var name;\r\n  if (isString(proto_props)) {\r\n    name = proto_props;\r\n    proto_props = static_props;\r\n    static_props = arguments[2];\r\n  }\r\n\r\n  var Parent = this;\r\n  var Child;\r\n\r\n  if (proto_props && proto_props.hasOwnProperty('constructor')) {\r\n    Child = proto_props.constructor;\r\n\r\n    // inherits sets constructor, remove from proto_props\r\n    proto_props = extend({}, proto_props);\r\n    delete proto_props.constructor;\r\n  }\r\n  else {\r\n    Child = function() { return Parent.apply(this, arguments); };\r\n  }\r\n\r\n  inherits(Child, Parent);\r\n  if (static_props)\r\n    extend(Child, static_props);\r\n  if (proto_props)\r\n    extend(Child.prototype, proto_props);\r\n\r\n  // If name is given, register with d3.chart\r\n  if (name)\r\n    Chart[name] = Child;\r\n\r\n  return Child;\r\n};\r\n\r\n// Export to d3.chart\r\nChart.Base = Base;\r\nexport default Base;\r\n","import {\r\n  contains,\r\n  defaults,\r\n  isFunction\r\n} from './utils';\r\n\r\n/*\r\n  Extract layout from the given options\r\n\r\n  @param {Array} options\r\n  @return {Object} {data, items, layout}\r\n*/\r\nexport function extractLayout(options) {\r\n  if (!options)\r\n    return;\r\n\r\n  var data = {\r\n    _charts: {},\r\n    _components: {}\r\n  };\r\n  var items = {};\r\n  var layout = [];\r\n  var charts = [];\r\n  var components = [];\r\n\r\n  // TEMP Idenfify charts from layered,\r\n  // eventually no distinction between charts and components\r\n  var found = {\r\n    row: false,\r\n    charts: false\r\n  };\r\n\r\n  // Components are added from inside-out\r\n  // so for position: top, position: left, use unshift\r\n  options.forEach(function(row, row_index) {\r\n    var row_components = [];\r\n\r\n    if (!Array.isArray(row))\r\n      row = [row];\r\n    if (row.length > 1)\r\n      found.row = true;\r\n\r\n    var row_layout = row.map(function(item, col_index) {\r\n      if (!item)\r\n        return;\r\n\r\n      if (item._layered) {\r\n        // Charts\r\n        found.charts = found.row = true;\r\n        var chart_ids = [];\r\n\r\n        item.items.forEach(function(chart, chart_index) {\r\n          if (!chart)\r\n            return;\r\n\r\n          chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\r\n\r\n          chart_ids.push(chart.id);\r\n          charts.push(chart);\r\n          items[chart.id] = chart;\r\n        });\r\n\r\n        return chart_ids;\r\n      }\r\n\r\n      var component = prepareComponent(item, row_index, col_index);\r\n      items[component.id] = component;\r\n\r\n      if (row.length > 1) {\r\n        if (!found.charts) {\r\n          // Left\r\n          setPosition(component, 'left');\r\n          row_components.unshift(component);\r\n        }\r\n        else {\r\n          // Right\r\n          setPosition(component, 'right');\r\n          row_components.push(component);\r\n        }\r\n      }\r\n      else {\r\n        if (!found.row) {\r\n          // Top\r\n          setPosition(component, 'top');\r\n          components.unshift(component);\r\n        }\r\n        else {\r\n          // Bottom\r\n          setPosition(component, 'bottom');\r\n          components.push(component);\r\n        }\r\n      }\r\n\r\n      return component.id;\r\n    });\r\n\r\n    if (row_components.length)\r\n      components = components.concat(row_components);\r\n\r\n    layout.push(row_layout);\r\n  });\r\n\r\n  charts.forEach(extractData('_charts'));\r\n  components.forEach(extractData('_components'));\r\n\r\n  return {\r\n    data: data,\r\n    items: items,\r\n    layout: layout,\r\n\r\n    charts: charts,\r\n    components: components\r\n  };\r\n\r\n  function prepareComponent(component, row_index, col_index) {\r\n    return defaults({}, component, {id: getId(row_index, col_index)});\r\n  }\r\n  function setPosition(component, position) {\r\n    if (component && isFunction(component.position))\r\n      component.position(position);\r\n    else\r\n      component.position = position;\r\n  }\r\n  function getId(row_index, col_index, layered_index) {\r\n    var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\r\n    if (layered_index != null)\r\n      id += '-' + (layered_index + 1);\r\n\r\n    return id;\r\n  }\r\n\r\n  function extractData(type) {\r\n    return function(item) {\r\n      if (item.data && !isFunction(item.data)) {\r\n        data[type][item.id] = item.data;\r\n        data[item.id] = item.data;\r\n        delete item.data;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/*\r\n  Calculate component and chart coordinates for given layout\r\n*/\r\nexport function calculateLayout(components, data, demux) {\r\n  var overall_layout = {top: [], right: [], bottom: [], left: []};\r\n  components.forEach(function(component) {\r\n    if (component.skip_layout || !component.getLayout)\r\n      return;\r\n\r\n    var layout = component.getLayout(demux(component.id, data));\r\n    var position = layout && layout.position;\r\n\r\n    if (!contains(['top', 'right', 'bottom', 'left'], position))\r\n      return;\r\n\r\n    overall_layout[position].push({\r\n      offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\r\n      component: component\r\n    });\r\n  });\r\n\r\n  return overall_layout;\r\n}\r\n\r\n/*\r\n  Apply calculated layout to charts and components\r\n*/\r\nexport function applyLayout(layout, chart_position, width, height) {\r\n  layout.top.reduce(function(previous, part) {\r\n    var y = previous - part.offset;\r\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n    return y;\r\n  }, chart_position.top);\r\n\r\n  layout.right.reduce(function(previous, part, index, parts) {\r\n    var previousPart = parts[index - 1] || {offset: 0};\r\n    var x = previous + previousPart.offset;\r\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n    return x;\r\n  }, width - chart_position.right);\r\n\r\n  layout.bottom.reduce(function(previous, part, index, parts) {\r\n    var previousPart = parts[index - 1] || {offset: 0};\r\n    var y = previous + previousPart.offset;\r\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n    return y;\r\n  }, height - chart_position.bottom);\r\n\r\n  layout.left.reduce(function(previous, part) {\r\n    var x = previous - part.offset;\r\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n    return x;\r\n  }, chart_position.left);\r\n\r\n  function setLayout(component, x, y, options) {\r\n    if (component && isFunction(component.setLayout))\r\n      component.setLayout(x, y, options);\r\n  }\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  find,\r\n  defaults,\r\n  extend,\r\n  objectEach,\r\n  difference,\r\n  pluck\r\n} from './utils';\r\nimport {\r\n  getMargins,\r\n  property,\r\n  style,\r\n  translate\r\n} from './helpers';\r\nimport {\r\n  extractLayout,\r\n  calculateLayout,\r\n  applyLayout\r\n} from './layout';\r\nimport Base from './Base';\r\nimport Overlay from './Overlay';\r\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n/**\r\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n  @example\r\n  ```html\r\n  <div id=\"#chart\"></div>\r\n  ```\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Process data...\r\n\r\n    // Create shared scales\r\n    var scales = {\r\n      x: {data: data.input, key: 'x', adjacent: true},\r\n      y: {data: data.input, key: 'y'},\r\n      y2: {data: data.output, key: 'y'}\r\n    };\r\n\r\n    // Setup charts and components\r\n    var charts = [\r\n      d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\r\n      d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\r\n    ];\r\n\r\n    var title = d3c.title('d3.compose');\r\n    var yAxis = d3c.axis({scale: scales.y});\r\n    var y2Axis = d3c.axis({scale: scales.y2});\r\n\r\n    // Layout charts and components\r\n    return [\r\n      [yAxis, d3c.layered(charts), y2Axis]\r\n    ];;\r\n  });\r\n\r\n  chart.draw({input: [...], output: [...]});\r\n  ```\r\n  @class Compose\r\n  @extends Base\r\n*/\r\nvar Compose = Base.extend({\r\n  initialize: function(options) {\r\n    Base.prototype.initialize.call(this, options);\r\n\r\n    // Responsive svg based on the following approach (embedded + padding hack)\r\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n    // (not enabled if selection is svg)\r\n    if (this.base.node().tagName != 'svg') {\r\n      this.container = this.base.append('div')\r\n        .attr('class', 'chart-compose-container');\r\n\r\n      this.base = this.container.append('svg')\r\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n        .attr('version', '1.1')\r\n        .attr('class', 'chart-compose');\r\n    }\r\n    else {\r\n      this.base.classed('chart-compose', true);\r\n    }\r\n\r\n    this.attachHoverListeners();\r\n  },\r\n\r\n  transform: function(data) {\r\n    // Save raw data for redraw\r\n    this.rawData(data);\r\n    return Base.prototype.transform.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Get/set the options `object/function` for the chart that takes `data` and\r\n    returns `{charts, components}` for composing child charts and components.\r\n\r\n    @example\r\n    ```js\r\n    // get\r\n    chart.options();\r\n\r\n    // set (static)\r\n    chart.options({\r\n      charts: {},\r\n      components: {}\r\n    });\r\n\r\n    // set (dynamic, takes data and returns options)\r\n    chart.options(function(data) {\r\n      // process data...\r\n\r\n      return {\r\n        charts: {},\r\n        components: {}\r\n      };\r\n    });\r\n\r\n    // Set directly from d3.chart creation\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n    ```\r\n    @property options\r\n    @type Function|Object\r\n  */\r\n  options: property({\r\n    default_value: function() { return function() {}; },\r\n    set: function(options) {\r\n      // If options is plain object,\r\n      // return from generic options function\r\n      if (!isFunction(options)) {\r\n        return {\r\n          override: function() {\r\n            return options;\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Store raw data for container before it has been transformed\r\n  rawData: property(),\r\n\r\n  /**\r\n    Margins between edge of container and components/chart\r\n\r\n    @example\r\n    ```js\r\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n    ```\r\n    @property margins\r\n    @type Object {top, right, bottom, left}\r\n    @default {top: 10, right: 10, bottom: 10, left: 10}\r\n  */\r\n  margins: property({\r\n    default_value: default_compose_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_compose_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  // Chart position\r\n  chartPosition: property({\r\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n    set: function(values) {\r\n      return {\r\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    },\r\n    get: function(values) {\r\n      values.width = this._width() - values.right - values.left;\r\n      values.height = this._height() - values.bottom - values.top;\r\n\r\n      return values;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set overall width of chart\r\n\r\n    @property width\r\n    @type Number\r\n  */\r\n  width: property({\r\n    default_value: null\r\n  }),\r\n\r\n  /**\r\n    Get/set overall height of chart\r\n\r\n    @property height\r\n    @type Number\r\n  */\r\n  height: property({\r\n    default_value: null\r\n  }),\r\n\r\n  _width: function() {\r\n    var width = this.width();\r\n    return width != null ? width : Base.prototype.width.call(this);\r\n  },\r\n  _height: function() {\r\n    var height = this.height();\r\n    return height != null ? height : Base.prototype.height.call(this);\r\n  },\r\n\r\n  /**\r\n    Enable responsive container + viewBox so that chart scales to fill width\r\n    (only works if selection is not an svg)\r\n\r\n    @property responsive\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  responsive: property({\r\n    default_value: true\r\n  }),\r\n\r\n  // Set svg viewBox attribute\r\n  viewBox: property({\r\n    default_value: function() {\r\n      if (this.responsive() && this.width() && this.height())\r\n        return '0 0 ' + this.width() + ' ' + this.height();\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set svg preserveAspectRatio attribute\r\n  preserveAspectRatio: property({\r\n    default_value: function() {\r\n      if (this.responsive())\r\n        return 'xMidYMid meet';\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set container style\r\n  containerStyle: property({\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        var aspect_ratio = 1;\r\n        if (this.width() && this.height())\r\n          aspect_ratio = this.height() / this.width();\r\n\r\n        return style({\r\n          width: '100%',\r\n          height: 0,\r\n          'padding-top': (aspect_ratio * 100) + '%',\r\n          position: 'relative'\r\n        });\r\n      }\r\n      else {\r\n        return style({position: 'relative'});\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Set base style\r\n  baseStyle: property({\r\n    default_value: function() {\r\n      if (this.responsive() && this.container) {\r\n        return style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0\r\n        });\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Set charts from options or get chart instances.\r\n    Each chart should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n    @example\r\n    ```js\r\n    chart.charts([\r\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n    ]);\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property({\r\n    set: function(chart_options, charts) {\r\n      // Store actual charts rather than options\r\n      return {\r\n        override: this._attachItems(chart_options, charts, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Set components from options or get components instances.\r\n    Each component should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n    @example\r\n    ```js\r\n    chart.components([\r\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n      {id: 'title', type: 'Title'} // options to pass to Title component\r\n    ])\r\n    ```\r\n    @property components\r\n    @type Array\r\n  */\r\n  components: property({\r\n    set: function(component_options, components) {\r\n      // Store actual components rather than options\r\n      return {\r\n        override: this._attachItems(component_options, components, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Delay start of transition by specified milliseconds.\r\n    (applied to all charts and components as default)\r\n\r\n    @property delay\r\n    @type Number|Function\r\n    @default d3 default: 0\r\n  */\r\n  delay: property(),\r\n\r\n  /**\r\n    Transition duration in milliseconds.\r\n    (applied to all charts and components as default)\r\n\r\n    @property duration\r\n    @type Number|Function\r\n    @default d3 default: 250ms\r\n  */\r\n  duration: property(),\r\n\r\n  /**\r\n    Transition ease function.\r\n    (applied to all charts and components as default)\r\n\r\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n    - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n    @property ease\r\n    @type String|Function\r\n    @default d3 default: 'cubic-in-out'\r\n  */\r\n  ease: property(),\r\n\r\n  /**\r\n    Draw chart with given data\r\n\r\n    @example\r\n    ```js\r\n    var chart = d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n\r\n    chart.draw([1, 2, 3]);\r\n\r\n    chart.draw({values: [1, 2, 3]});\r\n\r\n    chart.draw([\r\n      {values: [1, 2, 3]},\r\n      {values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method draw\r\n    @param {Any} data\r\n  */\r\n  draw: function(data) {\r\n    var config = this._prepareConfig(this.options(), data);\r\n    if (!config)\r\n      config = {data: {_charts: {}, _components: {}}, layout: []};\r\n\r\n    // Set charts and components from config\r\n    this.charts(config.charts);\r\n    this.components(config.components);\r\n\r\n    // Add config data\r\n    data = {\r\n      original: data,\r\n      config: config.data\r\n    };\r\n    this.data(data);\r\n\r\n    this._setDimensions();\r\n\r\n    // Layout components\r\n    this.layout(config.layout, data);\r\n\r\n    // Full draw now that everything has been laid out\r\n    d3.chart().prototype.draw.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Redraw chart with current data\r\n\r\n    @method redraw\r\n  */\r\n  redraw: function() {\r\n    if (this.rawData())\r\n      this.draw(this.rawData().original);\r\n  },\r\n\r\n  demux: function(name, data) {\r\n    if (!data || !data.config || !data.original)\r\n      return data;\r\n\r\n    if (findById(this.charts(), name) && data.config._charts[name])\r\n      return data.config._charts[name];\r\n    else if (findById(this.components(), name) && data.config._components[name])\r\n      return data.config._components[name];\r\n    else\r\n      return data.original;\r\n  },\r\n\r\n  // Create chart layer (for laying out charts)\r\n  createChartLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create component layer\r\n  createComponentLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-component-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create overlay layer\r\n  createOverlayLayer: function() {\r\n    if (!this.container)\r\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n    return this.container.append('div')\r\n      .attr('class', 'chart-overlay-layer');\r\n  },\r\n\r\n  // Layout components and charts for given data\r\n  layout: function(layout, data) {\r\n    // 1. Place chart layers\r\n    this._positionChartLayers();\r\n\r\n    // 2. Extract layout from components\r\n    layout = this._extractLayout(data);\r\n\r\n    // 3. Set chart position from layout\r\n    var chart_position = extend({}, this.margins());\r\n    objectEach(layout, function(parts, key) {\r\n      parts.forEach(function(part) {\r\n        chart_position[key] += part.offset || 0;\r\n      });\r\n    });\r\n    this.chartPosition(chart_position);\r\n\r\n    // 4. Position layers with layout\r\n    this.positionLayers(layout);\r\n  },\r\n\r\n  attachHoverListeners: function() {\r\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n    // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n    var trigger = this.trigger.bind(this);\r\n    var chartPosition = this.chartPosition.bind(this);\r\n    var container = this.container || this.base;\r\n    var base = this.base.node();\r\n    var chart_position, bounds, was_inside;\r\n\r\n    container.on('mouseenter', function() {\r\n      // Calculate chart position and bounds on enter and cache during move\r\n      chart_position = chartPosition();\r\n      bounds = getBounds();\r\n\r\n      was_inside = inside(bounds);\r\n      if (was_inside)\r\n        enter();\r\n    });\r\n    container.on('mousemove', function() {\r\n      // Mousemove may fire before mouseenter in IE\r\n      if (!chart_position || !bounds) {\r\n        chart_position = chartPosition();\r\n        bounds = getBounds();\r\n      }\r\n\r\n      var is_inside = inside(bounds);\r\n      if (was_inside && is_inside)\r\n        move();\r\n      else if (was_inside)\r\n        leave();\r\n      else if (is_inside)\r\n        enter();\r\n\r\n      was_inside = is_inside;\r\n    });\r\n    container.on('mouseleave', function() {\r\n      if (was_inside) {\r\n        was_inside = false;\r\n        leave();\r\n      }\r\n    });\r\n\r\n    function inside() {\r\n      var mouse = d3.mouse(document.documentElement);\r\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n    }\r\n    function enter() {\r\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n    }\r\n    function move() {\r\n      trigger('mousemove', translateToXY(d3.mouse(base)));\r\n    }\r\n    function leave() {\r\n      trigger('mouseleave');\r\n    }\r\n\r\n    function translateToXY(coordinates) {\r\n      var x = coordinates[0];\r\n      var y = coordinates[1];\r\n      var chart_x = x - chart_position.left;\r\n      var chart_y = y - chart_position.top;\r\n\r\n      // Set at chart bounds if outside of chart\r\n      if (x > (chart_position.left + chart_position.width))\r\n        chart_x = chart_position.width;\r\n      else if (x < chart_position.left)\r\n        chart_x = 0;\r\n\r\n      if (y > (chart_position.top + chart_position.height))\r\n        chart_y = chart_position.height;\r\n      else if (y < chart_position.top)\r\n        chart_y = 0;\r\n\r\n      return {\r\n        container: {x: x, y: y},\r\n        chart: {x: chart_x, y: chart_y}\r\n      };\r\n    }\r\n\r\n    function getBounds() {\r\n      var scroll_y = 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop;\r\n\r\n      bounds = extend({}, base.getBoundingClientRect());\r\n      bounds.top += scroll_y;\r\n      bounds.bottom += scroll_y;\r\n\r\n      return bounds;\r\n    }\r\n  },\r\n\r\n  // Attach chart/component child item with id\r\n  attach: function(id, item) {\r\n    item.id = id;\r\n    item.base.attr('data-id', id);\r\n    item.container = this;\r\n\r\n    Base.prototype.attach.call(this, id, item);\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('attach');\r\n  },\r\n\r\n  // Detach chart/component child item by id\r\n  detach: function(id, item) {\r\n    item.base.remove();\r\n\r\n    delete this._attached[id];\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('detach');\r\n  },\r\n\r\n  // Position chart and component layers\r\n  positionLayers: function(layout) {\r\n    this._positionChartLayers();\r\n    this._positionComponents(layout);\r\n    this._positionByZIndex();\r\n  },\r\n\r\n  //\r\n  // Internal\r\n  //\r\n\r\n  _setDimensions: function() {\r\n    // Set container and svg dimensions\r\n    // (if original selection is svg, no container and skip responsiveness)\r\n    if (this.container) {\r\n      this.container\r\n        .attr('style', this.containerStyle());\r\n    }\r\n\r\n    this.base\r\n      .attr('viewBox', this.viewBox())\r\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n      .attr('style', this.baseStyle())\r\n      .attr('width', this.responsive() ? null : this.width())\r\n      .attr('height', this.responsive() ? null : this.height());\r\n  },\r\n\r\n  _attachItems: function(items, container, context) {\r\n    items = items || [];\r\n    container = container || [];\r\n\r\n    // Remove charts that are no longer needed\r\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n    remove_ids.forEach(function(remove_id) {\r\n      context.detach(remove_id, findById(container, remove_id));\r\n    });\r\n\r\n    // Create or update charts\r\n    return items.map(function(options) {\r\n      // TODO May not have id, might need to auto-generate\r\n      // (might be during another step)\r\n      var id = options.id;\r\n      var item = findById(container, id);\r\n\r\n      if (options instanceof d3.chart()) {\r\n        // If chart instance, replace with instance\r\n        if (item)\r\n          context.detach(id, item);\r\n\r\n        context.attach(id, options);\r\n        return options;\r\n      }\r\n      else {\r\n        // TEMP Changing position has nasty side effects, disable for now\r\n        var changed_position = item && !(item instanceof Overlay) && item.position && options.position && item.position() != options.position;\r\n\r\n        if (item && (item.type != options.type || changed_position)) {\r\n          // If chart type has changed, detach and re-create\r\n          context.detach(id, item);\r\n          item = undefined;\r\n        }\r\n\r\n        if (!item) {\r\n          var Item = d3.chart(options.type);\r\n\r\n          if (!Item)\r\n            throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n          var layer_options = {z_index: Item.z_index || 0};\r\n          var createLayer = {\r\n            'chart': 'createChartLayer',\r\n            'component': 'createComponentLayer',\r\n            'overlay': 'createOverlayLayer'\r\n          }[Item.layer_type];\r\n\r\n          if (!createLayer)\r\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n          var base = context[createLayer](layer_options);\r\n\r\n          item = new Item(base, options);\r\n          item.type = options.type;\r\n\r\n          context.attach(id, item);\r\n        }\r\n        else {\r\n          item.options(options);\r\n        }\r\n\r\n        return item;\r\n      }\r\n    });\r\n  },\r\n\r\n  _prepareConfig: function(options, data) {\r\n    return extractLayout(options(data));\r\n  },\r\n\r\n  _positionChartLayers: function() {\r\n    var position = this.chartPosition();\r\n    this.base.selectAll('.chart-layer')\r\n      .attr('transform', translate(position.left, position.top))\r\n      .attr('width', position.width)\r\n      .attr('height', position.height);\r\n  },\r\n\r\n  _positionComponents: function(layout) {\r\n    var chart_position = this.chartPosition();\r\n    var width = this._width();\r\n    var height = this._height();\r\n\r\n    applyLayout(layout, chart_position, width, height);\r\n  },\r\n\r\n  _positionByZIndex: function() {\r\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n    // Sort by z-index\r\n    function setZIndex(layer) {\r\n      return {\r\n        layer: layer,\r\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n      };\r\n    }\r\n    function sortZIndex(a, b) {\r\n      if (a.zIndex < b.zIndex)\r\n        return -1;\r\n      else if (a.zIndex > b.zIndex)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n    function getLayer(wrapped) {\r\n      return wrapped.layer;\r\n    }\r\n\r\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n    // Move layers to z-index order\r\n    layers.forEach(function(layer) {\r\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n        layer.parentNode.appendChild(layer);\r\n    });\r\n  },\r\n\r\n  _extractLayout: function(data) {\r\n    return calculateLayout(this.components(), data, this.demux.bind(this));\r\n  }\r\n});\r\n\r\n// TODO Find better place for this\r\nfunction layered(items) {\r\n  if (!Array.isArray(items))\r\n    items = Array.prototype.slice.call(arguments);\r\n\r\n  return {_layered: true, items: items};\r\n}\r\n\r\nfunction findById(items, id) {\r\n  return find(items, function(item) {\r\n    return item.id == id;\r\n  });\r\n}\r\n\r\nd3.chart().Compose = Compose;\r\nexport {\r\n  Compose as default,\r\n  layered\r\n};\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property({\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nvar Chart = Base.extend({}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n\r\nd3.chart().Chart = Chart;\r\nexport default Chart;\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: true` and the static `layer_type: 'chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nvar Component = Base.extend({\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property({\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property({\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property({\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property({\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property({\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      var actual_dimensions = dimensions(this.base);\r\n      if (options.height)\r\n        y += (options.height - actual_dimensions.height) / 2;\r\n      if (options.width)\r\n        x += (options.width - actual_dimensions.width) / 2;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n\r\nd3.chart().Component = Component;\r\nexport default Component;\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nvar Overlay = Component.extend({\r\n  initialize: function(options) {\r\n    Component.prototype.initialize.call(this, options);\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property({\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property({\r\n    default_value: function() {\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        transform: translate(this.x() + 'px', this.y() + 'px')\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  // TODO This conflicts with component.position(), might need a rename\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n\r\nd3.chart().Overlay = Overlay;\r\nexport default Overlay;\r\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered\r\n};\r\n\r\nexport default d3c;\r\n"],"sourceRoot":"/source/"}