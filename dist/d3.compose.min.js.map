{"version":3,"sources":["d3.compose.min.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers/index.js","../C:/dev/d3.compose/src/layout.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/index.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","valueOrDefault","default_value","property","name","options","prop_key","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","isArray","mixed","constructor","initialize","args","forEach","extension","transform","reduceRight","bind","stack","direction","origin","min_height","min_width","elements","next_position","element_dimensions","spacing_width","spacing_height","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","id","extractLayout","prepareComponent","component","row_index","col_index","getId","setPosition","position","layered_index","extractData","convertObjectLayoutToArray","_charts","_components","items","layout","charts","components","found","row","row_components","row_layout","_layered","chart_ids","chart_index","unshift","console","warn","layered","by_position","chart_options","component_options","reverse","calculateLayout","demux","overall_layout","skip_layout","getLayout","applyLayout","chart_position","setLayout","part","index","parts","previousPart","findById","Int8Array","utils","helpers","style","Base","isProperty","unset","base","draw","trigger","Chart","z_index","layer_type","Component","prepareLayout","Overlay","hidden","display","getAbsolutePosition","container","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","rawData","tagName","append","classed","attachHoverListeners","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","_attachItems","delay","duration","ease","config","_prepareConfig","_setDimensions","redraw","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","was_inside","on","getBoundingClientRect","scrollY","is_inside","attach","detach","remove","_attached","_positionComponents","_positionByZIndex","remove_ids","remove_id","Item","layer_options","createLayer","overlay","selectAll","setZIndex","layer","zIndex","parseInt","sortZIndex","getLayer","layers","sort","appendChild","compose","VERSION","_index"],"mappings":"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","file":"d3.compose.min.js","sourcesContent":[null,"// Many utils inlined from Underscore.js\r\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction _extend(target, extensions, undefined_only) {\r\n  for (var i = 0, length = extensions.length; i < length; i++) {\r\n    for (var key in extensions[i]) {\r\n      if (!undefined_only || target[key] === void 0)\r\n        target[key] = extensions[i][key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport function contains(arr, item) {\r\n  return arr.indexOf(item) >= 0;\r\n}\r\n\r\nexport function compact(arr) {\r\n  return arr.filter(function(item) {\r\n    return item;\r\n  });\r\n}\r\n\r\nexport function difference(a, b) {\r\n  return a.filter(function(value) {\r\n    return b.indexOf(value) < 0;\r\n  });\r\n}\r\n\r\nexport function defaults(target) {\r\n  return _extend(target, slice.call(arguments, 1), true);\r\n}\r\n\r\nexport function extend(target) {\r\n  return _extend(target, slice.call(arguments, 1));\r\n}\r\n\r\nexport function flatten(arr) {\r\n  // Assumes all items in arr are arrays and only flattens one level\r\n  return arr.reduce(function(memo, item) {\r\n    return memo.concat(item);\r\n  }, []);\r\n}\r\n\r\nexport function find(arr, fn, context) {\r\n  if (!arr) return;\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (fn.call(context, arr[i], i, arr))\r\n      return arr[i];\r\n  }\r\n}\r\n\r\nexport function first(arr, n) {\r\n  if (arr == null) return void 0;\r\n  if (n == null) return arr[0];\r\n  return Array.prototype.slice.call(arr, 0, n);\r\n}\r\n\r\nexport function isBoolean(obj) {\r\n  return obj === true || obj === false;\r\n}\r\nexport function isObject(obj) {\r\n  var type = typeof obj;\r\n  return type === 'function' || type === 'object' && !!obj;\r\n}\r\nexport function isNumber(obj) {\r\n  return toString.call(obj) === '[object Number]';\r\n}\r\nexport function isString(obj) {\r\n  return toString.call(obj) === '[object String]';\r\n}\r\nexport function isUndefined(obj) {\r\n  return obj === void 0;\r\n}\r\n\r\nexport var isFunction = function(obj) {\r\n  return toString.call(obj) === '[object Function]';\r\n};\r\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\r\n  isFunction = function(obj) {\r\n    return typeof obj == 'function' || false;\r\n  };\r\n}\r\n\r\nexport function objectEach(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    fn.call(context, obj[keys[i]], keys[i], obj);\r\n  }\r\n}\r\n\r\nexport function objectFind(obj, fn, context) {\r\n  if (!obj) return;\r\n  var keys = Object.keys(obj);\r\n  for (var i = 0, length = keys.length; i < length; i++) {\r\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\r\n      return obj[keys[i]];\r\n  }\r\n}\r\n\r\nexport function pluck(objs, key) {\r\n  if (!objs) return [];\r\n  return objs.map(function(obj) {\r\n    return obj[key];\r\n  });\r\n}\r\n\r\nexport function uniq(arr) {\r\n  var result = [];\r\n  for (var i = 0, length = arr.length; i < length; i++) {\r\n    if (result.indexOf(arr[i]) < 0)\r\n      result.push(arr[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\r\n//\r\n// @method valueOrDefault\r\n// @param {Any} [value]\r\n// @param {Any} default_value\r\n// @return {Any}\r\nexport function valueOrDefault(value, default_value) {\r\n  return !isUndefined(value) ? value : default_value;\r\n}\r\n\r\nvar utils = {\r\n  contains: contains,\r\n  compact: compact,\r\n  difference: difference,\r\n  defaults: defaults,\r\n  extend: extend,\r\n  flatten: flatten,\r\n  find: find,\r\n  first: first,\r\n  isBoolean: isBoolean,\r\n  isFunction: isFunction,\r\n  isObject: isObject,\r\n  isNumber: isNumber,\r\n  isString: isString,\r\n  isUndefined: isUndefined,\r\n  objectEach: objectEach,\r\n  objectFind: objectFind,\r\n  pluck: pluck,\r\n  uniq: uniq,\r\n  valueOrDefault: valueOrDefault\r\n};\r\nexport default utils;\r\n","import {\r\n  isFunction,\r\n  isUndefined,\r\n  valueOrDefault\r\n} from '../utils';\r\n\r\n/**\r\n  Helper for creating properties for charts/components\r\n\r\n  @example\r\n  ```javascript\r\n  var Custom = d3.chart('Chart').extend('Custom', {\r\n    // Create property that's stored internally as 'simple'\r\n    simple: property('simple')\r\n  });\r\n  var custom; // = new Custom(...);\r\n\r\n  // set\r\n  custom.simple('Howdy');\r\n\r\n  // get\r\n  console.log(custom.simple()); // -> 'Howdy'\r\n\r\n  // Advanced\r\n  // --------\r\n  // Default values:\r\n  Custom.prototype.message = property('message', {\r\n    default_value: 'Howdy!'\r\n  });\r\n\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n  custom.message('Goodbye');\r\n  console.log(custom.message()); // -> 'Goodbye'\r\n\r\n  // Set to undefined to reset to default value\r\n  custom.message(undefined);\r\n  console.log(custom.message()); // -> 'Howdy!'\r\n\r\n  // Custom getter:\r\n  Custom.prototype.exclaimed = property('exclaimed', {\r\n    get: function(value) {\r\n      // Value is the underlying set value\r\n      return value + '!';\r\n    }\r\n  });\r\n\r\n  custom.exclaimed('Howdy');\r\n  console.log(custom.exclaimed()); // -> 'Howdy!'\r\n\r\n  // Custom setter:\r\n  Custom.prototype.feeling = property('feeling', {\r\n    set: function(value, previous) {\r\n      if (value == 'Hate') {\r\n        // To override value, return Object with override specified\r\n        return {\r\n          override: 'Love',\r\n\r\n          // To do something after override, use after callback\r\n          after: function() {\r\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    custom.feeling('Hate'); // -> 'After: Love'\r\n    console.log(custom.feeling()); // -> 'Love'\r\n  });\r\n  ```\r\n  @method property\r\n  @for helpers\r\n  @param {String} name of stored property\r\n  @param {Object} [options]\r\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`)\r\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\r\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\r\n  @param {String} [options.type] `get` is evaluated by default, use `\"Function\"` to skip evaluation\r\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\r\n  @param {String} [options.prop_key='__properties'] underlying key on object to store property\r\n  @return {Function} `()`: get, `(value)`: set\r\n*/\r\nexport default function property(name, options) {\r\n  options = options || {};\r\n  var prop_key = options.prop_key || '__properties';\r\n\r\n  var property = function(value) {//eslint-disable-line no-shadow\r\n    var properties = this[prop_key] = this[prop_key] || {};\r\n    var context = valueOrDefault(property.context, this);\r\n\r\n    if (arguments.length)\r\n      return set.call(this);\r\n    else\r\n      return get.call(this);\r\n\r\n    function get() {\r\n      value = valueOrDefault(properties[name], property.default_value);\r\n\r\n      // Unwrap value if its type is not a function\r\n      if (isFunction(value) && options.type != 'Function')\r\n        value = value.call(this);\r\n\r\n      return isFunction(options.get) ? options.get.call(context, value) : value;\r\n    }\r\n\r\n    function set() {\r\n      // Validate\r\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(this, value))\r\n        throw new Error('Invalid value for ' + name + ': ' + JSON.stringify(value));\r\n\r\n      property.previous = properties[name];\r\n      properties[name] = value;\r\n\r\n      if (isFunction(options.set) && !isUndefined(value)) {\r\n        var response = options.set.call(context, value, property.previous);\r\n\r\n        if (response && 'override' in response)\r\n          properties[name] = response.override;\r\n        if (response && isFunction(response.after))\r\n          response.after.call(context, properties[name]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n\r\n  // For checking if function is a property\r\n  property.is_property = true;\r\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\r\n  property.default_value = options.default_value;\r\n  property.context = options.context;\r\n\r\n  return property;\r\n}\r\n","import d3 from 'd3';\r\n\r\n/**\r\n  Helper for robustly determining width/height of given selector\r\n\r\n  @method dimensions\r\n  @for helpers\r\n  @param {d3.Selection} selection\r\n  @return {Object} `{width, height}`\r\n*/\r\nexport default function dimensions(selection) {\r\n  // 1. Get width/height set via css (only valid for svg and some other elements)\r\n  var client = clientDimensions(selection);\r\n\r\n  if (client.width && client.height)\r\n    return client;\r\n\r\n  // 2. Get width/height set via attribute\r\n  var attr = attrDimensions(selection);\r\n\r\n  if (isSVG(selection)) {\r\n    return {\r\n      width: client.width != null ? client.width : attr.width || 0,\r\n      height: client.height != null ? client.height : attr.height || 0\r\n    };\r\n  }\r\n  else {\r\n    var bbox = bboxDimensions(selection);\r\n\r\n    // Size set by css -> client (only valid for svg and some other elements)\r\n    // Size set by svg -> attr override or bounding_box\r\n    // -> Take maximum\r\n    return {\r\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\r\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\r\n    };\r\n  }\r\n}\r\n\r\nfunction clientDimensions(selection) {\r\n  var element = selection.node();\r\n\r\n  var client_dimensions = {\r\n    width: element && element.clientWidth,\r\n    height: element && element.clientHeight\r\n  };\r\n\r\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\r\n  //        calculate from css\r\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\r\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\r\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\r\n    var styles = window.getComputedStyle(element);\r\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\r\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\r\n  }\r\n\r\n  return client_dimensions;\r\n}\r\n\r\nfunction attrDimensions(selection) {\r\n  return {\r\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\r\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\r\n  };\r\n}\r\n\r\nfunction bboxDimensions(selection) {\r\n  var element = selection.node();\r\n  var bbox;\r\n  try {\r\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\r\n  }\r\n  catch(ex) {\r\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\r\n    // Ignore error and set to empty\r\n    bbox = {width: 0, height: 0};\r\n  }\r\n\r\n  return bbox;\r\n}\r\n\r\nfunction isSVG(selection) {\r\n  return selection.node().nodeName == 'svg';\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  extend,\r\n  objectEach,\r\n  uniq,\r\n  contains,\r\n  flatten\r\n} from '../utils';\r\nimport {\r\n  min,\r\n  max,\r\n  isSeriesData\r\n} from './index';\r\n\r\n/**\r\n  Create scale from options\r\n\r\n  @example\r\n  ```javascript\r\n  // Simple type, range, and domain\r\n  var scale = createScale({\r\n    type: 'linear',\r\n    domain: [0, 100],\r\n    range: [0, 500]\r\n  });\r\n\r\n  // Scale is passed through\r\n  var original = d3.scale.linear();\r\n  var scale = createScale(original);\r\n  scale === original;\r\n\r\n  // Set other properties by passing in \"arguments\" array\r\n  var scale = createScale({\r\n    type: 'ordinal',\r\n    domain: ['a', 'b', 'c', 'd', 'e'],\r\n    rangeRoundBands: [[0, 100], 0.1, 0.05]\r\n  });\r\n  ```\r\n  @method createScale\r\n  @for helpers\r\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\r\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\r\n  @param {Array} [options.domain] Domain for scale\r\n  @param {Array} [options.range] Range for scale\r\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\r\n  @param {Function} [options.value] \"di\"-function for getting value for data\r\n  @param {String} [options.key] Data key to extract value\r\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\r\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\r\n\r\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\r\n  - Requires \"data\" or \"series\" options to determine number of series\r\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\r\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\r\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\r\n  @return {d3.Scale}\r\n*/\r\nexport default function createScale(options) {\r\n  options = options || {};\r\n\r\n  // If function, scale was passed in as options\r\n  if (isFunction(options))\r\n    return options;\r\n\r\n  // Create scale (using d3.time.scale() if type is 'time')\r\n  var scale;\r\n  if (options.type == 'time')\r\n    scale = d3.time.scale();\r\n  else if (d3.scale[options.type])\r\n    scale = d3.scale[options.type]();\r\n  else\r\n    scale = d3.scale.linear();\r\n\r\n  objectEach(options, function(value, key) {\r\n    if (scale[key]) {\r\n      // If option is standard property (domain or range), pass in directly\r\n      // otherwise, pass in as arguments\r\n      // (don't pass through internal options)\r\n      if (key == 'range' || key == 'domain')\r\n        scale[key](value);\r\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\r\n        scale[key].apply(scale, value);\r\n    }\r\n  });\r\n\r\n  if (!options.domain && options.data && (options.key || options.value))\r\n    scale = setDomain(scale, options);\r\n\r\n  // Add centered and adjacent extensions to ordinal\r\n  // (centered by default for ordinal)\r\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\r\n  if (options.type == 'ordinal' && (centered || options.adjacent))\r\n    scale = addCentered(scale, options);\r\n\r\n  // Add padding extension to ordinal\r\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\r\n    scale = addPadding(scale, options);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction setDomain(scale, options) {\r\n  // Use value \"di\" or create for key\r\n  var getValue = options.value || function(d) {\r\n    return d[options.key];\r\n  };\r\n\r\n  // Enforce series data\r\n  var data = options.data;\r\n  if (!isSeriesData(data))\r\n    data = [{values: data}];\r\n\r\n  var domain;\r\n  if (options.type == 'ordinal') {\r\n    // Domain for ordinal is array of unique values\r\n    domain = uniq(flatten(data.map(function(series) {\r\n      if (series && series.values)\r\n        return series.values.map(getValue);\r\n    })));\r\n  }\r\n  else {\r\n    var min_value = min(data, getValue);\r\n\r\n    domain = [\r\n      min_value < 0 ? min_value : 0,\r\n      max(data, getValue)\r\n    ];\r\n  }\r\n\r\n  scale.domain(domain);\r\n  return scale;\r\n}\r\n\r\nfunction addCentered(original, options) {\r\n  // Get series count for adjacent\r\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\r\n\r\n  // TODO Look into removing closure\r\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\r\n    var context = function(value, series_index) {\r\n      var width = context.width();\r\n\r\n      if (!options.adjacent)\r\n        series_index = 0;\r\n\r\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\r\n    };\r\n    extend(context, original, {\r\n      width: function() {\r\n        var range_band = context.rangeBand && context.rangeBand();\r\n        var width = isFinite(range_band) ? range_band : 0;\r\n\r\n        if (options.adjacent)\r\n          width = width / series_count;\r\n\r\n        return width;\r\n      }\r\n    });\r\n\r\n    // TODO test copy() behavior\r\n\r\n    return context;\r\n  })(original, options, series_count);\r\n\r\n  return scale;\r\n}\r\n\r\nfunction addPadding(scale, options) {\r\n  var padding = options.padding != null ? options.padding : 0.1;\r\n\r\n  var original_range = scale.range;\r\n  scale.range = function(range) {\r\n    if (!arguments.length) return original_range();\r\n\r\n    scale.rangeBands(\r\n      range,\r\n      padding,\r\n      padding / 2\r\n    );\r\n  };\r\n\r\n  if (options.range)\r\n    scale.range(options.range);\r\n\r\n  // TODO test copy() behavior\r\n  return scale;\r\n}\r\n","import { extend } from '../utils';\r\n\r\n/**\r\n  Mix prototypes into single combined prototype for chart/component\r\n\r\n  Designed specifically to work with d3.chart:\r\n\r\n  - transform is called from last to first\r\n  - initialize is called from first to last\r\n  - remaining are overriden from first to last\r\n\r\n  @example\r\n  ```js\r\n  var a = {transform: function() {}, a: 1};\r\n  var b = {initialize: function() {}, b: 2};\r\n  var c = {c: 3};\r\n\r\n  d3.chart('Chart').extend('Custom', mixin(a, b, c, {\r\n    initialize: function() {\r\n      // d\r\n    },\r\n    transform: function() {\r\n      // d\r\n    }\r\n  }));\r\n\r\n  // initialize: Chart -> b -> d\r\n  // transform: d -> a -> Chart\r\n  ```\r\n  @method mixin\r\n  @for helpers\r\n  @param {Array|Object...} mixins... Array of mixins or mixins as separate arguments\r\n  @return {Object}\r\n*/\r\nexport default function mixin(mixins) {\r\n  mixins = Array.isArray(mixins) ? mixins : Array.prototype.slice.call(arguments);\r\n  var mixed = extend.apply(null, [{}].concat(mixins));\r\n\r\n  // Don't mixin constructor with prototype\r\n  delete mixed.constructor;\r\n\r\n  if (mixed.initialize) {\r\n    mixed.initialize = function initialize() {\r\n      var args = Array.prototype.slice.call(arguments);\r\n\r\n      mixins.forEach(function(extension) {\r\n        if (extension.initialize)\r\n          extension.initialize.apply(this, args);\r\n      }, this);\r\n    };\r\n  }\r\n  if (mixed.transform) {\r\n    mixed.transform = function transform(data) {\r\n      return mixins.reduceRight(function(memo, extension) {\r\n        if (extension && extension.transform)\r\n          return extension.transform.call(this, memo);\r\n        else\r\n          return memo;\r\n      }.bind(this), data);\r\n    };\r\n  }\r\n\r\n  return mixed;\r\n}\r\n","import { extend } from '../utils';\r\nimport { translate } from './index';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack())\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack({\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n  @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n  @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n  @return {Function}\r\n*/\r\nexport default function stack(options) {\r\n  options = extend({\r\n    direction: 'vertical',\r\n    origin: 'top',\r\n    padding: 0,\r\n    min_height: 0,\r\n    min_width: 0\r\n  }, options);\r\n\r\n  // Ensure valid origin based on direction\r\n  if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n    options.origin = 'left';\r\n  else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n    options.origin = 'top';\r\n\r\n  function padding(i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  return function(elements) {\r\n    if (elements && elements.attr) {\r\n      var previous = 0;\r\n\r\n      elements.attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n        var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n        var x = 0;\r\n        var y = 0;\r\n        var next_position;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          next_position = previous + spacing_width + padding(i);\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(i);\r\n          else\r\n            x = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n        else {\r\n          next_position = previous + spacing_height + padding(i);\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(i);\r\n          else\r\n            y = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import d3 from 'd3';\r\nimport {\r\n  defaults,\r\n  extend,\r\n  first,\r\n  isNumber,\r\n  isObject,\r\n  objectEach\r\n} from '../utils';\r\n\r\n/**\r\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\r\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\r\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\r\n\r\n  @class helpers\r\n*/\r\n\r\nimport property from './property';\r\nimport dimensions from './dimensions';\r\nimport createScale from './create-scale';\r\nimport mixin from './mixin';\r\nimport stack from './stack';\r\n\r\n/**\r\n  Translate by (x, y) distance\r\n\r\n  @example\r\n  ```javascript\r\n  translate(10, 15) == 'translate(10, 15)'\r\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\r\n  ```\r\n  @method translate\r\n  @param {Number|Object} [x] value or `{x, y}`\r\n  @param {Number} [y]\r\n  @return {String}\r\n*/\r\nexport function translate(x, y) {\r\n  if (isObject(x)) {\r\n    y = x.y;\r\n    x = x.x;\r\n  }\r\n\r\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\r\n}\r\n\r\n/**\r\n  Rotate by degrees, with optional center\r\n\r\n  @method rotate\r\n  @param {Number} degrees\r\n  @param {Object} [center = {x: 0, y: 0}]\r\n  @return {String}\r\n*/\r\nexport function rotate(degrees, center) {\r\n  var rotation = 'rotate(' + (degrees || 0);\r\n  if (center)\r\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\r\n  rotation += ')';\r\n\r\n  return rotation;\r\n}\r\n\r\n/**\r\n  Find vertical offset to vertically align text\r\n  (needed due to lack of `alignment-baseline` support in Firefox)\r\n\r\n  @example\r\n  ```js\r\n  var label = d3.select('text');\r\n\r\n  // Place label vertically so that origin is top-left\r\n  var offset = alignText(label);\r\n  label.attr('transform', translate(0, offset));\r\n\r\n  // Center label for line-height of 20px\r\n  var offset = alignText(label, 20);\r\n  label.attr('transform', translate(0, offset));\r\n  ```\r\n  @method alignText\r\n  @param {element} element\r\n  @param {Number} [line_height]\r\n  @return {Number} offset\r\n*/\r\nexport function alignText(element, line_height) {\r\n  var offset = 0;\r\n  try {\r\n    var height = element.getBBox().height;\r\n\r\n    var element_style = window.getComputedStyle(element);\r\n    var css_font_size = parseFloat(element_style['font-size']);\r\n    var css_line_height = parseFloat(element_style['line-height']);\r\n\r\n    // If line-height: normal, use estimate 1.14em\r\n    // (actual line-height depends on browser and font)\r\n    if (isNaN(css_line_height))\r\n      css_line_height = 1.15 * css_font_size;\r\n\r\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\r\n\r\n    // Add additional line-height, if specified\r\n    var height_adjustment = 0;\r\n    if (line_height && line_height > 0)\r\n      height_adjustment = (line_height - height) / 2;\r\n\r\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\r\n  }\r\n  catch (ex) {\r\n    // Errors can occur from getBBox and getComputedStyle\r\n    // No useful information for offset, do nothing\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\n/**\r\n  Determine if given data is likely series data\r\n\r\n  @method isSeriesData\r\n  @param {Array} data\r\n  @return {Boolean}\r\n*/\r\nexport function isSeriesData(data) {\r\n  var first_item = first(data);\r\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\r\n}\r\n\r\n/**\r\n  Get max for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\r\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\r\n  ];\r\n  max(data, function(d, i) { return d.y; }); // -> 4\r\n  ```\r\n  @method max\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function max(data, getValue) {\r\n  var getMax = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[1];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_max = getMax(series.values);\r\n        return series_max > memo ? series_max : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, -Infinity);\r\n  }\r\n  else {\r\n    return getMax(data);\r\n  }\r\n}\r\n\r\n/**\r\n  Get min for array/series by value di\r\n\r\n  @example\r\n  ```js\r\n  var data = [\r\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\r\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\r\n  ];\r\n  min(data, function(d, i) { return d.x; }); // -> 0\r\n  ```\r\n  @method min\r\n  @param {Array} data\r\n  @param {Function} getValue di function that returns value for given (d, i)\r\n  @return {Number}\r\n*/\r\nexport function min(data, getValue) {\r\n  var getMin = function(series_data) {\r\n    return series_data && d3.extent(series_data, getValue)[0];\r\n  };\r\n\r\n  if (isSeriesData(data)) {\r\n    return data.reduce(function(memo, series) {\r\n      if (series && Array.isArray(series.values)) {\r\n        var series_min = getMin(series.values);\r\n        return series_min < memo ? series_min : memo;\r\n      }\r\n      else {\r\n        return memo;\r\n      }\r\n    }, Infinity);\r\n  }\r\n  else {\r\n    return getMin(data);\r\n  }\r\n}\r\n\r\n// TODO Look into converting to d3's internal style handling\r\n// Convert key,values to style string\r\n//\r\n// @example\r\n// ```js\r\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\r\n// ```\r\n// @method style\r\n// @param {Object} styles\r\n// @return {String}\r\nexport function style(styles) {\r\n  if (!styles)\r\n    return '';\r\n\r\n  var keyValues = [];\r\n  objectEach(styles, function(value, key) {\r\n    keyValues.push(key + ': ' + value);\r\n  });\r\n  styles = keyValues.join('; ');\r\n\r\n  return styles ? styles + ';' : '';\r\n}\r\n\r\n/**\r\n  Get formatted margins for varying input\r\n\r\n  @method getMargins\r\n  @example\r\n  ```js\r\n  getMargins(4);\r\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n  getMargins({top: 20}, {top: 8, bottom: 8});\r\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\r\n  ```\r\n  @param {Number|Object} margins\r\n  @param {Object} default_margins\r\n  @return {Object}\r\n*/\r\nexport function getMargins(margins, default_margins) {\r\n  if (isNumber(margins))\r\n    return {top: margins, right: margins, bottom: margins, left: margins};\r\n  else\r\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\r\n}\r\n\r\n/**\r\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\r\n  Wrapped function uses standard d3 arguments and context.\r\n\r\n  Note: in order to pass proper context to di-functions called within di-function\r\n  use `.call(this, d, i)` (where \"this\" is d3 context)\r\n\r\n  @example\r\n  ```javascript\r\n  d3.chart('Base').extend('Custom', {\r\n    initialize: function() {\r\n      this.base.select('point')\r\n        .attr('cx', this.x);\r\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\r\n    },\r\n\r\n    x: di(function(chart, d, i) {\r\n      // \"this\" is standard d3 context: node\r\n      return chart.xScale()(chart.xValue.call(this, d, i));\r\n    })\r\n\r\n    // xScale, xValue...\r\n  });\r\n  ```\r\n  @method di\r\n  @param {Function} callback with `(chart, d, i)` arguments\r\n  @return {Function}\r\n*/\r\nexport function di(callback) {\r\n  // Create intermediate wrapping in case it's called without binding\r\n  var wrapped = function wrapped(d, i, j) {\r\n    return callback.call(this, undefined, d, i, j);\r\n  };\r\n  wrapped._is_di = true;\r\n  wrapped.original = callback;\r\n\r\n  return wrapped;\r\n}\r\n\r\nexport function bindDi(diFn, chart) {\r\n  return function wrapped(d, i, j) {\r\n    return (diFn.original || diFn).call(this, chart, d, i, j);\r\n  };\r\n}\r\n\r\n// Bind all di-functions found in chart\r\nexport function bindAllDi(chart) {\r\n  for (var key in chart) {\r\n    if (chart[key] && chart[key]._is_di)\r\n      chart[key] = bindDi(chart[key], chart);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  Get parent data for element (used to get parent series for data point)\r\n\r\n  @example\r\n  ```js\r\n  var data = [{\r\n    name: 'Input',\r\n    values: [1, 2, 3]\r\n  }];\r\n\r\n  d3.selectAll('g')\r\n    .data(data)\r\n    .enter().append('g')\r\n      .selectAll('text')\r\n        .data(function(d) { return d.values; })\r\n        .enter().append('text')\r\n          .text(function(d) {\r\n            var series_data = getParentData(this);\r\n            return series_data.name + ': ' + d;\r\n          });\r\n\r\n  // Input: 1, Input: 2, Input: 3\r\n  ```\r\n  @method getParentData\r\n  @param {Element} element\r\n  @return {Any}\r\n*/\r\nexport function getParentData(element) {\r\n  // @internal Shortcut if element + parentData needs to be mocked\r\n  if (element._parent_data)\r\n    return element._parent_data;\r\n\r\n  var parent = element && element.parentNode;\r\n  if (parent) {\r\n    var data = d3.select(parent).data();\r\n    return data && data[0];\r\n  }\r\n}\r\n\r\nexport function createHelper(type) {\r\n  return function(id, options) {\r\n    if (!options) {\r\n      options = id;\r\n      id = undefined;\r\n    }\r\n\r\n    return extend({id: id, type: type}, options);\r\n  };\r\n}\r\n\r\nvar helpers = {\r\n  property: property,\r\n  dimensions: dimensions,\r\n  translate: translate,\r\n  rotate: rotate,\r\n  alignText: alignText,\r\n  isSeriesData: isSeriesData,\r\n  max: max,\r\n  min: min,\r\n  createScale: createScale,\r\n  style: style,\r\n  getMargins: getMargins,\r\n  stack: stack,\r\n  di: di,\r\n  bindDi: bindDi,\r\n  bindAllDi: bindAllDi,\r\n  getParentData: getParentData,\r\n  mixin: mixin,\r\n  createHelper: createHelper\r\n};\r\n\r\nexport {\r\n  helpers as default,\r\n  property,\r\n  dimensions,\r\n  createScale,\r\n  mixin,\r\n  stack\r\n};\r\n","import {\r\n  contains,\r\n  defaults,\r\n  extend,\r\n  isFunction,\r\n  objectEach\r\n} from './utils';\r\n\r\n/*\r\n  Extract layout from the given options\r\n\r\n  @param {Array} options (deprecated: Object)\r\n  @return {Object} {data, items, layout}\r\n*/\r\nexport function extractLayout(options) {\r\n  if (!options)\r\n    return;\r\n\r\n  // DEPRECATED\r\n  // Convert options object to array style\r\n  if (!Array.isArray(options))\r\n    options = convertObjectLayoutToArray(options);\r\n\r\n  var data = {\r\n    _charts: {},\r\n    _components: {}\r\n  };\r\n  var items = {};\r\n  var layout = [];\r\n  var charts = [];\r\n  var components = [];\r\n\r\n  // TEMP Idenfify charts from layered,\r\n  // eventually no distinction between charts and components\r\n  var found = {\r\n    row: false,\r\n    charts: false\r\n  };\r\n\r\n  // Components are added from inside-out\r\n  // so for position: top, position: left, use unshift\r\n  options.forEach(function(row, row_index) {\r\n    var row_components = [];\r\n\r\n    if (!Array.isArray(row))\r\n      row = [row];\r\n    if (row.length > 1)\r\n      found.row = true;\r\n\r\n    var row_layout = row.map(function(item, col_index) {\r\n      if (!item)\r\n        return;\r\n\r\n      if (item._layered) {\r\n        // Charts\r\n        found.charts = true;\r\n        var chart_ids = [];\r\n\r\n        item.items.forEach(function(chart, chart_index) {\r\n          chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\r\n\r\n          chart_ids.push(chart.id);\r\n          charts.push(chart);\r\n          items[chart.id] = chart;\r\n        });\r\n\r\n        return chart_ids;\r\n      }\r\n\r\n      var component = prepareComponent(item, row_index, col_index);\r\n      items[component.id] = component;\r\n\r\n      if (row.length > 1) {\r\n        if (!found.charts) {\r\n          // Left\r\n          setPosition(component, 'left');\r\n          row_components.unshift(component);\r\n        }\r\n        else {\r\n          // Right\r\n          setPosition(component, 'right');\r\n          row_components.push(component);\r\n        }\r\n      }\r\n      else {\r\n        if (!found.row) {\r\n          // Top\r\n          setPosition(component, 'top');\r\n          components.unshift(component);\r\n        }\r\n        else {\r\n          // Bottom\r\n          setPosition(component, 'bottom');\r\n          components.push(component);\r\n        }\r\n      }\r\n\r\n      return component.id;\r\n    });\r\n\r\n    if (row_components.length)\r\n      components = components.concat(row_components);\r\n\r\n    layout.push(row_layout);\r\n  });\r\n\r\n  charts.forEach(extractData('_charts'));\r\n  components.forEach(extractData('_components'));\r\n\r\n  return {\r\n    data: data,\r\n    items: items,\r\n    layout: layout,\r\n\r\n    charts: charts,\r\n    components: components\r\n  };\r\n\r\n  function prepareComponent(component, row_index, col_index) {\r\n    return defaults({}, component, {id: getId(row_index, col_index)});\r\n  }\r\n  function setPosition(component, position) {\r\n    if (component && isFunction(component.position))\r\n      component.position(position);\r\n    else\r\n      component.position = position;\r\n  }\r\n  function getId(row_index, col_index, layered_index) {\r\n    var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\r\n    if (layered_index != null)\r\n      id += '-' + (layered_index + 1);\r\n\r\n    return id;\r\n  }\r\n\r\n  function extractData(type) {\r\n    return function(item) {\r\n      if (item.data && !isFunction(item.data)) {\r\n        data[type][item.id] = item.data;\r\n        data[item.id] = item.data;\r\n        delete item.data;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n// DEPRECATED\r\nfunction convertObjectLayoutToArray(options) {\r\n  if (typeof console != 'undefined' && console.warn)\r\n    console.warn('DEPRECATED - object-style options have been deprecated for array-style options and will be removed in the next version of d3.compose');\r\n\r\n  var layout = [];\r\n  var layered = {_layered: true, items: []};\r\n  var by_position = {top: [], right: [], bottom: [], left: []};\r\n\r\n  objectEach(options.charts, function(chart_options, id) {\r\n    layered.items.push(extend({id: id}, chart_options));\r\n  });\r\n\r\n  objectEach(options.components, function(component_options, id) {\r\n    if (!by_position[component_options.position])\r\n      throw new Error('Unsupported position for component, position=\"' + component_options.position + '\" id=\"' + id + '\"');\r\n\r\n    by_position[component_options.position].push(extend({id: id}, component_options));\r\n  });\r\n\r\n  // Add top items (from inside-out)\r\n  layout = by_position.top.reverse();\r\n\r\n  // Add left items (inside-out), charts, and right items\r\n  if (by_position.left.length || layered.items.length || by_position.right.length) {\r\n    var row = by_position.left.reverse();\r\n    if (layered.items.length)\r\n      row.push(layered);\r\n\r\n    row = row.concat(by_position.right);\r\n    layout.push(row);\r\n  }\r\n\r\n  // Add bottom items\r\n  layout.push.apply(layout, by_position.bottom);\r\n\r\n  return layout;\r\n}\r\n\r\n/*\r\n  Calculate component and chart coordinates for given layout\r\n*/\r\nexport function calculateLayout(components, data, demux) {\r\n  var overall_layout = {top: [], right: [], bottom: [], left: []};\r\n  components.forEach(function(component) {\r\n    if (component.skip_layout || !component.getLayout)\r\n      return;\r\n\r\n    var layout = component.getLayout(demux(component.id, data));\r\n    var position = layout && layout.position;\r\n\r\n    if (!contains(['top', 'right', 'bottom', 'left'], position))\r\n      return;\r\n\r\n    overall_layout[position].push({\r\n      offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\r\n      component: component\r\n    });\r\n  });\r\n\r\n  return overall_layout;\r\n}\r\n\r\n/*\r\n  Apply calculated layout to charts and components\r\n*/\r\nexport function applyLayout(layout, chart_position, width, height) {\r\n  layout.top.reduce(function(previous, part) {\r\n    var y = previous - part.offset;\r\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n    return y;\r\n  }, chart_position.top);\r\n\r\n  layout.right.reduce(function(previous, part, index, parts) {\r\n    var previousPart = parts[index - 1] || {offset: 0};\r\n    var x = previous + previousPart.offset;\r\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n    return x;\r\n  }, width - chart_position.right);\r\n\r\n  layout.bottom.reduce(function(previous, part, index, parts) {\r\n    var previousPart = parts[index - 1] || {offset: 0};\r\n    var y = previous + previousPart.offset;\r\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\r\n\r\n    return y;\r\n  }, height - chart_position.bottom);\r\n\r\n  layout.left.reduce(function(previous, part) {\r\n    var x = previous - part.offset;\r\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\r\n\r\n    return x;\r\n  }, chart_position.left);\r\n\r\n  function setLayout(component, x, y, options) {\r\n    if (component && isFunction(component.setLayout))\r\n      component.setLayout(x, y, options);\r\n  }\r\n}\r\n","import d3 from 'd3';\nimport {\n  isFunction,\n  find,\n  defaults,\n  extend,\n  objectEach,\n  difference,\n  pluck\n} from './utils';\nimport {\n  getMargins,\n  property,\n  style,\n  translate\n} from './helpers';\nimport {\n  extractLayout,\n  calculateLayout,\n  applyLayout\n} from './layout';\nimport Base from './Base';\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\n\n/**\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\n\n  @example\n  ```html\n  <div id=\"#chart\"></div>\n  ```\n  ```js\n  var chart = d3.select('#chart').chart('Compose', function(data) {\n    // Process data...\n\n    // Create shared scales\n    var scales = {\n      x: {data: data.input, key: 'x', adjacent: true},\n      y: {data: data.input, key: 'y'},\n      y2: {data: data.output, key: 'y'}\n    };\n\n    // Setup charts and components\n    var charts = [\n      d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\n      d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\n    ];\n\n    var title = d3c.title('d3.compose');\n    var yAxis = d3c.axis({scale: scales.y});\n    var y2Axis = d3c.axis({scale: scales.y2});\n\n    // Layout charts and components\n    return [\n      [yAxis, d3c.layered(charts), y2Axis]\n    ];;\n  });\n\n  chart.draw({input: [...], output: [...]});\n  ```\n  @class Compose\n  @extends Base\n*/\nexport default Base.extend('Compose', {\n  initialize: function() {\n    // Overriding transform in init jumps it to the top of the transform cascade\n    // Therefore, data coming in hasn't been transformed and is raw\n    // (Save raw data for redraw)\n    this.transform = function(data) {\n      this.rawData(data);\n      return data;\n    };\n\n    // Responsive svg based on the following approach (embedded + padding hack)\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\n    // (not enabled if selection is svg)\n    if (this.base.node().tagName != 'svg') {\n      this.container = this.base.append('div')\n        .attr('class', 'chart-compose-container');\n\n      this.base = this.container.append('svg')\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\n        .attr('version', '1.1')\n        .attr('class', 'chart-compose');\n    }\n    else {\n      this.base.classed('chart-compose', true);\n    }\n\n    this.attachHoverListeners();\n  },\n\n  /**\n    Get/set the options `object/function` for the chart that takes `data` and\n    returns `{charts, components}` for composing child charts and components.\n\n    @example\n    ```js\n    // get\n    chart.options();\n\n    // set (static)\n    chart.options({\n      charts: {},\n      components: {}\n    });\n\n    // set (dynamic, takes data and returns options)\n    chart.options(function(data) {\n      // process data...\n\n      return {\n        charts: {},\n        components: {}\n      };\n    });\n\n    // Set directly from d3.chart creation\n    d3.select('#chart')\n      .chart('Compose', function(data) {\n        // ...\n      });\n    ```\n    @property options\n    @type Function|Object\n  */\n  options: property('options', {\n    default_value: function() {},\n    type: 'Function',\n    set: function(options) {\n      // If options is plain object,\n      // return from generic options function\n      if (!isFunction(options)) {\n        return {\n          override: function() {\n            return options;\n          }\n        };\n      }\n    }\n  }),\n\n  // Store raw data for container before it has been transformed\n  rawData: property('rawData'),\n\n  /**\n    Margins between edge of container and components/chart\n\n    @example\n    ```js\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\n    ```\n    @property margins\n    @type Object {top, right, bottom, left}\n    @default {top: 10, right: 10, bottom: 10, left: 10}\n  */\n  margins: property('margins', {\n    default_value: default_compose_margins,\n    set: function(values) {\n      return {\n        override: getMargins(values, default_compose_margins)\n      };\n    }\n  }),\n\n  // Chart position\n  chartPosition: property('chartPosition', {\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\n    set: function(values) {\n      return {\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\n      };\n    },\n    get: function(values) {\n      values.width = this._width() - values.right - values.left;\n      values.height = this._height() - values.bottom - values.top;\n\n      return values;\n    }\n  }),\n\n  /**\n    Get/set overall width of chart\n\n    @property width\n    @type Number\n  */\n  width: property('width', {\n    default_value: null\n  }),\n\n  /**\n    Get/set overall height of chart\n\n    @property height\n    @type Number\n  */\n  height: property('height', {\n    default_value: null\n  }),\n\n  _width: function() {\n    var width = this.width();\n    return width != null ? width : Base.prototype.width.call(this);\n  },\n  _height: function() {\n    var height = this.height();\n    return height != null ? height : Base.prototype.height.call(this);\n  },\n\n  /**\n    Enable responsive container + viewBox so that chart scales to fill width\n    (only works if selection is not an svg)\n\n    @property responsive\n    @type Boolean\n    @default true\n  */\n  responsive: property('responsive', {\n    default_value: true\n  }),\n\n  // Set svg viewBox attribute\n  viewBox: property('viewBox', {\n    default_value: function() {\n      if (this.responsive() && this.width() && this.height())\n        return '0 0 ' + this.width() + ' ' + this.height();\n      else\n        return null;\n    }\n  }),\n\n  // Set svg preserveAspectRatio attribute\n  preserveAspectRatio: property('preserveAspectRatio', {\n    default_value: function() {\n      if (this.responsive())\n        return 'xMidYMid meet';\n      else\n        return null;\n    }\n  }),\n\n  // Set container style\n  containerStyle: property('containerStyle', {\n    default_value: function() {\n      if (this.responsive()) {\n        var aspect_ratio = 1;\n        if (this.width() && this.height())\n          aspect_ratio = this.height() / this.width();\n\n        return style({\n          width: '100%',\n          height: 0,\n          'padding-top': (aspect_ratio * 100) + '%',\n          position: 'relative'\n        });\n      }\n      else {\n        return style({position: 'relative'});\n      }\n    }\n  }),\n\n  // Set base style\n  baseStyle: property('baseStyle', {\n    default_value: function() {\n      if (this.responsive()) {\n        return style({\n          position: 'absolute',\n          top: 0,\n          left: 0\n        });\n      }\n      else {\n        return null;\n      }\n    }\n  }),\n\n  /**\n    Set charts from options or get chart instances.\n    Each chart should use a unique key so that updates are passed to the existing chart\n    (otherwise they are recreated on update).\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\n\n    @example\n    ```js\n    chart.charts([\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\n    ]);\n    ```\n    @property charts\n    @type Array\n  */\n  charts: property('charts', {\n    set: function(chart_options, charts) {\n      // Store actual charts rather than options\n      return {\n        override: this._attachItems(chart_options, charts, this)\n      };\n    },\n    default_value: []\n  }),\n\n  /**\n    Set components from options or get components instances.\n    Each component should use a unique key so that updates are passed to the existing chart\n    (otherwise they are recreated on update).\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\n\n    @example\n    ```js\n    chart.components([\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\n      {id: 'title', type: 'Title'} // options to pass to Title component\n    ])\n    ```\n    @property components\n    @type Array\n  */\n  components: property('components', {\n    set: function(component_options, components) {\n      // Store actual components rather than options\n      return {\n        override: this._attachItems(component_options, components, this)\n      };\n    },\n    default_value: []\n  }),\n\n  /**\n    Delay start of transition by specified milliseconds.\n    (applied to all charts and components as default)\n\n    @property delay\n    @type Number|Function\n    @default d3 default: 0\n  */\n  delay: property('delay', {type: 'Function'}),\n\n  /**\n    Transition duration in milliseconds.\n    (applied to all charts and components as default)\n\n    @property duration\n    @type Number|Function\n    @default d3 default: 250ms\n  */\n  duration: property('duration', {type: 'Function'}),\n\n  /**\n    Transition ease function.\n    (applied to all charts and components as default)\n\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\n    - Note: arguments to pass to `d3.ease` are not supported\n\n    @property ease\n    @type String|Function\n    @default d3 default: 'cubic-in-out'\n  */\n  ease: property('ease', {type: 'Function'}),\n\n  /**\n    Draw chart with given data\n\n    @example\n    ```js\n    var chart = d3.select('#chart')\n      .chart('Compose', function(data) {\n        // ...\n      });\n\n    chart.draw([1, 2, 3]);\n\n    chart.draw({values: [1, 2, 3]});\n\n    chart.draw([\n      {values: [1, 2, 3]},\n      {values: [4, 5, 6]}\n    ]);\n    ```\n    @method draw\n    @param {Any} data\n  */\n  draw: function(data) {\n    var config = this._prepareConfig(this.options(), data);\n    if (!config)\n      config = {data: {_charts: {}, _components: {}}, layout: []};\n\n    // Set charts and components from config\n    this.charts(config.charts);\n    this.components(config.components);\n\n    // Add config data\n    data = {\n      original: data,\n      config: config.data\n    };\n    this.data(data);\n\n    this._setDimensions();\n\n    // Layout components\n    this.layout(config.layout, data);\n\n    // Full draw now that everything has been laid out\n    d3.chart().prototype.draw.call(this, data);\n  },\n\n  /**\n    Redraw chart with current data\n\n    @method redraw\n  */\n  redraw: function() {\n    if (this.rawData())\n      this.draw(this.rawData().original);\n  },\n\n  demux: function(name, data) {\n    if (!data || !data.config || !data.original)\n      return data;\n\n    if (findById(this.charts(), name) && data.config._charts[name])\n      return data.config._charts[name];\n    else if (findById(this.components(), name) && data.config._components[name])\n      return data.config._components[name];\n    else\n      return data.original;\n  },\n\n  // Create chart layer (for laying out charts)\n  createChartLayer: function(options) {\n    return this.base.append('g')\n      .attr('class', 'chart-layer')\n      .attr('data-zIndex', options && options.z_index);\n  },\n\n  // Create component layer\n  createComponentLayer: function(options) {\n    return this.base.append('g')\n      .attr('class', 'chart-component-layer')\n      .attr('data-zIndex', options && options.z_index);\n  },\n\n  // Create overlay layer\n  createOverlayLayer: function() {\n    if (!this.container)\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\n\n    return this.container.append('div')\n      .attr('class', 'chart-overlay-layer');\n  },\n\n  // Layout components and charts for given data\n  layout: function(layout, data) {\n    // 1. Place chart layers\n    this._positionChartLayers();\n\n    // 2. Extract layout from components\n    layout = this._extractLayout(data);\n\n    // 3. Set chart position from layout\n    var chart_position = extend({}, this.margins());\n    objectEach(layout, function(parts, key) {\n      parts.forEach(function(part) {\n        chart_position[key] += part.offset || 0;\n      });\n    });\n    this.chartPosition(chart_position);\n\n    // 4. Position layers with layout\n    this.positionLayers(layout);\n  },\n\n  attachHoverListeners: function() {\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\n    // For non-responsive, bounding rectangle is container so calculations still apply\n\n    var trigger = this.trigger.bind(this);\n    var chartPosition = this.chartPosition.bind(this);\n    var container = this.container || this.base;\n    var base = this.base.node();\n    var chart_position, bounds, was_inside;\n\n    container.on('mouseenter', function() {\n      // Calculate chart position and bounds on enter and cache during move\n      chart_position = chartPosition();\n      bounds = extend({}, base.getBoundingClientRect());\n      bounds.top += window.scrollY;\n      bounds.bottom += window.scrollY;\n\n      was_inside = inside(bounds);\n      if (was_inside)\n        enter();\n    });\n    container.on('mousemove', function() {\n      var is_inside = inside(bounds);\n      if (was_inside && is_inside)\n        move();\n      else if (was_inside)\n        leave();\n      else if (is_inside)\n        enter();\n\n      was_inside = is_inside;\n    });\n    container.on('mouseleave', function() {\n      if (was_inside) {\n        was_inside = false;\n        leave();\n      }\n    });\n\n    function inside() {\n      var mouse = d3.mouse(document.documentElement);\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\n    }\n    function enter() {\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\n    }\n    function move() {\n      trigger('mousemove', translateToXY(d3.mouse(base)));\n    }\n    function leave() {\n      trigger('mouseleave');\n    }\n\n    function translateToXY(coordinates) {\n      var x = coordinates[0];\n      var y = coordinates[1];\n      var chart_x = x - chart_position.left;\n      var chart_y = y - chart_position.top;\n\n      // Set at chart bounds if outside of chart\n      if (x > (chart_position.left + chart_position.width))\n        chart_x = chart_position.width;\n      else if (x < chart_position.left)\n        chart_x = 0;\n\n      if (y > (chart_position.top + chart_position.height))\n        chart_y = chart_position.height;\n      else if (y < chart_position.top)\n        chart_y = 0;\n\n      return {\n        container: {x: x, y: y},\n        chart: {x: chart_x, y: chart_y}\n      };\n    }\n  },\n\n  // Attach chart/component child item with id\n  attach: function(id, item) {\n    item.id = id;\n    item.base.attr('data-id', id);\n    item.container = this;\n\n    Base.prototype.attach.call(this, id, item);\n\n    if (item && isFunction(item.trigger))\n      item.trigger('attach');\n  },\n\n  // Detach chart/component child item by id\n  detach: function(id, item) {\n    item.base.remove();\n\n    delete this._attached[id];\n\n    if (item && isFunction(item.trigger))\n      item.trigger('detach');\n  },\n\n  // Position chart and component layers\n  positionLayers: function(layout) {\n    this._positionChartLayers();\n    this._positionComponents(layout);\n    this._positionByZIndex();\n  },\n\n  //\n  // Internal\n  //\n\n  _setDimensions: function() {\n    // Set container and svg dimensions\n    // (if original selection is svg, no container and skip responsiveness)\n    if (this.container) {\n      this.container\n        .attr('style', this.containerStyle());\n    }\n\n    this.base\n      .attr('viewBox', this.viewBox())\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\n      .attr('style', this.baseStyle())\n      .attr('width', this.responsive() ? null : this.width())\n      .attr('height', this.responsive() ? null : this.height());\n  },\n\n  _attachItems: function(items, container, context) {\n    items = items || [];\n    container = container || [];\n\n    // Remove charts that are no longer needed\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\n    remove_ids.forEach(function(remove_id) {\n      context.detach(remove_id, findById(container, remove_id));\n    });\n\n    // Create or update charts\n    return items.map(function(options) {\n      // TODO May not have id, might need to auto-generate\n      // (might be during another step)\n      var id = options.id;\n      var item = findById(container, id);\n\n      if (options instanceof d3.chart()) {\n        // If chart instance, replace with instance\n        if (item)\n          context.detach(id, item);\n\n        context.attach(id, options);\n        return options;\n      }\n      else {\n        if (item && item.type != options.type) {\n          // If chart type has changed, detach and re-create\n          context.detach(id, item);\n          item = undefined;\n        }\n\n        if (!item) {\n          var Item = d3.chart(options.type);\n\n          if (!Item)\n            throw new Error('No registered d3.chart found for ' + options.type);\n\n          var layer_options = {z_index: Item.z_index || 0};\n          var createLayer = {\n            'chart': 'createChartLayer',\n            'component': 'createComponentLayer',\n            'overlay': 'createOverlayLayer'\n          }[Item.layer_type];\n\n          if (!createLayer)\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\n\n          var base = context[createLayer](layer_options);\n\n          item = new Item(base, options);\n          item.type = options.type;\n\n          context.attach(id, item);\n        }\n        else {\n          item.options(options);\n        }\n\n        return item;\n      }\n    });\n  },\n\n  _prepareConfig: function(options, data) {\n    return extractLayout(options(data));\n  },\n\n  _positionChartLayers: function() {\n    var position = this.chartPosition();\n    this.base.selectAll('.chart-layer')\n      .attr('transform', translate(position.left, position.top))\n      .attr('width', position.width)\n      .attr('height', position.height);\n  },\n\n  _positionComponents: function(layout) {\n    var chart_position = this.chartPosition();\n    var width = this._width();\n    var height = this._height();\n\n    applyLayout(layout, chart_position, width, height);\n  },\n\n  _positionByZIndex: function() {\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\n\n    // Sort by z-index\n    function setZIndex(layer) {\n      return {\n        layer: layer,\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\n      };\n    }\n    function sortZIndex(a, b) {\n      if (a.zIndex < b.zIndex)\n        return -1;\n      else if (a.zIndex > b.zIndex)\n        return 1;\n      else\n        return 0;\n    }\n    function getLayer(wrapped) {\n      return wrapped.layer;\n    }\n\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\n\n    // Move layers to z-index order\n    layers.forEach(function(layer) {\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\n        layer.parentNode.appendChild(layer);\n    });\n  },\n\n  _extractLayout: function(data) {\n    return calculateLayout(this.components(), data, this.demux.bind(this));\n  }\n});\n\n// TODO Find better place for this\nexport function layered(items) {\n  if (!Array.isArray(items))\n    items = Array.prototype.slice.call(arguments);\n\n  return {_layered: true, items: items};\n}\n\nfunction findById(items, id) {\n  return find(items, function(item) {\n    return item.id == id;\n  });\n}\n","import d3 from 'd3'; //eslint-disable-line no-unused-vars\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered\r\n};\r\n\r\nexport default d3c;\r\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\n\r\n/**\r\n  TEMP Clear namespace from mixins\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nexport default d3.chart('Base', {\r\n  initialize: function(options) {\r\n    // Bind all di-functions to this chart\r\n    bindAllDi(this);\r\n\r\n    if (options)\r\n      this.options(options);\r\n  },\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property('data'),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property('a'),\r\n      b: property('b', {\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property('options', {\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  },\r\n\r\n  // Store fully-transformed data for reference\r\n  // (Base is last transform to be called, so stored data has been fully transformed)\r\n  transform: function(data) {\r\n    data = data || [];\r\n\r\n    this.data(data);\r\n    return data;\r\n  },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    this.trigger('before:draw', data);\r\n    d3.chart().prototype.draw.apply(this, arguments);\r\n    this.trigger('draw', data);\r\n  }\r\n});\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property('centered', {\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Chart', {}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: false` and the static `layer_type: 'Chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nexport default Base.extend('Component', {\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property('position', {\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property('width', {\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property('height', {\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property('margins', {\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property('centered', {\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      if (options.height)\r\n        y += (options.height - this.height()) / 2;\r\n      if (options.width)\r\n        x += (options.width - this.width()) / 2;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nexport default Component.extend('Overlay', {\r\n  initialize: function() {\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property('x', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property('y', {\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property('hidden', {\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property('style', {\r\n    default_value: function() {\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        transform: translate(this.x() + 'px', this.y() + 'px')\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n"],"sourceRoot":"/source/"}