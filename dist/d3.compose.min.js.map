{"version":3,"sources":["d3.compose.min.js","d3.compose.js","c:/dev/d3.compose/src/utils.js","c:/dev/d3.compose/src/helpers/property.js","c:/dev/d3.compose/src/helpers/mixin.js","c:/dev/d3.compose/src/helpers/stack.js","c:/dev/d3.compose/src/helpers/create-scale.js","c:/dev/d3.compose/src/helpers/dimensions.js","c:/dev/d3.compose/src/helpers.js","c:/dev/d3.compose/src/Base.js","c:/dev/d3.compose/src/layout.js","c:/dev/d3.compose/src/Compose.js","c:/dev/d3.compose/src/Component.js","c:/dev/d3.compose/src/Overlay.js","c:/dev/d3.compose/src/Chart.js","c:/dev/d3.compose/d3.compose.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","inherits","Child","Parent","create","constructor","enumerable","writeable","configurable","setPrototypeOf","__proto__","valueOrDefault","default_value","property","options","console","warn","id","unique_index","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","__properties","is_property","set_from_options","mixin","mixins","initializes","transforms","mixed","forEach","mix","initialize","args","apply","init","transform","data","trans","bind","stack","padding","direction","origin","min_height","min_width","elements","attr","d","next_position","element_dimensions","getBBox","spacing_width","max","width","spacing_height","height","x","y","translate","createScale","scale","time","linear","domain","setDomain","centered","adjacent","addCentered","addPadding","getValue","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","dimensions","selection","client","clientDimensions","attrDimensions","isSVG","bbox","bboxDimensions","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","ex","nodeName","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","isArray","getMax","series_data","extent","series_max","Infinity","getMin","series_min","style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","Base","base","_layers","_attached","_events","extractLayout","prepareComponent","component","row_index","col_index","getId","setPosition","position","layered_index","extractData","_charts","_components","items","layout","charts","components","found","row","row_components","row_layout","_layered","chart_ids","chart_index","unshift","calculateLayout","demux","overall_layout","skip_layout","getLayout","applyLayout","chart_position","setLayout","part","index","parts","previousPart","layered","findById","Int8Array","utils","helpers","Chart","name","draw","trigger","layer","attachment","unlayer","attach","on","once","off","isProperty","unset","proto_props","static_props","hasOwnProperty","Component","prepareLayout","actual_dimensions","z_index","layer_type","Overlay","hidden","-webkit-transform","-ms-transform","display","styleToString","getAbsolutePosition","container","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","tagName","append","classed","attachHoverListeners","rawData","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","chart_options","_attachItems","component_options","delay","duration","ease","config","_prepareConfig","_setDimensions","redraw","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","getBounds","scroll_y","scrollY","scrollTop","getBoundingClientRect","was_inside","is_inside","detach","remove","_positionComponents","_positionByZIndex","remove_ids","remove_id","changed_position","Item","layer_options","createLayer","overlay","selectAll","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","sort","appendChild","compose","VERSION"],"mappings":"AAAA;AACA;AACA;AACA;AACA,CCAA,SAAAA,EAAAC,GDCqB,gBAAZC,UAA0C,mBAAXC,QAAyBA,OAAOD,QAAUD,EAAQG,QAAQ,OAC9E,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,MAAOJ,GAC5DD,EAAOO,IAAMN,EAAQD,EAAOQ,KAC5BC,KAAM,SAAUD,GAAM,YEFxB,SAASE,GAAQC,EAAQC,EAAYC,GACnC,IAAK,GAAIC,GAAI,EAAGC,EAASH,EAAWG,OAAYA,EAAJD,EAAYA,IACtD,IAAK,GAAIE,KAAOJ,GAAWE,GACpBD,GAAkC,SAAhBF,EAAOK,KAC5BL,EAAOK,GAAOJ,EAAWE,GAAGE,GAIlC,OAAOL,GAGF,QAASM,GAASC,EAAKC,GAC5B,MAAOD,GAAIE,QAAQD,IAAS,EAGvB,QAASE,GAAQH,GACtB,MAAOA,GAAII,OAAO,SAASH,GACzB,MAAOA,KAIJ,QAASI,GAAWC,EAAGC,GAC5B,MAAOD,GAAEF,OAAO,SAASI,GACvB,MAAOD,GAAEL,QAAQM,GAAS,IAIvB,QAASC,GAAShB,GACvB,MAAOD,GAAQC,EAAQiB,EAAMC,KAAKC,UAAW,IAAI,GAG5C,QAASC,GAAOpB,GACrB,MAAOD,GAAQC,EAAQiB,EAAMC,KAAKC,UAAW,IAGxC,QAASE,GAAQd,GAEtB,MAAOA,GAAIe,OAAO,SAASC,EAAMf,GAC/B,MAAOe,GAAKC,OAAOhB,QAIhB,QAASiB,GAAKlB,EAAKmB,EAAIC,GAC5B,GAAKpB,EACL,IAAK,GAAIJ,GAAI,EAAGC,EAASG,EAAIH,OAAYA,EAAJD,EAAYA,IAC/C,GAAIuB,EAAGR,KAAKS,EAASpB,EAAIJ,GAAIA,EAAGI,GAC9B,MAAOA,GAAIJ,GAIV,QAASyB,GAAMrB,EAAKsB,GACzB,MAAW,OAAPtB,EAAoB,OACf,MAALsB,EAAkBtB,EAAI,GACnBuB,MAAMC,UAAUd,MAAMC,KAAKX,EAAK,EAAGsB,GAGrC,QAASG,GAAUC,GACxB,MAAOA,MAAQ,GAAQA,KAAQ,EAE1B,QAASC,GAASD,GACvB,GAAIE,SAAcF,EAClB,OAAgB,aAATE,GAAgC,WAATA,KAAuBF,EAEhD,QAASG,GAASH,GACvB,MAA8B,oBAAvBI,EAASnB,KAAKe,GAEhB,QAASK,GAASL,GACvB,MAA8B,oBAAvBI,EAASnB,KAAKe,GAEhB,QAASM,GAAYN,GAC1B,MAAe,UAARA,EAYF,QAASO,GAAWP,EAAKP,EAAIC,GAClC,GAAKM,EAEL,IAAK,GADDQ,GAAOC,OAAOD,KAAKR,GACd9B,EAAI,EAAGC,EAASqC,EAAKrC,OAAYA,EAAJD,EAAYA,IAChDuB,EAAGR,KAAKS,EAASM,EAAIQ,EAAKtC,IAAKsC,EAAKtC,GAAI8B,GAIrC,QAASU,GAAWV,EAAKP,EAAIC,GAClC,GAAKM,EAEL,IAAK,GADDQ,GAAOC,OAAOD,KAAKR,GACd9B,EAAI,EAAGC,EAASqC,EAAKrC,OAAYA,EAAJD,EAAYA,IAChD,GAAIuB,EAAGR,KAAKS,EAASM,EAAIQ,EAAKtC,IAAKsC,EAAKtC,GAAI8B,GAC1C,MAAOA,GAAIQ,EAAKtC,IAIf,QAASyC,GAAMC,EAAMxC,GAC1B,MAAKwC,GACEA,EAAKC,IAAI,SAASb,GACvB,MAAOA,GAAI5B,QAIR,QAAS0C,GAAKxC,GAEnB,IAAK,GADDyC,MACK7C,EAAI,EAAGC,EAASG,EAAIH,OAAYA,EAAJD,EAAYA,IAC3C6C,EAAOvC,QAAQF,EAAIJ,IAAM,GAC3B6C,EAAOC,KAAK1C,EAAIJ,GAEpB,OAAO6C,GAGF,QAASE,GAASC,EAAOC,GAC9BD,EAAMpB,UAAYW,OAAOW,OAAOD,EAAOrB,WACrCuB,aACEvC,MAAOoC,EACPI,YAAY,EACZC,WAAW,EACXC,cAAc,KAIdf,OAAOgB,eACThB,OAAOgB,eAAeP,EAAOC,IAG7BD,EAAMQ,UAAYP,EAIlBpC,EAASmC,EAAOC,IAUb,QAASQ,GAAe7C,EAAO8C,GACpC,MAAQtB,GAAYxB,GAAiB8C,EAAR9C,ECrDhB,QAAS+C,GAASC,GAEP,GAApB5C,UAAUf,SACU,mBAAX4D,UAA0BA,QAAQC,MAC3CD,QAAQC,KAAK,oHACfF,EAAU5C,UAAU,IAGtB4C,EAAUA,KACV,IAAIG,GAAK,YAAcC,KAEnBL,EAAW,SAAS/C,GAStB,QAASqD,KAUP,MATArD,GAAQsD,EAAWH,GAEf3B,EAAYxB,KAEdA,EAAQ+C,EAASD,cACbS,GAAWvD,KACbA,EAAQA,EAAMG,KAAKS,KAGhB2C,GAAWP,EAAQK,KAAOL,EAAQK,IAAIlD,KAAKS,EAASZ,GAASA,EAGtE,QAASwD,KAEP,GAAID,GAAWP,EAAQS,YAAcjC,EAAYxB,KAAWgD,EAAQS,SAAStD,KAAKS,EAASZ,GACzF,KAAM,IAAI0D,OAAM,+BAAiCC,KAAKC,UAAU5D,GAElE,IAAI6D,GAAWP,EAAWH,EAG1B,IAFAG,EAAWH,GAAMnD,EAEbuD,GAAWP,EAAQQ,OAAShC,EAAYxB,GAAQ,CAClD,GAAI8D,GAAWd,EAAQQ,IAAIrD,KAAKS,EAASZ,EAAO6D,EAE5CC,IAAY,YAAcA,KAC5BR,EAAWH,GAAMW,EAASC,UACxBD,GAAYP,GAAWO,EAASE,QAClCF,EAASE,MAAM7D,KAAKS,EAAS0C,EAAWH,IAG5C,MAAOpE,MAtCT,GAAIuE,GAAavE,KAAKkF,aAAelF,KAAKkF,iBACtCrD,EAAUiC,EAAeE,EAASnC,QAAS7B,KAE/C,OAAIqB,WAAUf,OACLmE,EAAIrD,KAAKpB,MAETsE,EAAIlD,KAAKpB,MA4CpB,OAPAgE,GAASmB,aAAc,EACvBnB,EAASI,GAAKA,EACdJ,EAASoB,iBAAmBtB,EAAeG,EAAQmB,kBAAkB,GACrEpB,EAASD,cAAgBE,EAAQF,cACjCC,EAASnC,QAAUoC,EAAQpC,QAC3BmC,EAASC,QAAUA,EAEZD,EC7HM,QAASqB,GAAM/B,GAC5B,GAAIgC,GAASnE,EAAMC,KAAKC,UAAW,GAC/BkE,KACAC,KACAC,IAgCJ,OA9BAH,GAAOI,QAAQ,SAASC,GACtBjD,EAAWiD,EAAK,SAAS1E,EAAOV,GACnB,cAAPA,EACFgF,EAAYpC,KAAKlC,GACH,aAAPV,EACPiF,EAAWrC,KAAKlC,GAEhBwE,EAAMlF,GAAOU,MAIfsE,EAAYjF,SACdmF,EAAMG,WAAa,WACjB,GAAIC,GAAO1E,EAAMC,KAAKC,UACtBiC,GAAOrB,UAAU2D,WAAWE,MAAM9F,KAAM6F,GACxCN,EAAYG,QAAQ,SAASK,GAC3BA,EAAKD,MAAM9F,KAAM6F,IAChB7F,QAIHwF,EAAWlF,SACbmF,EAAMO,UAAY,SAAmBC,GAEnC,MADAA,GAAO3C,EAAOrB,UAAU+D,UAAU5E,KAAKpB,KAAMiG,GACtCT,EAAWhE,OAAO,SAASC,EAAMyE,GACtC,MAAOA,GAAM9E,KAAKpB,KAAMyB,IACxB0E,KAAKnG,MAAOiG,KAIX3C,EAAOhC,OAAOmE,GCzCR,QAASW,GAAMnC,GAe5B,QAASoC,GAAQhG,GACf,MAAOA,GAAI,GAAK4D,EAAQoC,QAAUpC,EAAQoC,QAAU,EAGtD,MAlBApC,GAAU3C,GACRgF,UAAW,WACXC,OAAQ,MACRF,QAAS,EACTG,WAAY,EACZC,UAAW,GACVxC,GAGsB,cAArBA,EAAQqC,WAAiD,QAAlBrC,EAAQsC,QAAsC,SAAlBtC,EAAQsC,OAC7EtC,EAAQsC,OAAS,OACW,YAArBtC,EAAQqC,WAA+C,OAAlBrC,EAAQsC,QAAqC,UAAlBtC,EAAQsC,SAC/EtC,EAAQsC,OAAS,OAMZ,SAASG,GACd,GAAIA,GAAYA,EAASC,KAAM,CAC7B,GAAI7B,GAAW,CAEf4B,GAASC,KAAK,YAAa,SAASC,EAAGvG,GACrC,GAKIwG,GALAC,EAAqB9G,KAAK+G,UAC1BC,EAAgBjH,EAAGkH,KAAKH,EAAmBI,MAAOjD,EAAQwC,YAC1DU,EAAiBpH,EAAGkH,KAAKH,EAAmBM,OAAQnD,EAAQuC,aAC5Da,EAAI,EACJC,EAAI,CAwBR,OArByB,cAArBrD,EAAQqC,WACVO,EAAgB/B,EAAWkC,EAAgBX,EAAQhG,GAGjDgH,EADoB,QAAlBpD,EAAQsC,OACNzB,EAAWuB,EAAQhG,GAEnBwG,EAEN/B,EAAW+B,IAGXA,EAAgB/B,EAAWqC,EAAiBd,EAAQhG,GAGlDiH,EADoB,OAAlBrD,EAAQsC,OACNzB,EAAWuB,EAAQhG,GAEnBwG,EAEN/B,EAAW+B,GAGNU,EAAUF,EAAGC,OCRb,QAASE,GAAYvD,GAIlC,GAHAA,EAAUA,MAGNO,GAAWP,GACb,MAAOA,EAGT,IAAIwD,EAEFA,GADkB,QAAhBxD,EAAQ5B,KACFtC,EAAG2H,KAAKD,QACT1H,EAAG0H,MAAMxD,EAAQ5B,MAChBtC,EAAG0H,MAAMxD,EAAQ5B,QAEjBtC,EAAG0H,MAAME,SAEnBjF,EAAWuB,EAAS,SAAShD,EAAOV,GAC9BkH,EAAMlH,KAIG,SAAPA,GAAyB,UAAPA,EACpBkH,EAAMlH,GAAKU,GACHT,GAAU,OAAQ,OAAQ,QAAS,MAAO,WAAY,WAAY,SAAU,WAAYD,IAChGkH,EAAMlH,GAAKuF,MAAM2B,EAAOxG,OAIzBgD,EAAQ2D,QAAU3D,EAAQgC,OAAShC,EAAQ1D,KAAO0D,EAAQhD,SAC7DwG,EAAQI,EAAUJ,EAAOxD,GAI3B,IAAI6D,GAAW7D,EAAQ6D,UAA6B,WAAhB7D,EAAQ5B,MAAyC,MAApB4B,EAAQ6D,QAQzE,OAPoB,WAAhB7D,EAAQ5B,OAAsByF,GAAY7D,EAAQ8D,YACpDN,EAAQO,EAAYP,EAAOxD,IAGT,WAAhBA,EAAQ5B,OAAyC,MAAnB4B,EAAQoC,SAAmByB,GAAY7D,EAAQ8D,YAC/EN,EAAQQ,EAAWR,EAAOxD,IAErBwD,EAGT,QAASI,GAAUJ,EAAOxD,GAExB,GAAIiE,GAAWjE,EAAQhD,OAAS,SAAS2F,GACvC,MAAOA,GAAE3C,EAAQ1D,MAIf0F,EAAOhC,EAAQgC,IACdkC,GAAalC,KAChBA,IAASmC,OAAQnC,IAEnB,IAAI2B,EACJ,IAAoB,WAAhB3D,EAAQ5B,KAEVuF,EAAS3E,EAAK1B,EAAQ0E,EAAKjD,IAAI,SAASqF,GACtC,MAAIA,IAAUA,EAAOD,OACZC,EAAOD,OAAOpF,IAAIkF,GAD3B,eAIC,CACH,GAAII,GAAYC,EAAItC,EAAMiC,EAE1BN,IACc,EAAZU,EAAgBA,EAAY,EAC5BrB,EAAIhB,EAAMiC,IAKd,MADAT,GAAMG,OAAOA,GACNH,EAGT,QAASO,GAAYQ,EAAUvE,GAE7B,GAAIwE,GAAexE,EAAQoE,SAAYF,EAAalE,EAAQgC,MAAYhC,EAAQgC,KAAK3F,OAAjB,GAGhEmH,EAAQ,SAAUe,EAAUvE,EAASwE,GACvC,GAAI5G,GAAU,SAASZ,EAAOyH,GAC5B,GAAIxB,GAAQrF,EAAQqF,OAKpB,OAHKjD,GAAQ8D,WACXW,EAAe,GAEVF,EAASvH,GAAU,GAAMiG,EAAUA,GAASwB,GAAgB,GAgBrE,OAdApH,GAAOO,EAAS2G,GACdtB,MAAO,WACL,GAAIyB,GAAa9G,EAAQ+G,WAAa/G,EAAQ+G,YAC1C1B,EAAQ2B,SAASF,GAAcA,EAAa,CAKhD,OAHI1E,GAAQ8D,WACVb,GAAgBuB,GAEXvB,KAMJrF,GACN2G,EAAUvE,EAASwE,EAEtB,OAAOhB,GAGT,QAASQ,GAAWR,EAAOxD,GACzB,GAAIoC,GAA6B,MAAnBpC,EAAQoC,QAAkBpC,EAAQoC,QAAU,GAEtDyC,EAAiBrB,EAAMsB,KAe3B,OAdAtB,GAAMsB,MAAQ,SAASA,GACrB,MAAK1H,WAAUf,WAEfmH,GAAMuB,WACJD,EACA1C,EACAA,EAAU,GALkByC,KAS5B7E,EAAQ8E,OACVtB,EAAMsB,MAAM9E,EAAQ8E,OAGftB,EC9LM,QAASwB,GAAWC,GAEjC,GAAIC,GAASC,EAAiBF,EAE9B,IAAIC,EAAOjC,OAASiC,EAAO/B,OACzB,MAAO+B,EAGT,IAAIxC,GAAO0C,EAAeH,EAE1B,IAAII,EAAMJ,GACR,OACEhC,MAAuB,MAAhBiC,EAAOjC,MAAgBiC,EAAOjC,MAAQP,EAAKO,OAAS,EAC3DE,OAAyB,MAAjB+B,EAAO/B,OAAiB+B,EAAO/B,OAAST,EAAKS,QAAU,EAIjE,IAAImC,GAAOC,EAAeN,EAK1B,QACEhC,MAAOnH,EAAGkH,KAAKkC,EAAOjC,MAAOP,EAAKO,OAASqC,EAAKrC,SAAW,EAC3DE,OAAQrH,EAAGkH,KAAKkC,EAAO/B,OAAQT,EAAKS,QAAUmC,EAAKnC,UAAY,GAKrE,QAASgC,GAAiBF,GACxB,GAAIO,GAAUP,EAAUQ,OAEpBC,GACFzC,MAAOuC,GAAWA,EAAQG,YAC1BxC,OAAQqC,GAAWA,EAAQI,aAO7B,IAAIP,EAAMJ,MAAgBO,EAAQG,cAAgBH,EAAQI,eAAmC,mBAAXC,SAA0BA,OAAOC,iBAAkB,CACnI,GAAIC,GAASF,OAAOC,iBAAiBN,EACrCE,GAAkBvC,OAAS6C,WAAWD,EAAO5C,QAAU6C,WAAWD,EAAOE,gBAAkBD,WAAWD,EAAOG,mBAC7GR,EAAkBzC,MAAQ+C,WAAWD,EAAO9C,OAAS+C,WAAWD,EAAOI,iBAAmBH,WAAWD,EAAOK,kBAG9G,MAAOV,GAGT,QAASN,GAAeH,GACtB,OACEhC,MAAOgC,GAAaA,EAAUvC,MAAQsD,WAAWf,EAAUvC,KAAK,UAChES,OAAQ8B,GAAaA,EAAUvC,MAAQsD,WAAWf,EAAUvC,KAAK,YAIrE,QAAS6C,GAAeN,GACtB,GACIK,GADAE,EAAUP,EAAUQ,MAExB,KACEH,EAAOE,GAAqC,kBAAnBA,GAAQ1C,SAAyB0C,EAAQ1C,UAEpE,MAAMuD,GAGJf,GAAQrC,MAAO,EAAGE,OAAQ,GAG5B,MAAOmC,GAGT,QAASD,GAAMJ,GACb,MAAoC,OAA7BA,EAAUQ,OAAOa,SC/CnB,QAAShD,GAAUF,EAAGC,GAM3B,MALIlF,GAASiF,KACXC,EAAID,EAAEC,EACND,EAAIA,EAAEA,GAGD,cAAgBA,GAAK,GAAK,MAAQC,GAAK,GAAK,IAW9C,QAASkD,GAAOC,EAASC,GAC9B,GAAIC,GAAW,WAAaF,GAAW,EAKvC,OAJIC,KACFC,GAAY,KAAOD,EAAOrD,GAAK,GAAK,KAAOqD,EAAOpD,GAAK,IACzDqD,GAAY,IA0BP,QAASC,GAAUnB,EAASoB,GACjC,GAAIC,GAAS,CACb,KACE,GAAI1D,GAASqC,EAAQ1C,UAAUK,OAE3B2D,EAAgBjB,OAAOC,iBAAiBN,GACxCuB,EAAgBf,WAAWc,EAAc,cACzCE,EAAkBhB,WAAWc,EAAc,eAI3CG,OAAMD,KACRA,EAAkB,KAAOD,EAE3B,IAAIG,KAAmBF,EAAkBD,GAAiB,EAGtDI,EAAoB,CACpBP,IAAeA,EAAc,IAC/BO,GAAqBP,EAAczD,GAAU,GAE/C0D,EAAS1D,GAAU+D,GAAkB,IAAMC,GAAqB,GAElE,MAAOd,IAKP,MAAOQ,GAUF,QAAS3C,GAAalC,GAC3B,GAAIoF,GAAavJ,EAAMmE,EACvB,OAAOoF,IAAcjJ,EAASiJ,IAAerJ,MAAMsJ,QAAQD,EAAWjD,QAmBjE,QAASnB,GAAIhB,EAAMiC,GACxB,GAAIqD,GAAS,SAASC,GACpB,MAAOA,IAAezL,EAAG0L,OAAOD,EAAatD,GAAU,GAGzD,OAAIC,GAAalC,GACRA,EAAKzE,OAAO,SAASC,EAAM4G,GAChC,GAAIA,GAAUrG,MAAMsJ,QAAQjD,EAAOD,QAAS,CAC1C,GAAIsD,GAAaH,EAAOlD,EAAOD,OAC/B,OAAOsD,GAAajK,EAAOiK,EAAajK,EAGxC,MAAOA,MAEPkK,EAAAA,IAGGJ,EAAOtF,GAoBX,QAASsC,GAAItC,EAAMiC,GACxB,GAAI0D,GAAS,SAASJ,GACpB,MAAOA,IAAezL,EAAG0L,OAAOD,EAAatD,GAAU,GAGzD,OAAIC,GAAalC,GACRA,EAAKzE,OAAO,SAASC,EAAM4G,GAChC,GAAIA,GAAUrG,MAAMsJ,QAAQjD,EAAOD,QAAS,CAC1C,GAAIyD,GAAaD,EAAOvD,EAAOD,OAC/B,OAAoB3G,GAAboK,EAAoBA,EAAapK,EAGxC,MAAOA,IAERkK,EAAAA,GAGIC,EAAO3F,GAcX,QAAS6F,GAAM9B,GACpB,IAAKA,EACH,MAAO,EAET,IAAI+B,KAMJ,OALArJ,GAAWsH,EAAQ,SAAS/I,EAAOV,GACjCwL,EAAU5I,KAAK5C,EAAM,KAAOU,KAE9B+I,EAAS+B,EAAUC,KAAK,MAEjBhC,EAASA,EAAS,IAAM,GAmB1B,QAASiC,GAAWC,EAASC,GAClC,MAAI7J,GAAS4J,IACHE,IAAKF,EAASG,MAAOH,EAASI,OAAQJ,EAASK,KAAML,GAEtDhL,KAAagL,EAASC,GAAkBC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IA+B/E,QAASC,GAAGC,GAEjB,GAAIC,GAAU,SAAiB9F,EAAGvG,EAAGsM,GACnC,MAAOF,GAASrL,KAAKpB,KAAM4M,OAAWhG,EAAGvG,EAAGsM,GAK9C,OAHAD,GAAQG,QAAS,EACjBH,EAAQlE,SAAWiE,EAEZC,EAGF,QAASI,GAAOC,EAAMC,GAC3B,MAAO,UAAiBpG,EAAGvG,EAAGsM,GAC5B,OAAQI,EAAKvE,UAAYuE,GAAM3L,KAAKpB,KAAMgN,EAAOpG,EAAGvG,EAAGsM,IAKpD,QAASM,GAAUD,GACxB,IAAK,GAAIzM,KAAOyM,GACVA,EAAMzM,IAAQyM,EAAMzM,GAAKsM,SAC3BG,EAAMzM,GAAOuM,EAAOE,EAAMzM,GAAMyM,IAgC/B,QAASE,GAAczD,GAE5B,GAAIA,EAAQ0D,aACV,MAAO1D,GAAQ0D,YAEjB,IAAIC,GAAS3D,GAAWA,EAAQ4D,UAChC,IAAID,EAAQ,CACV,GAAInH,GAAOlG,EAAGuN,OAAOF,GAAQnH,MAC7B,OAAOA,IAAQA,EAAK,IAIjB,QAASsH,GAAalL,GAC3B,MAAO,UAAS+B,EAAIH,GAMlB,MALKA,KACHA,EAAUG,EACVA,EAAKwI,QAGAtL,GAAQ8C,GAAIA,EAAI/B,KAAMA,GAAO4B,IC7TxC,QAASuJ,GAAKtE,EAAWjF,GAEvBjE,KAAKyN,KAAOvE,EACZlJ,KAAK0N,WACL1N,KAAK2N,aACL3N,KAAK4N,WAGLX,EAAUjN,MAGNiE,GACFjE,KAAKiE,QAAQA,GAGfjE,KAAK4F,WAAW3B,GCjCX,QAAS4J,GAAc5J,GAsG5B,QAAS6J,GAAiBC,EAAWC,EAAWC,GAC9C,MAAO/M,MAAa6M,GAAY3J,GAAI8J,EAAMF,EAAWC,KAEvD,QAASE,GAAYJ,EAAWK,GAC1BL,GAAavJ,GAAWuJ,EAAUK,UACpCL,EAAUK,SAASA,GAEnBL,EAAUK,SAAWA,EAEzB,QAASF,GAAMF,EAAWC,EAAWI,GACnC,GAAIjK,GAAK,SAAW4J,EAAY,GAAK,KAAOC,EAAY,EAIxD,OAHqB,OAAjBI,IACFjK,GAAM,KAAOiK,EAAgB,IAExBjK,EAGT,QAASkK,GAAYjM,GACnB,MAAO,UAAS3B,GACVA,EAAKuF,OAASzB,GAAW9D,EAAKuF,QAChCA,EAAK5D,GAAM3B,EAAK0D,IAAM1D,EAAKuF,KAC3BA,EAAKvF,EAAK0D,IAAM1D,EAAKuF,WACdvF,GAAKuF,OA3HlB,GAAKhC,EAAL,CAGA,GAAIgC,IACFsI,WACAC,gBAEEC,KACAC,KACAC,KACAC,KAIAC,GACFC,KAAK,EACLH,QAAQ,EA4EV,OAvEA1K,GAAQyB,QAAQ,SAASoJ,EAAKd,GAC5B,GAAIe,KAEC/M,OAAMsJ,QAAQwD,KACjBA,GAAOA,IACLA,EAAIxO,OAAS,IACfuO,EAAMC,KAAM,EAEd,IAAIE,GAAaF,EAAI9L,IAAI,SAAStC,EAAMuN,GACtC,GAAKvN,EAAL,CAGA,GAAIA,EAAKuO,SAAU,CAEjBJ,EAAMF,OAASE,EAAMC,KAAM,CAC3B,IAAII,KAaJ,OAXAxO,GAAK+N,MAAM/I,QAAQ,SAASsH,EAAOmC,GAC5BnC,IAGLA,EAAQ9L,KAAa8L,GAAQ5I,GAAI8J,EAAMF,EAAWC,EAAWkB,KAE7DD,EAAU/L,KAAK6J,EAAM5I,IACrBuK,EAAOxL,KAAK6J,GACZyB,EAAMzB,EAAM5I,IAAM4I,KAGbkC,EAGT,GAAInB,GAAYD,EAAiBpN,EAAMsN,EAAWC,EA4BlD,OA3BAQ,GAAMV,EAAU3J,IAAM2J,EAElBe,EAAIxO,OAAS,EACVuO,EAAMF,QAOTR,EAAYJ,EAAW,SACvBgB,EAAe5L,KAAK4K,KANpBI,EAAYJ,EAAW,QACvBgB,EAAeK,QAAQrB,IASpBc,EAAMC,KAOTX,EAAYJ,EAAW,UACvBa,EAAWzL,KAAK4K,KANhBI,EAAYJ,EAAW,OACvBa,EAAWQ,QAAQrB,IAShBA,EAAU3J,KAGf2K,GAAezO,SACjBsO,EAAaA,EAAWlN,OAAOqN,IAEjCL,EAAOvL,KAAK6L,KAGdL,EAAOjJ,QAAQ4I,EAAY,YAC3BM,EAAWlJ,QAAQ4I,EAAY,iBAG7BrI,KAAMA,EACNwI,MAAOA,EACPC,OAAQA,EAERC,OAAQA,EACRC,WAAYA,IAkCT,QAASS,GAAgBT,EAAY3I,EAAMqJ,GAChD,GAAIC,IAAkBnD,OAASC,SAAWC,UAAYC,QAiBtD,OAhBAqC,GAAWlJ,QAAQ,SAASqI,GAC1B,IAAIA,EAAUyB,aAAgBzB,EAAU0B,UAAxC,CAGA,GAAIf,GAASX,EAAU0B,UAAUH,EAAMvB,EAAU3J,GAAI6B,IACjDmI,EAAWM,GAAUA,EAAON,QAE3B5N,IAAU,MAAO,QAAS,SAAU,QAAS4N,IAGlDmB,EAAenB,GAAUjL,MACvB2H,OAAoB,OAAZsD,GAAiC,UAAZA,EAAuBM,EAAOtH,OAASsH,EAAOxH,MAC3E6G,UAAWA,OAIRwB,EAMF,QAASG,GAAYhB,EAAQiB,EAAgBzI,EAAOE,GA+BzD,QAASwI,GAAU7B,EAAW1G,EAAGC,EAAGrD,GAC9B8J,GAAavJ,GAAWuJ,EAAU6B,YACpC7B,EAAU6B,UAAUvI,EAAGC,EAAGrD,GAhC9ByK,EAAOtC,IAAI5K,OAAO,SAASsD,EAAU+K,GACnC,GAAIvI,GAAIxC,EAAW+K,EAAK/E,MAGxB,OAFA8E,GAAUC,EAAK9B,UAAW4B,EAAepD,KAAMjF,GAAIJ,MAAOyI,EAAezI,QAElEI,GACNqI,EAAevD,KAElBsC,EAAOrC,MAAM7K,OAAO,SAASsD,EAAU+K,EAAMC,EAAOC,GAClD,GAAIC,GAAeD,EAAMD,EAAQ,KAAOhF,OAAQ,GAC5CzD,EAAIvC,EAAWkL,EAAalF,MAGhC,OAFA8E,GAAUC,EAAK9B,UAAW1G,EAAGsI,EAAevD,KAAMhF,OAAQuI,EAAevI,SAElEC,GACNH,EAAQyI,EAAetD,OAE1BqC,EAAOpC,OAAO9K,OAAO,SAASsD,EAAU+K,EAAMC,EAAOC,GACnD,GAAIC,GAAeD,EAAMD,EAAQ,KAAOhF,OAAQ,GAC5CxD,EAAIxC,EAAWkL,EAAalF,MAGhC,OAFA8E,GAAUC,EAAK9B,UAAW4B,EAAepD,KAAMjF,GAAIJ,MAAOyI,EAAezI,QAElEI,GACNF,EAASuI,EAAerD,QAE3BoC,EAAOnC,KAAK/K,OAAO,SAASsD,EAAU+K,GACpC,GAAIxI,GAAIvC,EAAW+K,EAAK/E,MAGxB,OAFA8E,GAAUC,EAAK9B,UAAW1G,EAAGsI,EAAevD,KAAMhF,OAAQuI,EAAevI,SAElEC,GACNsI,EAAepD,MCiiBpB,QAAS0D,GAAQxB,GAIf,MAHKzM,OAAMsJ,QAAQmD,KACjBA,EAAQzM,MAAMC,UAAUd,MAAMC,KAAKC,aAE7B4N,UAAU,EAAMR,MAAOA,GAGjC,QAASyB,GAASzB,EAAOrK,GACvB,MAAOzC,GAAK8M,EAAO,SAAS/N,GAC1B,MAAOA,GAAK0D,IAAMA,IXtuBpBrE,EAAK,WAAaA,GAAKA,EAAG,WAAaA,CEPlC,IAAIoB,GAAQa,MAAMC,UAAUd,MACxBoB,EAAWK,OAAOX,UAAUM,SA2E5BiC,GAAa,SAASrC,GAC/B,MAA8B,sBAAvBI,EAASnB,KAAKe,GAEL,mBAAP,KAAyC,gBAAbgO,aACrC3L,GAAa,SAASrC,GACpB,MAAqB,kBAAPA,KAAqB,GAqEvC,IAAIiO,KACFjP,MAAOA,EACPoB,SAAUA,EACV/B,SAAUA,EACVI,QAASA,EACTE,WAAYA,EACZI,SAAUA,EACVI,OAAQA,EACRC,QAASA,EACTI,KAAMA,EACNG,MAAOA,EACPI,UAAWA,EACXsC,WAAYA,GACZpC,SAAUA,EACVE,SAAUA,EACVE,SAAUA,EACVC,YAAaA,EACbC,WAAYA,EACZG,WAAYA,EACZC,MAAOA,EACPG,KAAMA,EACNG,SAAUA,EACVU,eAAgBA,GC1KdO,GAAe,EK0VfgM,IACFrM,SAAUA,EACViF,WAAYA,EACZ1B,UAAWA,EACXiD,OAAQA,EACRI,UAAWA,EACXzC,aAAcA,EACdlB,IAAKA,EACLsB,IAAKA,EACLf,YAAaA,EACbsE,MAAOA,EACPG,WAAYA,EACZ7F,MAAOA,EACPoG,GAAIA,EACJM,OAAQA,EACRG,UAAWA,EACXC,cAAeA,EACf7H,MAAOA,EACPkI,aAAcA,GCpWZ+C,GAAQvQ,EAAGiN,OAmCf5J,GAASoK,EAAM8C,IAEfhP,EAAOkM,EAAKvL,WACV2D,WAAY,aACZI,UAAW,SAASC,GAClB,MAAOA,IAETqJ,MAAO,SAASiB,EAAMtK,GAAQ,MAAOA,IAGrCuK,KAAM,SAASvK,GAEbA,EAAOjG,KAAKgG,UAAUC,GAGtBjG,KAAKiG,KAAKA,GAEVjG,KAAKyQ,QAAQ,cAAexK,GAE5BvD,EAAW1C,KAAK0N,QAAS,SAASgD,GAChCA,EAAMF,KAAKvK,KAEbvD,EAAW1C,KAAK2N,UAAW,SAASgD,EAAYJ,GAC9CI,EAAWH,KAAKxQ,KAAKsP,MAAMiB,EAAMtK,KAChCjG,MAEHA,KAAKyQ,QAAQ,OAAQxK,IAIvByK,MAAOJ,GAAMrO,UAAUyO,MACvBE,QAASN,GAAMrO,UAAU2O,QACzBC,OAAQP,GAAMrO,UAAU4O,OACxBC,GAAIR,GAAMrO,UAAU6O,GACpBC,KAAMT,GAAMrO,UAAU8O,KACtBC,IAAKV,GAAMrO,UAAU+O,IACrBP,QAASH,GAAMrO,UAAUwO,QAQzBxK,KAAMjC,IAuCNC,QAASD,GACPD,iBACAU,IAAK,SAASR,EAASa,GAerB,QAASmM,GAAWjE,EAAOzM,GACzB,MAAOyM,GAAMzM,IAAQyM,EAAMzM,GAAK4E,aAAe6H,EAAMzM,GAAK6E,iBAd5D,GAAIN,EAAU,CACZ,GAAIoM,GAAQpQ,EAAW8B,OAAOD,KAAKmC,GAAWlC,OAAOD,KAAKsB,GAC1DiN,GAAMxL,QAAQ,SAASnF,GACV,QAAPA,GAAwB,WAAPA,GAAoB0Q,EAAWjR,KAAMO,IACxDP,KAAKO,GAAKqM,SACX5M,MAGL0C,EAAWuB,EAAS,SAAwBhD,EAAOV,GAC7C0Q,EAAWjR,KAAMO,IACnBP,KAAKO,GAAKU,IACXjB,SAePkH,MAAO,WACL,MAAO+B,GAAWjJ,KAAKyN,MAAMvG,OAU/BE,OAAQ,WACN,MAAO6B,GAAWjJ,KAAKyN,MAAMrG,UAIjCoG,EAAKlM,OAAS,SAAS6P,EAAaC,GAElC,GAAIb,EACA/N,GAAS2O,KACXZ,EAAOY,EACPA,EAAcC,EACdA,EAAe/P,UAAU,GAG3B,IACIgC,GADAC,EAAStD,IAwBb,OArBImR,IAAeA,EAAYE,eAAe,gBAC5ChO,EAAQ8N,EAAY3N,YAGpB2N,EAAc7P,KAAW6P,SAClBA,GAAY3N,aAGnBH,EAAQ,WAAa,MAAOC,GAAOwC,MAAM9F,KAAMqB,YAGjD+B,EAASC,EAAOC,GACZ8N,GACF9P,EAAO+B,EAAO+N,GACZD,GACF7P,EAAO+B,EAAMpB,UAAWkP,GAGtBZ,IACFD,GAAMC,GAAQlN,GAETA,EGlKT,IAAIiO,IAAY9D,EAAKlM,QASnB8M,SAAUpK,GACRD,cAAe,MACfW,SAAU,SAASzD,GACjB,MAAOT,IAAU,MAAO,QAAS,SAAU,QAASS,MAYxDiG,MAAOlD,GACLD,cAAe,WACb,MAAOkF,GAAWjJ,KAAKyN,MAAMvG,SAYjCE,OAAQpD,GACND,cAAe,WACb,MAAOkF,GAAWjJ,KAAKyN,MAAMrG,UAWjC8E,QAASlI,GACPS,IAAK,SAAS2D,GACZ,OACEpD,SAAUiH,EAAW7D,KAGzBrE,cAAekI,MAUjBnE,SAAU9D,GACRD,eAAe,IAiBjByL,aAAa,EAwBb+B,cAAe,SAAStL,GACtBjG,KAAKwQ,KAAKvK,IA4BZwJ,UAAW,SAASxJ,GAClBjG,KAAKuR,cAActL,EAEnB,IAAIiG,GAAUlM,KAAKkM,SACnB,QACEkC,SAAUpO,KAAKoO,WACflH,MAAOlH,KAAKkH,QAAUgF,EAAQK,KAAOL,EAAQG,MAC7CjF,OAAQpH,KAAKoH,SAAW8E,EAAQE,IAAMF,EAAQI,SAgClDsD,UAAW,SAASvI,EAAGC,EAAGrD,GACxB,GAAIiI,GAAUlM,KAAKkM,SAEnB,IAAIlM,KAAK8H,WAAY,CACnB,GAAI0J,GAAoBvI,EAAWjJ,KAAKyN,KAEtCnG,IADE,UAAYrD,IACRA,EAAQmD,OAASoK,EAAkBpK,QAAU,EAE9C8E,EAAQE,IAGb/E,GADE,SAAWpD,IACPA,EAAQiD,MAAQsK,EAAkBtK,OAAS,EAE5CgF,EAAQK,SAGflF,IAAK6E,EAAQK,KACbjF,GAAK4E,EAAQE,GAGfpM,MAAKyN,KAAK9G,KAAK,YAAaY,EAAUF,EAAGC,IACzCtH,KAAKoH,OAAOnD,GAAWA,EAAQmD,QAC/BpH,KAAKkH,MAAMjD,GAAWA,EAAQiD,UAoBhCuK,QAAS,GAmBTC,WAAY,cCnQVC,GAAUL,GAAUhQ,QACtBsE,WAAY,SAAS3B,GACnBqN,GAAUrP,UAAU2D,WAAWxE,KAAKpB,KAAMiE,GAC1CjE,KAAKyN,KAAK9G,KAAK,QAAS3G,KAAK8L,UAE/B0D,aAAa,EASbnI,EAAGrD,GACDD,cAAe,IAUjBuD,EAAGtD,GACDD,cAAe,IAUjB6N,OAAQ5N,GACND,eAAe,IAWjB+H,MAAO9H,GACLD,cAAe,WACb,GAAIiC,GAAYuB,EAAUvH,KAAKqH,IAAM,KAAMrH,KAAKsH,IAAM,MAClD0C,GACFoE,SAAU,WACVhC,IAAK,EACLG,KAAM,EACNsF,oBAAqB7L,EACrB8L,gBAAiB9L,EACjBA,UAAWA,EAMb,OAHIhG,MAAK4R,WACP5H,EAAO+H,QAAU,QAEZC,EAAchI,MAwBzBoE,SAAU,SAASA,EAAU9G,GAC3B,GAAIjG,UAAUf,OAAS,EACrB8N,GACE/G,EAAG+G,EACH9G,EAAGA,OAIL,IAAI,aAAe8G,GACjBA,EAAWpO,KAAKiS,oBAAoB7D,EAAS8D,eAE1C,IAAI,SAAW9D,GAClB,GAAIpO,KAAKkS,UAAW,CAClB,GAAIlF,GAAQhN,KAAKkS,UAAUC,eAC3B/D,GAAWpO,KAAKiS,qBACd5K,EAAG+G,EAASpB,MAAM3F,EAAI2F,EAAMT,KAC5BjF,EAAG8G,EAASpB,MAAM1F,EAAI0F,EAAMZ,UAI9BgC,GAAWpO,KAAKiS,oBAAoB7D,EAASpB,MAKnDhN,MAAKqH,EAAE+G,EAAS/G,GAAGC,EAAE8G,EAAS9G,GAC9BtH,KAAKyN,KAAK9G,KAAK,QAAS3G,KAAK8L,UAQ/BsG,KAAM,WACJpS,KAAK4R,QAAO,GACZ5R,KAAKyN,KAAK9G,KAAK,QAAS3G,KAAK8L,UAQ/BuG,KAAM,WACJrS,KAAK4R,QAAO,GACZ5R,KAAKyN,KAAK9G,KAAK,QAAS3G,KAAK8L,UAW/BmG,oBAAqB,SAASK,GAC5B,GAAIJ,GAAYlS,KAAKkS,WAAalS,KAAKkS,UAAUA,SAEjD,IAAIA,GAAalS,KAAKkS,UAAUK,aAAc,CAC5C,GAAIC,GAAuBvJ,EAAWiJ,GAClCO,EAAczS,KAAKkS,UAAUhL,QAC7BwL,EAAe1S,KAAKkS,UAAU9K,SAC9BuL,EAAcH,EAAqBtL,MAAQuL,EAC3CG,EAAeJ,EAAqBpL,OAASsL,CAEjD,QACErL,EAAGsL,EAAcL,EAAmBjL,EACpCC,EAAGsL,EAAeN,EAAmBhL,GAMvC,MAAOgL,MAIXZ,WAAY,YF1KVmB,IAA2BzG,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IA6CjEuG,GAAUtF,EAAKlM,QACjBsE,WAAY,SAAS3B,GACnBuJ,EAAKvL,UAAU2D,WAAWxE,KAAKpB,KAAMiE,GAKL,OAA5BjE,KAAKyN,KAAK/D,OAAOqJ,SACnB/S,KAAKkS,UAAYlS,KAAKyN,KAAKuF,OAAO,OAC/BrM,KAAK,QAAS,2BAEjB3G,KAAKyN,KAAOzN,KAAKkS,UAAUc,OAAO,OAC/BrM,KAAK,QAAS,8BACdA,KAAK,UAAW,OAChBA,KAAK,QAAS,kBAGjB3G,KAAKyN,KAAKwF,QAAQ,iBAAiB,GAGrCjT,KAAKkT,wBAGPlN,UAAW,SAASC,GAGlB,MADAjG,MAAKmT,QAAQlN,GACNuH,EAAKvL,UAAU+D,UAAU5E,KAAKpB,KAAMiG,IAmC7ChC,QAASD,GACPD,cAAe,WAAa,MAAO,eACnCU,IAAK,SAASR,GAGZ,MAAKO,IAAWP,GAAhB,QAEIe,SAAU,WACR,MAAOf,QAQjBkP,QAASnP,IAaTkI,QAASlI,GACPD,cAAe8O,GACfpO,IAAK,SAAS2D,GACZ,OACEpD,SAAUiH,EAAW7D,EAAQyK,QAMnCV,cAAenO,GACbD,eAAgBqI,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GACnD9H,IAAK,SAAS2D,GACZ,OACEpD,SAAU9D,KAAakH,GAASgE,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,MAGvEjI,IAAK,SAAS8D,GAIZ,MAHAA,GAAOlB,MAAQlH,KAAKoT,SAAWhL,EAAOiE,MAAQjE,EAAOmE,KACrDnE,EAAOhB,OAASpH,KAAKqT,UAAYjL,EAAOkE,OAASlE,EAAOgE,IAEjDhE,KAUXlB,MAAOlD,GACLD,cAAe,OASjBqD,OAAQpD,GACND,cAAe,OAGjBqP,OAAQ,WACN,GAAIlM,GAAQlH,KAAKkH,OACjB,OAAgB,OAATA,EAAgBA,EAAQsG,EAAKvL,UAAUiF,MAAM9F,KAAKpB,OAE3DqT,QAAS,WACP,GAAIjM,GAASpH,KAAKoH,QAClB,OAAiB,OAAVA,EAAiBA,EAASoG,EAAKvL,UAAUmF,OAAOhG,KAAKpB,OAW9DuS,WAAYvO,GACVD,eAAe,IAIjBuP,QAAStP,GACPD,cAAe,WACb,MAAI/D,MAAKuS,cAAgBvS,KAAKkH,SAAWlH,KAAKoH,SACrC,OAASpH,KAAKkH,QAAU,IAAMlH,KAAKoH,SAEnC,QAKbmM,oBAAqBvP,GACnBD,cAAe,WACb,MAAI/D,MAAKuS,aACA,gBAEA,QAKbiB,eAAgBxP,GACdD,cAAe,WACb,GAAI/D,KAAKuS,aAAc,CACrB,GAAIkB,GAAe,CAInB,OAHIzT,MAAKkH,SAAWlH,KAAKoH,WACvBqM,EAAezT,KAAKoH,SAAWpH,KAAKkH,SAE/B4E,GACL5E,MAAO,OACPE,OAAQ,EACRsM,cAA+B,IAAfD,EAAsB,IACtCrF,SAAU,aAIZ,MAAOtC,IAAOsC,SAAU,gBAM9BuF,UAAW3P,GACTD,cAAe,WACb,MAAI/D,MAAKuS,cAAgBvS,KAAKkS,UACrBpG,GACLsC,SAAU,WACVhC,IAAK,EACLG,KAAM,IAID,QAqBboC,OAAQ3K,GACNS,IAAK,SAASmP,EAAejF,GAE3B,OACE3J,SAAUhF,KAAK6T,aAAaD,EAAejF,EAAQ3O,QAGvD+D,mBAmBF6K,WAAY5K,GACVS,IAAK,SAASqP,EAAmBlF,GAE/B,OACE5J,SAAUhF,KAAK6T,aAAaC,EAAmBlF,EAAY5O,QAG/D+D,mBAWFgQ,MAAO/P,IAUPgQ,SAAUhQ,IAaViQ,KAAMjQ,IAwBNwM,KAAM,SAASvK,GACb,GAAIiO,GAASlU,KAAKmU,eAAenU,KAAKiE,UAAWgC,EAC5CiO,KACHA,GAAUjO,MAAOsI,WAAaC,gBAAkBE,UAAYC,UAAYC,gBAG1E5O,KAAK2O,OAAOuF,EAAOvF,QACnB3O,KAAK4O,WAAWsF,EAAOtF,YAGvB3I,GACEuC,SAAUvC,EACViO,OAAQA,EAAOjO,MAEjBjG,KAAKiG,KAAKA,GAEVjG,KAAKoU,iBAGLpU,KAAK0O,OAAOwF,EAAOxF,OAAQzI,GAG3BlG,EAAGiN,QAAQ/K,UAAUuO,KAAKpP,KAAKpB,KAAMiG,IAQvCoO,OAAQ,WACFrU,KAAKmT,WACPnT,KAAKwQ,KAAKxQ,KAAKmT,UAAU3K,WAG7B8G,MAAO,SAASiB,EAAMtK,GACpB,MAAKA,IAASA,EAAKiO,QAAWjO,EAAKuC,SAG/B0H,EAASlQ,KAAK2O,SAAU4B,IAAStK,EAAKiO,OAAO3F,QAAQgC,GAChDtK,EAAKiO,OAAO3F,QAAQgC,GACpBL,EAASlQ,KAAK4O,aAAc2B,IAAStK,EAAKiO,OAAO1F,YAAY+B,GAC7DtK,EAAKiO,OAAO1F,YAAY+B,GAExBtK,EAAKuC,SAPLvC,GAWXqO,iBAAkB,SAASrQ,GACzB,MAAOjE,MAAKyN,KAAKuF,OAAO,KACrBrM,KAAK,QAAS,eACdA,KAAK,cAAe1C,GAAWA,EAAQwN,UAI5C8C,qBAAsB,SAAStQ,GAC7B,MAAOjE,MAAKyN,KAAKuF,OAAO,KACrBrM,KAAK,QAAS,yBACdA,KAAK,cAAe1C,GAAWA,EAAQwN,UAI5C+C,mBAAoB,WAClB,IAAKxU,KAAKkS,UACR,KAAM,IAAIvN,OAAM,yJAElB,OAAO3E,MAAKkS,UAAUc,OAAO,OAC1BrM,KAAK,QAAS,wBAInB+H,OAAQ,SAASA,EAAQzI,GAEvBjG,KAAKyU,uBAGL/F,EAAS1O,KAAK0U,eAAezO,EAG7B,IAAI0J,GAAiBrO,KAAWtB,KAAKkM,UACrCxJ,GAAWgM,EAAQ,SAASqB,EAAOxP,GACjCwP,EAAMrK,QAAQ,SAASmK,GACrBF,EAAepP,IAAQsP,EAAK/E,QAAU,MAG1C9K,KAAKmS,cAAcxC,GAGnB3P,KAAK2U,eAAejG,IAGtBwE,qBAAsB,WA2CpB,QAAS0B,KACP,GAAIC,GAAQ9U,EAAG8U,MAAMC,SAASC,gBAC9B,OAAOF,GAAM,IAAMG,EAAOzI,MAAQsI,EAAM,IAAMG,EAAO3I,OAASwI,EAAM,IAAMG,EAAO5I,KAAOyI,EAAM,IAAMG,EAAO1I,OAE7G,QAAS2I,KACPxE,EAAQ,aAAcyE,EAAcnV,EAAG8U,MAAMpH,KAE/C,QAAS0H,KACP1E,EAAQ,YAAayE,EAAcnV,EAAG8U,MAAMpH,KAE9C,QAAS2H,KACP3E,EAAQ,cAGV,QAASyE,GAAcG,GACrB,GAAIhO,GAAIgO,EAAY,GAChB/N,EAAI+N,EAAY,GAChBC,EAAUjO,EAAIsI,EAAepD,KAC7BgJ,EAAUjO,EAAIqI,EAAevD,GAajC,OAVI/E,GAAKsI,EAAepD,KAAOoD,EAAezI,MAC5CoO,EAAU3F,EAAezI,MAClBG,EAAIsI,EAAepD,OAC1B+I,EAAU,GAERhO,EAAKqI,EAAevD,IAAMuD,EAAevI,OAC3CmO,EAAU5F,EAAevI,OAClBE,EAAIqI,EAAevD,MAC1BmJ,EAAU,IAGVrD,WAAY7K,EAAGA,EAAGC,EAAGA,GACrB0F,OAAQ3F,EAAGiO,EAAShO,EAAGiO,IAI3B,QAASC,KACP,GAAIC,GAAW,WAAa3L,QAASA,OAAO4L,QAAUZ,SAASC,gBAAgBY,SAM/E,OAJAX,GAAS1T,KAAWmM,EAAKmI,yBACzBZ,EAAO5I,KAAOqJ,EACdT,EAAO1I,QAAUmJ,EAEVT,EAnFT,GAIIrF,GAAgBqF,EAAQa,EAJxBpF,EAAUzQ,KAAKyQ,QAAQtK,KAAKnG,MAC5BmS,EAAgBnS,KAAKmS,cAAchM,KAAKnG,MACxCkS,EAAYlS,KAAKkS,WAAalS,KAAKyN,KACnCA,EAAOzN,KAAKyN,KAAK/D,MAGrBwI,GAAUpB,GAAG,aAAc,WAEzBnB,EAAiBwC,IACjB6C,EAASQ,IAETK,EAAajB,EAAOI,GAChBa,GACFZ,MAEJ/C,EAAUpB,GAAG,YAAa,WAEnBnB,GAAmBqF,IACtBrF,EAAiBwC,IACjB6C,EAASQ,IAGX,IAAIM,GAAYlB,EAAOI,EACnBa,IAAcC,EAChBX,IACOU,EACPT,IACOU,GACPb,IAEFY,EAAaC,IAEf5D,EAAUpB,GAAG,aAAc,WACrB+E,IACFA,GAAa,EACbT,QAqDNvE,OAAQ,SAASzM,EAAI1D,GACnBA,EAAK0D,GAAKA,EACV1D,EAAK+M,KAAK9G,KAAK,UAAWvC,GAC1B1D,EAAKwR,UAAYlS,KAEjBwN,EAAKvL,UAAU4O,OAAOzP,KAAKpB,KAAMoE,EAAI1D,GAEjCA,GAAQ8D,GAAW9D,EAAK+P,UAC1B/P,EAAK+P,QAAQ,WAIjBsF,OAAQ,SAAS3R,EAAI1D,GACnBA,EAAK+M,KAAKuI,eAEHhW,MAAK2N,UAAUvJ,GAElB1D,GAAQ8D,GAAW9D,EAAK+P,UAC1B/P,EAAK+P,QAAQ,WAIjBkE,eAAgB,SAASjG,GACvB1O,KAAKyU,uBACLzU,KAAKiW,oBAAoBvH,GACzB1O,KAAKkW,qBAOP9B,eAAgB,WAGVpU,KAAKkS,WACPlS,KAAKkS,UACFvL,KAAK,QAAS3G,KAAKwT,kBAGxBxT,KAAKyN,KACF9G,KAAK,UAAW3G,KAAKsT,WACrB3M,KAAK,sBAAuB3G,KAAKuT,uBACjC5M,KAAK,QAAS3G,KAAK2T,aACnBhN,KAAK,QAAS3G,KAAKuS,aAAe,KAAOvS,KAAKkH,SAC9CP,KAAK,SAAU3G,KAAKuS,aAAe,KAAOvS,KAAKoH,WAGpDyM,aAAc,SAASpF,EAAOyD,EAAWrQ,GACvC4M,EAAQA,MACRyD,EAAYA,KAGZ,IAAIiE,GAAarV,EAAWgC,EAAMoP,EAAW,MAAOpP,EAAM2L,EAAO,MAMjE,OALA0H,GAAWzQ,QAAQ,SAAS0Q,GAC1BvU,EAAQkU,OAAOK,EAAWlG,EAASgC,EAAWkE,MAIzC3H,EAAMzL,IAAI,SAASiB,GAGxB,GAAIG,GAAKH,EAAQG,GACb1D,EAAOwP,EAASgC,EAAW9N,EAE/B,IAAIH,YAAmBlE,GAAGiN,QAMxB,MAJItM,IACFmB,EAAQkU,OAAO3R,EAAI1D,GAErBmB,EAAQgP,OAAOzM,EAAIH,GACZA,CAIP,IAAIoS,GAAmB3V,KAAUA,YAAgBiR,MAAYjR,EAAK0N,UAAYnK,EAAQmK,UAAY1N,EAAK0N,YAAcnK,EAAQmK,QAQ7H,IANI1N,IAASA,EAAK2B,MAAQ4B,EAAQ5B,MAAQgU,KAExCxU,EAAQkU,OAAO3R,EAAI1D,GACnBA,EAAOkM,QAGJlM,EAwBHA,EAAKuD,QAAQA,OAxBJ,CACT,GAAIqS,GAAOvW,EAAGiN,MAAM/I,EAAQ5B,KAE5B,KAAKiU,EACH,KAAM,IAAI3R,OAAM,oCAAsCV,EAAQ5B,KAEhE,IAAIkU,IAAiB9E,QAAS6E,EAAK7E,SAAW,GAC1C+E,GACFxJ,MAAS,mBACTe,UAAa,uBACb0I,QAAW,sBACXH,EAAK5E,WAEP,KAAK8E,EACH,KAAM,IAAI7R,OAAM,4BAA8B2R,EAAK5E,WAAa,SAAWzN,EAAQ5B,KAErF,IAAIoL,GAAO5L,EAAQ2U,GAAaD,EAEhC7V,GAAO,GAAI4V,GAAK7I,EAAMxJ,GACtBvD,EAAK2B,KAAO4B,EAAQ5B,KAEpBR,EAAQgP,OAAOzM,EAAI1D,GAMrB,MAAOA,MAKbyT,eAAgB,SAASlQ,EAASgC,GAChC,MAAO4H,GAAc5J,EAAQgC,KAG/BwO,qBAAsB,WACpB,GAAIrG,GAAWpO,KAAKmS,eACpBnS,MAAKyN,KAAKiJ,UAAU,gBACjB/P,KAAK,YAAaY,EAAU6G,EAAS7B,KAAM6B,EAAShC,MACpDzF,KAAK,QAASyH,EAASlH,OACvBP,KAAK,SAAUyH,EAAShH,SAG7B6O,oBAAqB,SAASvH,GAC5B,GAAIiB,GAAiB3P,KAAKmS,gBACtBjL,EAAQlH,KAAKoT,SACbhM,EAASpH,KAAKqT,SAElB3D,GAAYhB,EAAQiB,EAAgBzI,EAAOE,IAG7C8O,kBAAmB,WAIjB,QAASS,GAAUjG,GACjB,OACEA,MAAOA,EACPkG,OAAQC,SAAS9W,EAAGuN,OAAOoD,GAAO/J,KAAK,iBAAmB,GAG9D,QAASmQ,GAAW/V,EAAGC,GACrB,MAAID,GAAE6V,OAAS5V,EAAE4V,OACR,GACA7V,EAAE6V,OAAS5V,EAAE4V,OACb,EAEA,EAEX,QAASG,GAASrK,GAChB,MAAOA,GAAQgE,MAlBjB,GAAIsG,GAAShX,KAAKyN,KAAKiJ,UAAU,wCAAwC,EAqBzEM,GAASA,EAAOhU,IAAI2T,GAAWM,KAAKH,GAAY9T,IAAI+T,GAGpDC,EAAOtR,QAAQ,SAASgL,GAClBA,GAASA,EAAMrD,YAAcqD,EAAMrD,WAAW6J,aAChDxG,EAAMrD,WAAW6J,YAAYxG,MAInCgE,eAAgB,SAASzO,GACvB,MAAOoJ,GAAgBrP,KAAK4O,aAAc3I,EAAMjG,KAAKsP,MAAMnJ,KAAKnG,UG7rBhEsQ,GAAQ9C,EAAKlM,WAkBfmQ,QAAS,IACTC,WAAY,SC9CdtB,IAAM9O,OAAOvB,EAAGiN,SACdQ,KAAMA,EACN8C,MAAOA,GACPgB,UAAWA,GACXK,QAASA,GACTmB,QAASA,IAGX,IAAIhT,IAAMC,EAAGoX,SACXC,QAAS,UACThH,MAAOA,GACPC,QAASA,GACT7C,KAAMA,EACN8C,MAAOA,GACPgB,UAAWA,GACXK,QAASA,GACTmB,QAASA,GACT7C,QAASA,EfotFT,OAAOnQ","file":"d3.compose.min.js","sourcesContent":[null,"/*!\n * d3.compose - Compose complex, data-driven visualizations from reusable charts and components with d3\n * v0.15.10 - https://github.com/CSNW/d3.compose - license: MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('d3')) :\n  typeof define === 'function' && define.amd ? define(['d3'], factory) :\n  global.d3c = factory(global.d3);\n}(this, function (d3) { 'use strict';\n\n  d3 = 'default' in d3 ? d3['default'] : d3;\n\n  // Many utils inlined from Underscore.js\n  // (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\n  var slice = Array.prototype.slice;\n  var toString = Object.prototype.toString;\n\n  function _extend(target, extensions, undefined_only) {\n    for (var i = 0, length = extensions.length; i < length; i++) {\n      for (var key in extensions[i]) {\n        if (!undefined_only || target[key] === void 0)\n          target[key] = extensions[i][key];\n      }\n    }\n\n    return target;\n  }\n\n  function contains(arr, item) {\n    return arr.indexOf(item) >= 0;\n  }\n\n  function compact(arr) {\n    return arr.filter(function(item) {\n      return item;\n    });\n  }\n\n  function difference(a, b) {\n    return a.filter(function(value) {\n      return b.indexOf(value) < 0;\n    });\n  }\n\n  function defaults(target) {\n    return _extend(target, slice.call(arguments, 1), true);\n  }\n\n  function extend(target) {\n    return _extend(target, slice.call(arguments, 1));\n  }\n\n  function flatten(arr) {\n    // Assumes all items in arr are arrays and only flattens one level\n    return arr.reduce(function(memo, item) {\n      return memo.concat(item);\n    }, []);\n  }\n\n  function find(arr, fn, context) {\n    if (!arr) return;\n    for (var i = 0, length = arr.length; i < length; i++) {\n      if (fn.call(context, arr[i], i, arr))\n        return arr[i];\n    }\n  }\n\n  function first(arr, n) {\n    if (arr == null) return void 0;\n    if (n == null) return arr[0];\n    return Array.prototype.slice.call(arr, 0, n);\n  }\n\n  function isBoolean(obj) {\n    return obj === true || obj === false;\n  }\n  function isObject(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  }\n  function isNumber(obj) {\n    return toString.call(obj) === '[object Number]';\n  }\n  function isString(obj) {\n    return toString.call(obj) === '[object String]';\n  }\n  function isUndefined(obj) {\n    return obj === void 0;\n  }\n\n  var isFunction = function(obj) {\n    return toString.call(obj) === '[object Function]';\n  };\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  function objectEach(obj, fn, context) {\n    if (!obj) return;\n    var keys = Object.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      fn.call(context, obj[keys[i]], keys[i], obj);\n    }\n  }\n\n  function objectFind(obj, fn, context) {\n    if (!obj) return;\n    var keys = Object.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      if (fn.call(context, obj[keys[i]], keys[i], obj))\n        return obj[keys[i]];\n    }\n  }\n\n  function pluck(objs, key) {\n    if (!objs) return [];\n    return objs.map(function(obj) {\n      return obj[key];\n    });\n  }\n\n  function uniq(arr) {\n    var result = [];\n    for (var i = 0, length = arr.length; i < length; i++) {\n      if (result.indexOf(arr[i]) < 0)\n        result.push(arr[i]);\n    }\n    return result;\n  }\n\n  function inherits(Child, Parent) {\n    Child.prototype = Object.create(Parent.prototype, {\n      constructor: {\n        value: Child,\n        enumerable: false,\n        writeable: true,\n        configurable: true\n      }\n    });\n\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(Child, Parent);\n    }\n    else {\n      Child.__proto__ = Parent; //eslint-disable-line no-proto\n\n      // __proto__ isn't supported in IE,\n      // use one-time copy of static properties to approximate\n      defaults(Child, Parent);\n    }\n  }\n\n  // If value isn't `undefined`, return `value`, otherwise use `default_value`\n  //\n  // @method valueOrDefault\n  // @param {Any} [value]\n  // @param {Any} default_value\n  // @return {Any}\n  function valueOrDefault(value, default_value) {\n    return !isUndefined(value) ? value : default_value;\n  }\n\n  var utils = {\n    slice: slice,\n    toString: toString,\n    contains: contains,\n    compact: compact,\n    difference: difference,\n    defaults: defaults,\n    extend: extend,\n    flatten: flatten,\n    find: find,\n    first: first,\n    isBoolean: isBoolean,\n    isFunction: isFunction,\n    isObject: isObject,\n    isNumber: isNumber,\n    isString: isString,\n    isUndefined: isUndefined,\n    objectEach: objectEach,\n    objectFind: objectFind,\n    pluck: pluck,\n    uniq: uniq,\n    inherits: inherits,\n    valueOrDefault: valueOrDefault\n  };\n\n  var unique_index = 0;\n\n  /**\n    Helper for creating properties for charts/components\n\n    @example\n    ```javascript\n    var Custom = d3.chart('Chart').extend('Custom', {\n      // Create property that's stored internally as 'simple'\n      simple: property()\n    });\n    var custom; // = new Custom(...);\n\n    // set\n    custom.simple('Howdy');\n\n    // get\n    console.log(custom.simple()); // -> 'Howdy'\n\n    // Advanced\n    // --------\n    // Default values:\n    Custom.prototype.message = property({\n      default_value: 'Howdy!'\n    });\n\n    console.log(custom.message()); // -> 'Howdy!'\n    custom.message('Goodbye');\n    console.log(custom.message()); // -> 'Goodbye'\n\n    // Set to undefined to reset to default value\n    custom.message(undefined);\n    console.log(custom.message()); // -> 'Howdy!'\n\n    // Computed default value:\n    Custom.property.computed = property({\n      default_value: function() {\n        // \"this\" = Custom instance\n        return this.message();\n      }\n    });\n\n    // Function default value:\n    // For function default_values, wrap in function to differentiate from computed\n    Custom.property.fn = property({\n      default_value: function() {\n        return function defaultFn() {};\n      }\n      // The following would be incorrectly evaluated\n      // default_value: function defaultFn() {}\n    })\n\n    // Custom getter:\n    Custom.prototype.exclaimed = property({\n      get: function(value) {\n        // Value is the underlying set value\n        return value + '!';\n      }\n    });\n\n    custom.exclaimed('Howdy');\n    console.log(custom.exclaimed()); // -> 'Howdy!'\n\n    // Custom setter:\n    Custom.prototype.feeling = property({\n      set: function(value, previous) {\n        if (value == 'Hate') {\n          // To override value, return Object with override specified\n          return {\n            override: 'Love',\n\n            // To do something after override, use after callback\n            after: function() {\n              console.log('After: ' + this.feeling()); // -> 'After: Love'\n            }\n          };\n        }\n      }\n\n      custom.feeling('Hate'); // -> 'After: Love'\n      console.log(custom.feeling()); // -> 'Love'\n    });\n    ```\n    @method property\n    @for helpers\n    @param {Object} [options]\n    @param {Any} [options.default_value] default value for property (when set value is `undefined`). If default value is a function, wrap in another function as default_value is evaluated by default.\n    @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\n    @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\n    @param {Object} [options.context=this] context to evaluate get/set/after functions\n    @return {Function} `()`: get, `(value)`: set\n  */\n  function property(options) {\n    // DEPRECATED: name as first argument\n    if (arguments.length == 2) {\n      if (typeof console != 'undefined' && console.warn)\n        console.warn('DEPRECATED - name argument for property is no longer supported will be removed in the next version of d3.compose');\n      options = arguments[1];\n    }\n\n    options = options || {};\n    var id = 'property_' + unique_index++;\n\n    var property = function(value) {//eslint-disable-line no-shadow\n      var properties = this.__properties = this.__properties || {};\n      var context = valueOrDefault(property.context, this);\n\n      if (arguments.length)\n        return set.call(this);\n      else\n        return get.call(this);\n\n      function get() {\n        value = properties[id];\n\n        if (isUndefined(value)) {\n          // Use default value and unwrap if it's a function\n          value = property.default_value;\n          if (isFunction(value))\n            value = value.call(context);\n        }\n\n        return isFunction(options.get) ? options.get.call(context, value) : value;\n      }\n\n      function set() {\n        // Validate\n        if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(context, value))\n          throw new Error('Invalid value for property: ' + JSON.stringify(value));\n\n        var previous = properties[id];\n        properties[id] = value;\n\n        if (isFunction(options.set) && !isUndefined(value)) {\n          var response = options.set.call(context, value, previous);\n\n          if (response && 'override' in response)\n            properties[id] = response.override;\n          if (response && isFunction(response.after))\n            response.after.call(context, properties[id]);\n        }\n\n        return this;\n      }\n    };\n\n    // For checking if function is a property\n    property.is_property = true;\n    property.id = id;\n    property.set_from_options = valueOrDefault(options.set_from_options, true);\n    property.default_value = options.default_value;\n    property.context = options.context;\n    property.options = options;\n\n    return property;\n  }\n\n  /**\n    Combine mixins with Parent super class for extension\n\n    @example\n    ```js\n    var a = {transform: function() {}, a: 1};\n    var b = {initialize: function() {}, b: 2};\n    var c = {c: 3};\n\n    var Custom = mixin(Chart, a, b, c).extend({\n      initialize: function(options) {\n        this._super.initialize.call(this, options);\n        // d\n      },\n      transform: function(data) {\n        data = this._super.transform.call(this, data);\n        // d\n      }\n    });\n\n    // initialize: Chart, b, d\n    // transform: Chart, a, d\n    ```\n    @method mixin\n    @for helpers\n    @param {Function} Parent\n    @param {...Object} ...mixins\n    @return {Function}\n  */\n  function mixin(Parent/*, ...mixins*/) {\n    var mixins = slice.call(arguments, 1);\n    var initializes = [];\n    var transforms = [];\n    var mixed = {};\n\n    mixins.forEach(function(mix) {\n      objectEach(mix, function(value, key) {\n        if (key == 'initialize')\n          initializes.push(value);\n        else if (key == 'transform')\n          transforms.push(value);\n        else\n          mixed[key] = value;\n      });\n    });\n\n    if (initializes.length) {\n      mixed.initialize = function initialize() {\n        var args = slice.call(arguments);\n        Parent.prototype.initialize.apply(this, args);\n        initializes.forEach(function(init) {\n          init.apply(this, args);\n        }, this);\n      };\n    }\n\n    if (transforms.length) {\n      mixed.transform = function transform(data) {\n        data = Parent.prototype.transform.call(this, data);\n        return transforms.reduce(function(memo, trans) {\n          return trans.call(this, memo);\n        }.bind(this), data);\n      };\n    }\n\n    return Parent.extend(mixed);\n  }\n\n  /**\r\n    Stack given array of elements vertically or horizontally\r\n\r\n    @example\r\n    ```js\r\n    // Stack all text elements vertically, from the top, with 0px padding\r\n    d3.selectAll('text').call(helpers.stack())\r\n\r\n    // Stack all text elements horizontally, from the right, with 5px padding\r\n    d3.selectAll('text').call(helpers.stack({\r\n      direction: 'horizontal',\r\n      origin: 'right',\r\n      padding: 5\r\n    }));\r\n    ```\r\n    @method stack\r\n    @for helpers\r\n    @param {Object} [options]\r\n    @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n    @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n    @param {Number} [options.padding=0] padding (in px) between elements\r\n    @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n    @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n    @return {Function}\r\n  */\r\n  function stack(options) {\r\n    options = extend({\r\n      direction: 'vertical',\r\n      origin: 'top',\r\n      padding: 0,\r\n      min_height: 0,\r\n      min_width: 0\r\n    }, options);\r\n\r\n    // Ensure valid origin based on direction\r\n    if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n      options.origin = 'left';\r\n    else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n      options.origin = 'top';\r\n\r\n    function padding(i) {\r\n      return i > 0 && options.padding ? options.padding : 0;\r\n    }\r\n\r\n    return function(elements) {\r\n      if (elements && elements.attr) {\r\n        var previous = 0;\r\n\r\n        elements.attr('transform', function(d, i) {\r\n          var element_dimensions = this.getBBox();\r\n          var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n          var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n          var x = 0;\r\n          var y = 0;\r\n          var next_position;\r\n\r\n          if (options.direction == 'horizontal') {\r\n            next_position = previous + spacing_width + padding(i);\r\n\r\n            if (options.origin == 'left')\r\n              x = previous + padding(i);\r\n            else\r\n              x = next_position;\r\n\r\n            previous = next_position;\r\n          }\r\n          else {\r\n            next_position = previous + spacing_height + padding(i);\r\n\r\n            if (options.origin == 'top')\r\n              y = previous + padding(i);\r\n            else\r\n              y = next_position;\r\n\r\n            previous = next_position;\r\n          }\r\n\r\n          return translate(x, y);\r\n        });\r\n      }\r\n    };\r\n  }\n\n  /**\n    Create scale from options\n\n    @example\n    ```javascript\n    // Simple type, range, and domain\n    var scale = createScale({\n      type: 'linear',\n      domain: [0, 100],\n      range: [0, 500]\n    });\n\n    // Calculate domain for data\n    var scale = createScale({\n      type: 'log',\n      data: [{y: 1}, {y: 100}, {y: 2000}, {y: 5000}],\n      key: 'y'\n    });\n\n    // Scale is passed through\n    var original = d3.scale.linear();\n    var scale = createScale(original);\n    scale === original;\n\n    // Set other properties by passing in \"arguments\" array\n    var scale = createScale({\n      type: 'ordinal',\n      domain: ['a', 'b', 'c', 'd', 'e'],\n      rangeRoundBands: [[0, 100], 0.1, 0.05] // -> rangeRoundBands([0, 100], 0.1, 0.05)\n    });\n\n    // Use ordinal + adjacent for bar charts\n    var scale = createScale({\n      type: 'ordinal',\n      adjacent: true,\n      domain: ['a', 'b', 'c'],\n      series: 2 // Series count is required for adjacent if data isn't given\n    })\n    ```\n    @method createScale\n    @for helpers\n    @param {Object|Function} options (passing in `Function` returns original function with no changes)\n    @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\n    @param {Array} [options.domain] Domain for scale\n    @param {Array} [options.range] Range for scale\n    @param {Any} [options.data] Used to dynamically set domain (with given value or key)\n    @param {Function} [options.value] \"di\"-function for getting value for data\n    @param {String} [options.key] Data key to extract value\n    @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\n    @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\n\n    - Requires series-index as second argument to scale, otherwise centered x-value is used\n    - Requires \"data\" or \"series\" options to determine number of series\n    @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\n    @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\n    @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\n    @return {d3.Scale}\n  */\n  function createScale(options) {\n    options = options || {};\n\n    // If function, scale was passed in as options\n    if (isFunction(options))\n      return options;\n\n    // Create scale (using d3.time.scale() if type is 'time')\n    var scale;\n    if (options.type == 'time')\n      scale = d3.time.scale();\n    else if (d3.scale[options.type])\n      scale = d3.scale[options.type]();\n    else\n      scale = d3.scale.linear();\n\n    objectEach(options, function(value, key) {\n      if (scale[key]) {\n        // If option is standard property (domain or range), pass in directly\n        // otherwise, pass in as arguments\n        // (don't pass through internal options)\n        if (key == 'range' || key == 'domain')\n          scale[key](value);\n        else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\n          scale[key].apply(scale, value);\n      }\n    });\n\n    if (!options.domain && options.data && (options.key || options.value))\n      scale = setDomain(scale, options);\n\n    // Add centered and adjacent extensions to ordinal\n    // (centered by default for ordinal)\n    var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\n    if (options.type == 'ordinal' && (centered || options.adjacent))\n      scale = addCentered(scale, options);\n\n    // Add padding extension to ordinal\n    if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\n      scale = addPadding(scale, options);\n\n    return scale;\n  }\n\n  function setDomain(scale, options) {\n    // Use value \"di\" or create for key\n    var getValue = options.value || function(d) {\n      return d[options.key];\n    };\n\n    // Enforce series data\n    var data = options.data;\n    if (!isSeriesData(data))\n      data = [{values: data}];\n\n    var domain;\n    if (options.type == 'ordinal') {\n      // Domain for ordinal is array of unique values\n      domain = uniq(flatten(data.map(function(series) {\n        if (series && series.values)\n          return series.values.map(getValue);\n      })));\n    }\n    else {\n      var min_value = min(data, getValue);\n\n      domain = [\n        min_value < 0 ? min_value : 0,\n        max(data, getValue)\n      ];\n    }\n\n    scale.domain(domain);\n    return scale;\n  }\n\n  function addCentered(original, options) {\n    // Get series count for adjacent\n    var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\n\n    // TODO Look into removing closure\n    var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\n      var context = function(value, series_index) {\n        var width = context.width();\n\n        if (!options.adjacent)\n          series_index = 0;\n\n        return original(value) + (0.5 * width) + (width * (series_index || 0));\n      };\n      extend(context, original, {\n        width: function() {\n          var range_band = context.rangeBand && context.rangeBand();\n          var width = isFinite(range_band) ? range_band : 0;\n\n          if (options.adjacent)\n            width = width / series_count;\n\n          return width;\n        }\n      });\n\n      // TODO test copy() behavior\n\n      return context;\n    })(original, options, series_count);\n\n    return scale;\n  }\n\n  function addPadding(scale, options) {\n    var padding = options.padding != null ? options.padding : 0.1;\n\n    var original_range = scale.range;\n    scale.range = function(range) {\n      if (!arguments.length) return original_range();\n\n      scale.rangeBands(\n        range,\n        padding,\n        padding / 2\n      );\n    };\n\n    if (options.range)\n      scale.range(options.range);\n\n    // TODO test copy() behavior\n    return scale;\n  }\n\n  /**\n    Helper for robustly determining width/height of given selector.\n    Checks dimensions from css, attributes, and bounding box.\n\n    @method dimensions\n    @for helpers\n    @param {d3.Selection} selection\n    @return {Object} `{width, height}`\n  */\n  function dimensions(selection) {\n    // 1. Get width/height set via css (only valid for svg and some other elements)\n    var client = clientDimensions(selection);\n\n    if (client.width && client.height)\n      return client;\n\n    // 2. Get width/height set via attribute\n    var attr = attrDimensions(selection);\n\n    if (isSVG(selection)) {\n      return {\n        width: client.width != null ? client.width : attr.width || 0,\n        height: client.height != null ? client.height : attr.height || 0\n      };\n    }\n    else {\n      var bbox = bboxDimensions(selection);\n\n      // Size set by css -> client (only valid for svg and some other elements)\n      // Size set by svg -> attr override or bounding_box\n      // -> Take maximum\n      return {\n        width: d3.max([client.width, attr.width || bbox.width]) || 0,\n        height: d3.max([client.height, attr.height || bbox.height]) || 0\n      };\n    }\n  }\n\n  function clientDimensions(selection) {\n    var element = selection.node();\n\n    var client_dimensions = {\n      width: element && element.clientWidth,\n      height: element && element.clientHeight\n    };\n\n    // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\n    //        calculate from css\n    //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\n    //        Note: This makes assumptions about the box model in use and that width/height are not percent values\n    if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\n      var styles = window.getComputedStyle(element);\n      client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\n      client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\n    }\n\n    return client_dimensions;\n  }\n\n  function attrDimensions(selection) {\n    return {\n      width: selection && selection.attr && parseFloat(selection.attr('width')),\n      height: selection && selection.attr && parseFloat(selection.attr('height'))\n    };\n  }\n\n  function bboxDimensions(selection) {\n    var element = selection.node();\n    var bbox;\n    try {\n      bbox = element && typeof element.getBBox == 'function' && element.getBBox();\n    }\n    catch(ex) {\n      // Firefox throws error when calling getBBox when svg hasn't been displayed\n      // Ignore error and set to empty\n      bbox = {width: 0, height: 0};\n    }\n\n    return bbox;\n  }\n\n  function isSVG(selection) {\n    return selection.node().nodeName == 'svg';\n  }\n\n  /**\n    Translate by (x, y) distance\n\n    @example\n    ```javascript\n    translate(10, 15) == 'translate(10, 15)'\n    translate({x: 10, y: 15}) == 'translate(10, 15)'\n    ```\n    @method translate\n    @param {Number|Object} [x] value or `{x, y}`\n    @param {Number} [y]\n    @return {String}\n  */\n  function translate(x, y) {\n    if (isObject(x)) {\n      y = x.y;\n      x = x.x;\n    }\n\n    return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\n  }\n\n  /**\n    Rotate by degrees, with optional center\n\n    @method rotate\n    @param {Number} degrees\n    @param {Object} [center = {x: 0, y: 0}]\n    @return {String}\n  */\n  function rotate(degrees, center) {\n    var rotation = 'rotate(' + (degrees || 0);\n    if (center)\n      rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\n    rotation += ')';\n\n    return rotation;\n  }\n\n  /**\n    Find vertical offset to vertically align text\n    (needed due to lack of `alignment-baseline` support in Firefox)\n\n    @example\n    ```js\n    var label = d3.select('text');\n\n    // Place label vertically so that origin is top-left\n    var offset = alignText(label);\n    label.attr('transform', translate(0, offset));\n\n    // Center label for line-height of 20px\n    var offset = alignText(label, 20);\n    label.attr('transform', translate(0, offset));\n    ```\n    @method alignText\n    @param {element} element\n    @param {Number} [line_height]\n    @return {Number} offset\n  */\n  function alignText(element, line_height) {\n    var offset = 0;\n    try {\n      var height = element.getBBox().height;\n\n      var element_style = window.getComputedStyle(element);\n      var css_font_size = parseFloat(element_style['font-size']);\n      var css_line_height = parseFloat(element_style['line-height']);\n\n      // If line-height: normal, use estimate 1.14em\n      // (actual line-height depends on browser and font)\n      if (isNaN(css_line_height))\n        css_line_height = 1.15 * css_font_size;\n\n      var css_adjustment = -(css_line_height - css_font_size) / 2;\n\n      // Add additional line-height, if specified\n      var height_adjustment = 0;\n      if (line_height && line_height > 0)\n        height_adjustment = (line_height - height) / 2;\n\n      offset = height + (css_adjustment || 0) + (height_adjustment || 0);\n    }\n    catch (ex) {\n      // Errors can occur from getBBox and getComputedStyle\n      // No useful information for offset, do nothing\n    }\n\n    return offset;\n  }\n\n  /**\n    Determine if given data is likely series data\n\n    @method isSeriesData\n    @param {Array} data\n    @return {Boolean}\n  */\n  function isSeriesData(data) {\n    var first_item = first(data);\n    return first_item && isObject(first_item) && Array.isArray(first_item.values);\n  }\n\n  /**\n    Get max for array/series by value di\n\n    @example\n    ```js\n    var data = [\n      {values: [{y: 1}, {y: 2}, {y: 3}]},\n      {values: [{y: 4}, {y: 2}, {y: 0}]}\n    ];\n    max(data, function(d, i) { return d.y; }); // -> 4\n    ```\n    @method max\n    @param {Array} data\n    @param {Function} getValue di function that returns value for given (d, i)\n    @return {Number}\n  */\n  function max(data, getValue) {\n    var getMax = function(series_data) {\n      return series_data && d3.extent(series_data, getValue)[1];\n    };\n\n    if (isSeriesData(data)) {\n      return data.reduce(function(memo, series) {\n        if (series && Array.isArray(series.values)) {\n          var series_max = getMax(series.values);\n          return series_max > memo ? series_max : memo;\n        }\n        else {\n          return memo;\n        }\n      }, -Infinity);\n    }\n    else {\n      return getMax(data);\n    }\n  }\n\n  /**\n    Get min for array/series by value di\n\n    @example\n    ```js\n    var data = [\n      {values: [{x: 1}, {x: 2}, {x: 3}]},\n      {values: [{x: 4}, {x: 2}, {x: 0}]}\n    ];\n    min(data, function(d, i) { return d.x; }); // -> 0\n    ```\n    @method min\n    @param {Array} data\n    @param {Function} getValue di function that returns value for given (d, i)\n    @return {Number}\n  */\n  function min(data, getValue) {\n    var getMin = function(series_data) {\n      return series_data && d3.extent(series_data, getValue)[0];\n    };\n\n    if (isSeriesData(data)) {\n      return data.reduce(function(memo, series) {\n        if (series && Array.isArray(series.values)) {\n          var series_min = getMin(series.values);\n          return series_min < memo ? series_min : memo;\n        }\n        else {\n          return memo;\n        }\n      }, Infinity);\n    }\n    else {\n      return getMin(data);\n    }\n  }\n\n  // TODO Look into converting to d3's internal style handling\n  // Convert key,values to style string\n  //\n  // @example\n  // ```js\n  // style({color: 'red', display: 'block'}) -> color: red; display: block;\n  // ```\n  // @method style\n  // @param {Object} styles\n  // @return {String}\n  function style(styles) {\n    if (!styles)\n      return '';\n\n    var keyValues = [];\n    objectEach(styles, function(value, key) {\n      keyValues.push(key + ': ' + value);\n    });\n    styles = keyValues.join('; ');\n\n    return styles ? styles + ';' : '';\n  }\n\n  /**\n    Get formatted margins for varying input\n\n    @method getMargins\n    @example\n    ```js\n    getMargins(4);\n    // -> {top: 4, right: 4, bottom: 4, left: 4}\n\n    getMargins({top: 20}, {top: 8, bottom: 8});\n    // -> {top: 20, right: 0, bottom: 8, left: 0}\n    ```\n    @param {Number|Object} margins\n    @param {Object} default_margins\n    @return {Object}\n  */\n  function getMargins(margins, default_margins) {\n    if (isNumber(margins))\n      return {top: margins, right: margins, bottom: margins, left: margins};\n    else\n      return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\n  }\n\n  /**\n    Create wrapped `(d, i)` function that adds chart instance as first argument.\n    Wrapped function uses standard d3 arguments and context.\n\n    Note: in order to pass proper context to di-functions called within di-function\n    use `.call(this, d, i)` (where \"this\" is d3 context)\n\n    @example\n    ```javascript\n    d3.chart('Base').extend('Custom', {\n      initialize: function() {\n        this.base.select('point')\n          .attr('cx', this.x);\n        // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\n      },\n\n      x: di(function(chart, d, i) {\n        // \"this\" is standard d3 context: node\n        return chart.xScale()(chart.xValue.call(this, d, i));\n      })\n\n      // xScale, xValue...\n    });\n    ```\n    @method di\n    @param {Function} callback with `(chart, d, i)` arguments\n    @return {Function}\n  */\n  function di(callback) {\n    // Create intermediate wrapping in case it's called without binding\n    var wrapped = function wrapped(d, i, j) {\n      return callback.call(this, undefined, d, i, j);\n    };\n    wrapped._is_di = true;\n    wrapped.original = callback;\n\n    return wrapped;\n  }\n\n  function bindDi(diFn, chart) {\n    return function wrapped(d, i, j) {\n      return (diFn.original || diFn).call(this, chart, d, i, j);\n    };\n  }\n\n  // Bind all di-functions found in chart\n  function bindAllDi(chart) {\n    for (var key in chart) {\n      if (chart[key] && chart[key]._is_di)\n        chart[key] = bindDi(chart[key], chart);\n    }\n  }\n\n\n  /**\n    Get parent data for element (used to get parent series for data point)\n\n    @example\n    ```js\n    var data = [{\n      name: 'Input',\n      values: [1, 2, 3]\n    }];\n\n    d3.selectAll('g')\n      .data(data)\n      .enter().append('g')\n        .selectAll('text')\n          .data(function(d) { return d.values; })\n          .enter().append('text')\n            .text(function(d) {\n              var series_data = getParentData(this);\n              return series_data.name + ': ' + d;\n            });\n\n    // Input: 1, Input: 2, Input: 3\n    ```\n    @method getParentData\n    @param {Element} element\n    @return {Any}\n  */\n  function getParentData(element) {\n    // @internal Shortcut if element + parentData needs to be mocked\n    if (element._parent_data)\n      return element._parent_data;\n\n    var parent = element && element.parentNode;\n    if (parent) {\n      var data = d3.select(parent).data();\n      return data && data[0];\n    }\n  }\n\n  function createHelper(type) {\n    return function(id, options) {\n      if (!options) {\n        options = id;\n        id = undefined;\n      }\n\n      return extend({id: id, type: type}, options);\n    };\n  }\n\n  var helpers = {\n    property: property,\n    dimensions: dimensions,\n    translate: translate,\n    rotate: rotate,\n    alignText: alignText,\n    isSeriesData: isSeriesData,\n    max: max,\n    min: min,\n    createScale: createScale,\n    style: style,\n    getMargins: getMargins,\n    stack: stack,\n    di: di,\n    bindDi: bindDi,\n    bindAllDi: bindAllDi,\n    getParentData: getParentData,\n    mixin: mixin,\n    createHelper: createHelper\n  };\n\n  var Chart = d3.chart();\r\n\r\n  // TEMP Clear namespace from mixins\r\n  /**\r\n    @namespace\r\n  */\r\n\r\n  /**\r\n    Shared functionality between all charts and components.\r\n\r\n    - Set properties automatically from `options`,\r\n    - Store fully transformed data\r\n    - Adds `\"before:draw\"` and `\"draw\"` events\r\n    - Standard `width` and `height` calculations\r\n\r\n    @class Base\r\n  */\r\n  function Base(selection, options) {\r\n    // d3.chart() constructor without transform and initialize cascade\r\n    this.base = selection;\r\n    this._layers = {};\r\n    this._attached = {};\r\n    this._events = {};\r\n\r\n    // Bind all di-functions to this chart\r\n    bindAllDi(this);\r\n\r\n    // Set options (and properties with set_from_options)\r\n    if (options)\r\n      this.options(options);\r\n\r\n    // Initialize Chart (relies on explicitly calling super in initialize)\r\n    this.initialize(options);\r\n  }\r\n\r\n  inherits(Base, Chart);\r\n\r\n  extend(Base.prototype, {\r\n    initialize: function() {},\r\n    transform: function(data) {\r\n      return data;\r\n    },\r\n    demux: function(name, data) { return data; },\r\n\r\n    // Add events to draw: \"before:draw\" and \"draw\"\r\n    draw: function(data) {\r\n      // Transform data (relies on explicitly calling super in transform)\r\n      data = this.transform(data);\r\n\r\n      // Store fully-transformed data for reference\r\n      this.data(data);\r\n\r\n      this.trigger('before:draw', data);\r\n\r\n      objectEach(this._layers, function(layer) {\r\n        layer.draw(data);\r\n      });\r\n      objectEach(this._attached, function(attachment, name) {\r\n        attachment.draw(this.demux(name, data));\r\n      }, this);\r\n\r\n      this.trigger('draw', data);\r\n    },\r\n\r\n    // Explicitly load d3.chart prototype\r\n    layer: Chart.prototype.layer,\r\n    unlayer: Chart.prototype.unlayer,\r\n    attach: Chart.prototype.attach,\r\n    on: Chart.prototype.on,\r\n    once: Chart.prototype.once,\r\n    off: Chart.prototype.off,\r\n    trigger: Chart.prototype.trigger,\r\n\r\n    /**\r\n      Store fully-transformed data for direct access from the chart\r\n\r\n      @property data\r\n      @type Any\r\n    */\r\n    data: property(),\r\n\r\n    /**\r\n      Overall options for chart/component, automatically setting any matching properties.\r\n\r\n      @example\r\n      ```js\r\n      var property = d3.compose.helpers.property;\r\n\r\n      d3.chart('Base').extend('HasProperties', {\r\n        a: property(),\r\n        b: property({\r\n          set: function(value) {\r\n            return {\r\n              override: value + '!'\r\n            };\r\n          }\r\n        })\r\n      });\r\n\r\n      var instance = d3.select('#chart')\r\n        .chart('HasProperties', {\r\n          a: 123,\r\n          b: 'Howdy',\r\n          c: true\r\n        });\r\n\r\n      // Equivalent to:\r\n      // d3.select(...)\r\n      //   .chart('HasProperties')\r\n      //   .options({...});\r\n\r\n      console.log(instance.a()); // -> 123\r\n      console.log(instance.b()); // -> Howdy!\r\n      console.log(instance.options().c); // -> true\r\n      ```\r\n      @property options\r\n      @type Object\r\n    */\r\n    options: property({\r\n      default_value: {},\r\n      set: function(options, previous) {\r\n        // Clear all unset options, except for data and options\r\n        if (previous) {\r\n          var unset = difference(Object.keys(previous), Object.keys(options));\r\n          unset.forEach(function(key) {\r\n            if (key != 'data' && key != 'options' && isProperty(this, key))\r\n              this[key](undefined);\r\n          }, this);\r\n        }\r\n\r\n        objectEach(options, function setFromOptions(value, key) {\r\n          if (isProperty(this, key))\r\n            this[key](value);\r\n        }, this);\r\n\r\n        function isProperty(chart, key) {\r\n          return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get width of `this.base`.\r\n      (Does not include `set` for setting width of `this.base`)\r\n\r\n      @method width\r\n      @return {Number}\r\n    */\r\n    width: function width() {\r\n      return dimensions(this.base).width;\r\n    },\r\n\r\n    /**\r\n      Get height of `this.base`.\r\n      (Does not include `set` for setting height of `this.base`)\r\n\r\n      @method height\r\n      @return {Number}\r\n    */\r\n    height: function height() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  });\r\n\r\n  Base.extend = function(proto_props, static_props) {\r\n    // name may be first parameter for d3.chart usage\r\n    var name;\r\n    if (isString(proto_props)) {\r\n      name = proto_props;\r\n      proto_props = static_props;\r\n      static_props = arguments[2];\r\n    }\r\n\r\n    var Parent = this;\r\n    var Child;\r\n\r\n    if (proto_props && proto_props.hasOwnProperty('constructor')) {\r\n      Child = proto_props.constructor;\r\n\r\n      // inherits sets constructor, remove from proto_props\r\n      proto_props = extend({}, proto_props);\r\n      delete proto_props.constructor;\r\n    }\r\n    else {\r\n      Child = function() { return Parent.apply(this, arguments); };\r\n    }\r\n\r\n    inherits(Child, Parent);\r\n    if (static_props)\r\n      extend(Child, static_props);\r\n    if (proto_props)\r\n      extend(Child.prototype, proto_props);\r\n\r\n    // If name is given, register with d3.chart\r\n    if (name)\r\n      Chart[name] = Child;\r\n\r\n    return Child;\r\n  };\n\n  /*\n    Extract layout from the given options\n\n    @param {Array} options\n    @return {Object} {data, items, layout}\n  */\n  function extractLayout(options) {\n    if (!options)\n      return;\n\n    var data = {\n      _charts: {},\n      _components: {}\n    };\n    var items = {};\n    var layout = [];\n    var charts = [];\n    var components = [];\n\n    // TEMP Idenfify charts from layered,\n    // eventually no distinction between charts and components\n    var found = {\n      row: false,\n      charts: false\n    };\n\n    // Components are added from inside-out\n    // so for position: top, position: left, use unshift\n    options.forEach(function(row, row_index) {\n      var row_components = [];\n\n      if (!Array.isArray(row))\n        row = [row];\n      if (row.length > 1)\n        found.row = true;\n\n      var row_layout = row.map(function(item, col_index) {\n        if (!item)\n          return;\n\n        if (item._layered) {\n          // Charts\n          found.charts = found.row = true;\n          var chart_ids = [];\n\n          item.items.forEach(function(chart, chart_index) {\n            if (!chart)\n              return;\n\n            chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\n\n            chart_ids.push(chart.id);\n            charts.push(chart);\n            items[chart.id] = chart;\n          });\n\n          return chart_ids;\n        }\n\n        var component = prepareComponent(item, row_index, col_index);\n        items[component.id] = component;\n\n        if (row.length > 1) {\n          if (!found.charts) {\n            // Left\n            setPosition(component, 'left');\n            row_components.unshift(component);\n          }\n          else {\n            // Right\n            setPosition(component, 'right');\n            row_components.push(component);\n          }\n        }\n        else {\n          if (!found.row) {\n            // Top\n            setPosition(component, 'top');\n            components.unshift(component);\n          }\n          else {\n            // Bottom\n            setPosition(component, 'bottom');\n            components.push(component);\n          }\n        }\n\n        return component.id;\n      });\n\n      if (row_components.length)\n        components = components.concat(row_components);\n\n      layout.push(row_layout);\n    });\n\n    charts.forEach(extractData('_charts'));\n    components.forEach(extractData('_components'));\n\n    return {\n      data: data,\n      items: items,\n      layout: layout,\n\n      charts: charts,\n      components: components\n    };\n\n    function prepareComponent(component, row_index, col_index) {\n      return defaults({}, component, {id: getId(row_index, col_index)});\n    }\n    function setPosition(component, position) {\n      if (component && isFunction(component.position))\n        component.position(position);\n      else\n        component.position = position;\n    }\n    function getId(row_index, col_index, layered_index) {\n      var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\n      if (layered_index != null)\n        id += '-' + (layered_index + 1);\n\n      return id;\n    }\n\n    function extractData(type) {\n      return function(item) {\n        if (item.data && !isFunction(item.data)) {\n          data[type][item.id] = item.data;\n          data[item.id] = item.data;\n          delete item.data;\n        }\n      };\n    }\n  }\n\n  /*\n    Calculate component and chart coordinates for given layout\n  */\n  function calculateLayout(components, data, demux) {\n    var overall_layout = {top: [], right: [], bottom: [], left: []};\n    components.forEach(function(component) {\n      if (component.skip_layout || !component.getLayout)\n        return;\n\n      var layout = component.getLayout(demux(component.id, data));\n      var position = layout && layout.position;\n\n      if (!contains(['top', 'right', 'bottom', 'left'], position))\n        return;\n\n      overall_layout[position].push({\n        offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\n        component: component\n      });\n    });\n\n    return overall_layout;\n  }\n\n  /*\n    Apply calculated layout to charts and components\n  */\n  function applyLayout(layout, chart_position, width, height) {\n    layout.top.reduce(function(previous, part) {\n      var y = previous - part.offset;\n      setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n      return y;\n    }, chart_position.top);\n\n    layout.right.reduce(function(previous, part, index, parts) {\n      var previousPart = parts[index - 1] || {offset: 0};\n      var x = previous + previousPart.offset;\n      setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n      return x;\n    }, width - chart_position.right);\n\n    layout.bottom.reduce(function(previous, part, index, parts) {\n      var previousPart = parts[index - 1] || {offset: 0};\n      var y = previous + previousPart.offset;\n      setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n      return y;\n    }, height - chart_position.bottom);\n\n    layout.left.reduce(function(previous, part) {\n      var x = previous - part.offset;\n      setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n      return x;\n    }, chart_position.left);\n\n    function setLayout(component, x, y, options) {\n      if (component && isFunction(component.setLayout))\n        component.setLayout(x, y, options);\n    }\n  }\n\n  /**\r\n    Common base for creating components that includes helpers for positioning and layout.\r\n\r\n    ### Extending\r\n\r\n    `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n    Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n    - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n    - To layout a component within the chart, use `skip_layout: true` and the static `layer_type: 'chart'`\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Key', {\r\n      initialize: function() {\r\n        this.layer('Key', this.base, {\r\n          dataBind: function(data) {\r\n            return this.selectAll('text')\r\n              .data(data);\r\n          },\r\n          insert: function() {\r\n            return this.append('text');\r\n          },\r\n          events: {\r\n            merge: function() {\r\n              this.text(this.chart().keyText)\r\n            }\r\n          }\r\n        })\r\n      },\r\n\r\n      keyText: helpers.di(function(chart, d, i) {\r\n        return d.abbr + ' = ' + d.value;\r\n      })\r\n    });\r\n    ```\r\n    @class Component\r\n    @extends Base\r\n  */\r\n  var Component = Base.extend({\r\n    /**\r\n      Component's position relative to chart\r\n      (top, right, bottom, left)\r\n\r\n      @property position\r\n      @type String\r\n      @default 'top'\r\n    */\r\n    position: property({\r\n      default_value: 'top',\r\n      validate: function(value) {\r\n        return contains(['top', 'right', 'bottom', 'left'], value);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get/set the width of the component (in pixels)\r\n      (used in layout calculations)\r\n\r\n      @property width\r\n      @type Number\r\n      @default (actual width)\r\n    */\r\n    width: property({\r\n      default_value: function() {\r\n        return dimensions(this.base).width;\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get/set the height of the component (in pixels)\r\n      (used in layout calculations)\r\n\r\n      @property height\r\n      @type Number\r\n      @default (actual height)\r\n    */\r\n    height: property({\r\n      default_value: function() {\r\n        return dimensions(this.base).height;\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Margins (in pixels) around component\r\n\r\n      @property margins\r\n      @type Object\r\n      @default {top: 0, right: 0, bottom: 0, left: 0}\r\n    */\r\n    margins: property({\r\n      set: function(values) {\r\n        return {\r\n          override: getMargins(values)\r\n        };\r\n      },\r\n      default_value: getMargins()\r\n    }),\r\n\r\n    /**\r\n      Center the component vertically/horizontally (depending on position)\r\n\r\n      @property centered\r\n      @type Boolean\r\n      @default false\r\n    */\r\n    centered: property({\r\n      default_value: false\r\n    }),\r\n\r\n    /**\r\n      Skip component during layout calculations and positioning\r\n      (override in prototype of extension)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('NotLaidOut', {\r\n        skip_layout: true\r\n      });\r\n      ```\r\n      @attribute skip_layout\r\n      @type Boolean\r\n      @default false\r\n    */\r\n    skip_layout: false,\r\n\r\n    /**\r\n      Perform any layout preparation required before getLayout (default is draw)\r\n      (override in prototype of extension)\r\n\r\n      Note: By default, components are double-drawn;\r\n      for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n      This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('Custom', {\r\n        prepareLayout: function(data) {\r\n          // default: this.draw(data);\r\n          // so that getLayout has real dimensions\r\n\r\n          // -> custom preparation (if necessary)\r\n        }\r\n      })\r\n      ```\r\n      @method prepareLayout\r\n      @param {Any} data\r\n    */\r\n    prepareLayout: function(data) {\r\n      this.draw(data);\r\n    },\r\n\r\n    /**\r\n      Get layout details for use when laying out component\r\n      (override in prototype of extension)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('Custom', {\r\n        getLayout: function(data) {\r\n          var calculated_width, calculated_height;\r\n\r\n          // Perform custom calculations...\r\n\r\n          // Must return position, width, and height\r\n          return {\r\n            position: this.position(),\r\n            width: calculated_width,\r\n            height: calculated_height\r\n          };\r\n        }\r\n      });\r\n      ```\r\n      @method getLayout\r\n      @param {Any} data\r\n      @return {Object} position, width, and height for layout\r\n    */\r\n    getLayout: function(data) {\r\n      this.prepareLayout(data);\r\n\r\n      var margins = this.margins();\r\n      return {\r\n        position: this.position(),\r\n        width: this.width() + margins.left + margins.right,\r\n        height: this.height() + margins.top + margins.bottom\r\n      };\r\n    },\r\n\r\n    /**\r\n      Set layout of underlying base\r\n      (override in prototype of extension)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('Custom', {\r\n        setLayout: function(x, y, options) {\r\n          // Set layout of this.base...\r\n          // (the following is the default implementation)\r\n          var margins = this.margins();\r\n\r\n          // (handle this.centered())\r\n\r\n          this.base\r\n            .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n          this.height(options && options.height);\r\n          this.width(options && options.width);\r\n        }\r\n      });\r\n      ```\r\n      @method setLayout\r\n      @param {Number} x position of base top-left\r\n      @param {Number} y position of base top-left\r\n      @param {Object} options\r\n        @param {Object} [options.height] height of component in layout\r\n        @param {Object} [options.width] width of component in layout\r\n    */\r\n    setLayout: function(x, y, options) {\r\n      var margins = this.margins();\r\n\r\n      if (this.centered()) {\r\n        var actual_dimensions = dimensions(this.base);\r\n        if ('height' in options)\r\n          y += (options.height - actual_dimensions.height) / 2;\r\n        else\r\n          y += margins.top;\r\n\r\n        if ('width' in options)\r\n          x += (options.width - actual_dimensions.width) / 2;\r\n        else\r\n          x += margins.left;\r\n      }\r\n      else {\r\n        x += margins.left;\r\n        y += margins.top;\r\n      }\r\n\r\n      this.base.attr('transform', translate(x, y));\r\n      this.height(options && options.height);\r\n      this.width(options && options.width);\r\n    }\r\n  }, {\r\n    /**\r\n      Default z-index for component\r\n      (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('AboveChartLayers', {\r\n        // ...\r\n      }, {\r\n        z_index: 150\r\n      });\r\n      ```\r\n      @attribute z_index\r\n      @static\r\n      @type Number\r\n      @default 50\r\n    */\r\n    z_index: 50,\r\n\r\n    /**\r\n      Set to `'chart'` to use chart layer for component.\r\n      (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Component').extend('ChartComponent', {\r\n        // ...\r\n      }, {\r\n        layer_type: 'chart'\r\n      });\r\n      ```\r\n      @attribute layer_type\r\n      @static\r\n      @type String\r\n      @default 'component'\r\n    */\r\n    layer_type: 'component'\r\n  });\n\n  /**\r\n    Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n    ### Extending\r\n\r\n    Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n    - To adjust positioning, override `position`\r\n    - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Overlay').extend('ClosestPoints', {\r\n      // TODO\r\n    });\r\n    ```\r\n    @class Overlay\r\n    @extends Component\r\n  */\r\n  var Overlay = Component.extend({\r\n    initialize: function(options) {\r\n      Component.prototype.initialize.call(this, options);\r\n      this.base.attr('style', this.style());\r\n    },\r\n    skip_layout: true,\r\n\r\n    /**\r\n      Overlay's top-left x-position in px from left\r\n\r\n      @property x\r\n      @type Number\r\n      @default 0\r\n    */\r\n    x: property({\r\n      default_value: 0\r\n    }),\r\n\r\n    /**\r\n      Overlay's top-left y-position in px from top\r\n\r\n      @property y\r\n      @type Number\r\n      @default 0\r\n    */\r\n    y: property({\r\n      default_value: 0\r\n    }),\r\n\r\n    /**\r\n      Whether overlay is currently hidden\r\n\r\n      @property hidden\r\n      @type Boolean\r\n      @default true\r\n    */\r\n    hidden: property({\r\n      default_value: true\r\n    }),\r\n\r\n    /**\r\n      Overlays base styling\r\n      (default includes position and hidden)\r\n\r\n      @property style\r\n      @type String\r\n      @default set from x, y, and hidden\r\n    */\r\n    style: property({\r\n      default_value: function() {\r\n        var transform = translate(this.x() + 'px', this.y() + 'px');\r\n        var styles = {\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          '-webkit-transform': transform,\r\n          '-ms-transform': transform,\r\n          transform: transform\r\n        };\r\n\r\n        if (this.hidden())\r\n          styles.display = 'none';\r\n\r\n        return style(styles);\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Position overlay layer at given x,y coordinates\r\n\r\n      @example\r\n      ```js\r\n      // Absolute, x: 100, y: 50\r\n      overlay.position(100, 50);\r\n      overlay.position({x: 100, y: 50});\r\n\r\n      // Relative-to-chart, x: 50, y: 40\r\n      overlay.position({chart: {x: 50, y: 40}});\r\n\r\n      // Relative-to-container, x: 75, y: 50\r\n      overlay.position({container: {x: 75, y: 50}});\r\n      ```\r\n      @method position\r\n      @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n      @param {Number} [y] in px from top\r\n    */\r\n    // TODO This conflicts with component.position(), might need a rename\r\n    position: function(position, y) {\r\n      if (arguments.length > 1) {\r\n        position = {\r\n          x: position,\r\n          y: y\r\n        };\r\n      }\r\n      else {\r\n        if ('container' in position) {\r\n          position = this.getAbsolutePosition(position.container);\r\n        }\r\n        else if ('chart' in position) {\r\n          if (this.container) {\r\n            var chart = this.container.chartPosition();\r\n            position = this.getAbsolutePosition({\r\n              x: position.chart.x + chart.left,\r\n              y: position.chart.y + chart.top\r\n            });\r\n          }\r\n          else {\r\n            position = this.getAbsolutePosition(position.chart);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.x(position.x).y(position.y);\r\n      this.base.attr('style', this.style());\r\n    },\r\n\r\n    /**\r\n      Show overlay (with `display: block`)\r\n\r\n      @method show\r\n    */\r\n    show: function() {\r\n      this.hidden(false);\r\n      this.base.attr('style', this.style());\r\n    },\r\n\r\n    /**\r\n      Hide overlay (with `display: none`)\r\n\r\n      @method hide\r\n    */\r\n    hide: function() {\r\n      this.hidden(true);\r\n      this.base.attr('style', this.style());\r\n    },\r\n\r\n    /**\r\n      Get absolute position from container position\r\n      (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n      @method getAbsolutePosition\r\n      @param {Object} container_position ({x, y})\r\n      @return {Object} absolute {x, y} relative to container div\r\n    */\r\n    getAbsolutePosition: function(container_position) {\r\n      var container = this.container && this.container.container;\r\n\r\n      if (container && this.container.responsive()) {\r\n        var container_dimensions = dimensions(container);\r\n        var chart_width = this.container.width();\r\n        var chart_height = this.container.height();\r\n        var width_ratio = container_dimensions.width / chart_width;\r\n        var height_ratio = container_dimensions.height / chart_height;\r\n\r\n        return {\r\n          x: width_ratio * container_position.x,\r\n          y: height_ratio * container_position.y\r\n        };\r\n      }\r\n      else {\r\n        // Not attached so can't get actual dimensions\r\n        // fallback to container position\r\n        return container_position;\r\n      }\r\n    }\r\n  }, {\r\n    layer_type: 'overlay'\r\n  });\n\n  var default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n  /**\r\n    Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n    Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n    @example\r\n    ```html\r\n    <div id=\"#chart\"></div>\r\n    ```\r\n    ```js\r\n    var chart = d3.select('#chart').chart('Compose', function(data) {\r\n      // Process data...\r\n\r\n      // Create shared scales\r\n      var scales = {\r\n        x: {data: data.input, key: 'x', adjacent: true},\r\n        y: {data: data.input, key: 'y'},\r\n        y2: {data: data.output, key: 'y'}\r\n      };\r\n\r\n      // Setup charts and components\r\n      var charts = [\r\n        d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\r\n        d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\r\n      ];\r\n\r\n      var title = d3c.title('d3.compose');\r\n      var xAxis = d3c.axis('xAxis', {scale: scales.x});\r\n      var yAxis = d3c.axis('yAxis', {scale: scales.y});\r\n      var y2Axis = d3c.axis('y2Axis', {scale: scales.y2});\r\n\r\n      // Layout charts and components\r\n      return [\r\n        title,\r\n        [yAxis, d3c.layered(charts), y2Axis],\r\n        xAxis\r\n      ];;\r\n    });\r\n\r\n    chart.draw({input: [...], output: [...]});\r\n    ```\r\n    @class Compose\r\n    @extends Base\r\n  */\r\n  var Compose = Base.extend({\r\n    initialize: function(options) {\r\n      Base.prototype.initialize.call(this, options);\r\n\r\n      // Responsive svg based on the following approach (embedded + padding hack)\r\n      // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n      // (not enabled if selection is svg)\r\n      if (this.base.node().tagName != 'svg') {\r\n        this.container = this.base.append('div')\r\n          .attr('class', 'chart-compose-container');\r\n\r\n        this.base = this.container.append('svg')\r\n          .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n          .attr('version', '1.1')\r\n          .attr('class', 'chart-compose');\r\n      }\r\n      else {\r\n        this.base.classed('chart-compose', true);\r\n      }\r\n\r\n      this.attachHoverListeners();\r\n    },\r\n\r\n    transform: function(data) {\r\n      // Save raw data for redraw\r\n      this.rawData(data);\r\n      return Base.prototype.transform.call(this, data);\r\n    },\r\n\r\n    /**\r\n      Get/set the options `object/function` for the chart that takes `data` and\r\n      returns `[...layout]` for composing child charts and components.\r\n\r\n      @example\r\n      ```js\r\n      // get\r\n      chart.options();\r\n\r\n      // set (static)\r\n      chart.options([\r\n        // ...\r\n      ]);\r\n\r\n      // set (dynamic, takes data and returns options)\r\n      chart.options(function(data) {\r\n        // process data...\r\n\r\n        return [\r\n          // ...\r\n        ];\r\n      });\r\n\r\n      // Set directly from d3.chart creation\r\n      d3.select('#chart')\r\n        .chart('Compose', function(data) {\r\n          // ...\r\n        });\r\n      ```\r\n      @property options\r\n      @type Function|Object\r\n    */\r\n    options: property({\r\n      default_value: function() { return function() {}; },\r\n      set: function(options) {\r\n        // If options is plain object,\r\n        // return from generic options function\r\n        if (!isFunction(options)) {\r\n          return {\r\n            override: function() {\r\n              return options;\r\n            }\r\n          };\r\n        }\r\n      }\r\n    }),\r\n\r\n    // Store raw data for container before it has been transformed\r\n    rawData: property(),\r\n\r\n    /**\r\n      Margins between edge of container and components/chart\r\n\r\n      @example\r\n      ```js\r\n      chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n      ```\r\n      @property margins\r\n      @type Object {top, right, bottom, left}\r\n      @default {top: 10, right: 10, bottom: 10, left: 10}\r\n    */\r\n    margins: property({\r\n      default_value: default_compose_margins,\r\n      set: function(values) {\r\n        return {\r\n          override: getMargins(values, default_compose_margins)\r\n        };\r\n      }\r\n    }),\r\n\r\n    // Chart position\r\n    chartPosition: property({\r\n      default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n      set: function(values) {\r\n        return {\r\n          override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n        };\r\n      },\r\n      get: function(values) {\r\n        values.width = this._width() - values.right - values.left;\r\n        values.height = this._height() - values.bottom - values.top;\r\n\r\n        return values;\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Get/set overall width of chart\r\n\r\n      @property width\r\n      @type Number\r\n    */\r\n    width: property({\r\n      default_value: null\r\n    }),\r\n\r\n    /**\r\n      Get/set overall height of chart\r\n\r\n      @property height\r\n      @type Number\r\n    */\r\n    height: property({\r\n      default_value: null\r\n    }),\r\n\r\n    _width: function() {\r\n      var width = this.width();\r\n      return width != null ? width : Base.prototype.width.call(this);\r\n    },\r\n    _height: function() {\r\n      var height = this.height();\r\n      return height != null ? height : Base.prototype.height.call(this);\r\n    },\r\n\r\n    /**\r\n      Enable responsive container + viewBox so that chart scales to fill width\r\n      (only works if selection is not an svg)\r\n\r\n      @property responsive\r\n      @type Boolean\r\n      @default true\r\n    */\r\n    responsive: property({\r\n      default_value: true\r\n    }),\r\n\r\n    // Set svg viewBox attribute\r\n    viewBox: property({\r\n      default_value: function() {\r\n        if (this.responsive() && this.width() && this.height())\r\n          return '0 0 ' + this.width() + ' ' + this.height();\r\n        else\r\n          return null;\r\n      }\r\n    }),\r\n\r\n    // Set svg preserveAspectRatio attribute\r\n    preserveAspectRatio: property({\r\n      default_value: function() {\r\n        if (this.responsive())\r\n          return 'xMidYMid meet';\r\n        else\r\n          return null;\r\n      }\r\n    }),\r\n\r\n    // Set container style\r\n    containerStyle: property({\r\n      default_value: function() {\r\n        if (this.responsive()) {\r\n          var aspect_ratio = 1;\r\n          if (this.width() && this.height())\r\n            aspect_ratio = this.height() / this.width();\r\n\r\n          return style({\r\n            width: '100%',\r\n            height: 0,\r\n            'padding-top': (aspect_ratio * 100) + '%',\r\n            position: 'relative'\r\n          });\r\n        }\r\n        else {\r\n          return style({position: 'relative'});\r\n        }\r\n      }\r\n    }),\r\n\r\n    // Set base style\r\n    baseStyle: property({\r\n      default_value: function() {\r\n        if (this.responsive() && this.container) {\r\n          return style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0\r\n          });\r\n        }\r\n        else {\r\n          return null;\r\n        }\r\n      }\r\n    }),\r\n\r\n    /**\r\n      Set charts from options or get chart instances.\r\n      Each chart should use a unique key so that updates are passed to the existing chart\r\n      (otherwise they are recreated on update).\r\n      The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n      @example\r\n      ```js\r\n      chart.charts([\r\n        {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n        {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n      ]);\r\n      ```\r\n      @property charts\r\n      @type Array\r\n    */\r\n    charts: property({\r\n      set: function(chart_options, charts) {\r\n        // Store actual charts rather than options\r\n        return {\r\n          override: this._attachItems(chart_options, charts, this)\r\n        };\r\n      },\r\n      default_value: []\r\n    }),\r\n\r\n    /**\r\n      Set components from options or get components instances.\r\n      Each component should use a unique key so that updates are passed to the existing chart\r\n      (otherwise they are recreated on update).\r\n      The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n      @example\r\n      ```js\r\n      chart.components([\r\n        {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n        {id: 'title', type: 'Title'} // options to pass to Title component\r\n      ])\r\n      ```\r\n      @property components\r\n      @type Array\r\n    */\r\n    components: property({\r\n      set: function(component_options, components) {\r\n        // Store actual components rather than options\r\n        return {\r\n          override: this._attachItems(component_options, components, this)\r\n        };\r\n      },\r\n      default_value: []\r\n    }),\r\n\r\n    /**\r\n      Delay start of transition by specified milliseconds.\r\n      (applied to all charts and components as default)\r\n\r\n      @property delay\r\n      @type Number|Function\r\n      @default d3 default: 0\r\n    */\r\n    delay: property(),\r\n\r\n    /**\r\n      Transition duration in milliseconds.\r\n      (applied to all charts and components as default)\r\n\r\n      @property duration\r\n      @type Number|Function\r\n      @default d3 default: 250ms\r\n    */\r\n    duration: property(),\r\n\r\n    /**\r\n      Transition ease function.\r\n      (applied to all charts and components as default)\r\n\r\n      - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n      - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n      @property ease\r\n      @type String|Function\r\n      @default d3 default: 'cubic-in-out'\r\n    */\r\n    ease: property(),\r\n\r\n    /**\r\n      Draw chart with given data\r\n\r\n      @example\r\n      ```js\r\n      var chart = d3.select('#chart')\r\n        .chart('Compose', function(data) {\r\n          // ...\r\n        });\r\n\r\n      chart.draw([1, 2, 3]);\r\n\r\n      chart.draw({values: [1, 2, 3]});\r\n\r\n      chart.draw([\r\n        {values: [1, 2, 3]},\r\n        {values: [4, 5, 6]}\r\n      ]);\r\n      ```\r\n      @method draw\r\n      @param {Any} data\r\n    */\r\n    draw: function(data) {\r\n      var config = this._prepareConfig(this.options(), data);\r\n      if (!config)\r\n        config = {data: {_charts: {}, _components: {}}, layout: [], charts: [], components: []};\r\n\r\n      // Set charts and components from config\r\n      this.charts(config.charts);\r\n      this.components(config.components);\r\n\r\n      // Add config data\r\n      data = {\r\n        original: data,\r\n        config: config.data\r\n      };\r\n      this.data(data);\r\n\r\n      this._setDimensions();\r\n\r\n      // Layout components\r\n      this.layout(config.layout, data);\r\n\r\n      // Full draw now that everything has been laid out\r\n      d3.chart().prototype.draw.call(this, data);\r\n    },\r\n\r\n    /**\r\n      Redraw chart with current data\r\n\r\n      @method redraw\r\n    */\r\n    redraw: function() {\r\n      if (this.rawData())\r\n        this.draw(this.rawData().original);\r\n    },\r\n\r\n    demux: function(name, data) {\r\n      if (!data || !data.config || !data.original)\r\n        return data;\r\n\r\n      if (findById(this.charts(), name) && data.config._charts[name])\r\n        return data.config._charts[name];\r\n      else if (findById(this.components(), name) && data.config._components[name])\r\n        return data.config._components[name];\r\n      else\r\n        return data.original;\r\n    },\r\n\r\n    // Create chart layer (for laying out charts)\r\n    createChartLayer: function(options) {\r\n      return this.base.append('g')\r\n        .attr('class', 'chart-layer')\r\n        .attr('data-zIndex', options && options.z_index);\r\n    },\r\n\r\n    // Create component layer\r\n    createComponentLayer: function(options) {\r\n      return this.base.append('g')\r\n        .attr('class', 'chart-component-layer')\r\n        .attr('data-zIndex', options && options.z_index);\r\n    },\r\n\r\n    // Create overlay layer\r\n    createOverlayLayer: function() {\r\n      if (!this.container)\r\n        throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n      return this.container.append('div')\r\n        .attr('class', 'chart-overlay-layer');\r\n    },\r\n\r\n    // Layout components and charts for given data\r\n    layout: function(layout, data) {\r\n      // 1. Place chart layers\r\n      this._positionChartLayers();\r\n\r\n      // 2. Extract layout from components\r\n      layout = this._extractLayout(data);\r\n\r\n      // 3. Set chart position from layout\r\n      var chart_position = extend({}, this.margins());\r\n      objectEach(layout, function(parts, key) {\r\n        parts.forEach(function(part) {\r\n          chart_position[key] += part.offset || 0;\r\n        });\r\n      });\r\n      this.chartPosition(chart_position);\r\n\r\n      // 4. Position layers with layout\r\n      this.positionLayers(layout);\r\n    },\r\n\r\n    attachHoverListeners: function() {\r\n      // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n      // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n      var trigger = this.trigger.bind(this);\r\n      var chartPosition = this.chartPosition.bind(this);\r\n      var container = this.container || this.base;\r\n      var base = this.base.node();\r\n      var chart_position, bounds, was_inside;\r\n\r\n      container.on('mouseenter', function() {\r\n        // Calculate chart position and bounds on enter and cache during move\r\n        chart_position = chartPosition();\r\n        bounds = getBounds();\r\n\r\n        was_inside = inside(bounds);\r\n        if (was_inside)\r\n          enter();\r\n      });\r\n      container.on('mousemove', function() {\r\n        // Mousemove may fire before mouseenter in IE\r\n        if (!chart_position || !bounds) {\r\n          chart_position = chartPosition();\r\n          bounds = getBounds();\r\n        }\r\n\r\n        var is_inside = inside(bounds);\r\n        if (was_inside && is_inside)\r\n          move();\r\n        else if (was_inside)\r\n          leave();\r\n        else if (is_inside)\r\n          enter();\r\n\r\n        was_inside = is_inside;\r\n      });\r\n      container.on('mouseleave', function() {\r\n        if (was_inside) {\r\n          was_inside = false;\r\n          leave();\r\n        }\r\n      });\r\n\r\n      function inside() {\r\n        var mouse = d3.mouse(document.documentElement);\r\n        return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n      }\r\n      function enter() {\r\n        trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n      }\r\n      function move() {\r\n        trigger('mousemove', translateToXY(d3.mouse(base)));\r\n      }\r\n      function leave() {\r\n        trigger('mouseleave');\r\n      }\r\n\r\n      function translateToXY(coordinates) {\r\n        var x = coordinates[0];\r\n        var y = coordinates[1];\r\n        var chart_x = x - chart_position.left;\r\n        var chart_y = y - chart_position.top;\r\n\r\n        // Set at chart bounds if outside of chart\r\n        if (x > (chart_position.left + chart_position.width))\r\n          chart_x = chart_position.width;\r\n        else if (x < chart_position.left)\r\n          chart_x = 0;\r\n\r\n        if (y > (chart_position.top + chart_position.height))\r\n          chart_y = chart_position.height;\r\n        else if (y < chart_position.top)\r\n          chart_y = 0;\r\n\r\n        return {\r\n          container: {x: x, y: y},\r\n          chart: {x: chart_x, y: chart_y}\r\n        };\r\n      }\r\n\r\n      function getBounds() {\r\n        var scroll_y = 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop;\r\n\r\n        bounds = extend({}, base.getBoundingClientRect());\r\n        bounds.top += scroll_y;\r\n        bounds.bottom += scroll_y;\r\n\r\n        return bounds;\r\n      }\r\n    },\r\n\r\n    // Attach chart/component child item with id\r\n    attach: function(id, item) {\r\n      item.id = id;\r\n      item.base.attr('data-id', id);\r\n      item.container = this;\r\n\r\n      Base.prototype.attach.call(this, id, item);\r\n\r\n      if (item && isFunction(item.trigger))\r\n        item.trigger('attach');\r\n    },\r\n\r\n    // Detach chart/component child item by id\r\n    detach: function(id, item) {\r\n      item.base.remove();\r\n\r\n      delete this._attached[id];\r\n\r\n      if (item && isFunction(item.trigger))\r\n        item.trigger('detach');\r\n    },\r\n\r\n    // Position chart and component layers\r\n    positionLayers: function(layout) {\r\n      this._positionChartLayers();\r\n      this._positionComponents(layout);\r\n      this._positionByZIndex();\r\n    },\r\n\r\n    //\r\n    // Internal\r\n    //\r\n\r\n    _setDimensions: function() {\r\n      // Set container and svg dimensions\r\n      // (if original selection is svg, no container and skip responsiveness)\r\n      if (this.container) {\r\n        this.container\r\n          .attr('style', this.containerStyle());\r\n      }\r\n\r\n      this.base\r\n        .attr('viewBox', this.viewBox())\r\n        .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n        .attr('style', this.baseStyle())\r\n        .attr('width', this.responsive() ? null : this.width())\r\n        .attr('height', this.responsive() ? null : this.height());\r\n    },\r\n\r\n    _attachItems: function(items, container, context) {\r\n      items = items || [];\r\n      container = container || [];\r\n\r\n      // Remove charts that are no longer needed\r\n      var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n      remove_ids.forEach(function(remove_id) {\r\n        context.detach(remove_id, findById(container, remove_id));\r\n      });\r\n\r\n      // Create or update charts\r\n      return items.map(function(options) {\r\n        // TODO May not have id, might need to auto-generate\r\n        // (might be during another step)\r\n        var id = options.id;\r\n        var item = findById(container, id);\r\n\r\n        if (options instanceof d3.chart()) {\r\n          // If chart instance, replace with instance\r\n          if (item)\r\n            context.detach(id, item);\r\n\r\n          context.attach(id, options);\r\n          return options;\r\n        }\r\n        else {\r\n          // TEMP Changing position has nasty side effects, disable for now\r\n          var changed_position = item && !(item instanceof Overlay) && item.position && options.position && item.position() != options.position;\r\n\r\n          if (item && (item.type != options.type || changed_position)) {\r\n            // If chart type has changed, detach and re-create\r\n            context.detach(id, item);\r\n            item = undefined;\r\n          }\r\n\r\n          if (!item) {\r\n            var Item = d3.chart(options.type);\r\n\r\n            if (!Item)\r\n              throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n            var layer_options = {z_index: Item.z_index || 0};\r\n            var createLayer = {\r\n              'chart': 'createChartLayer',\r\n              'component': 'createComponentLayer',\r\n              'overlay': 'createOverlayLayer'\r\n            }[Item.layer_type];\r\n\r\n            if (!createLayer)\r\n              throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n            var base = context[createLayer](layer_options);\r\n\r\n            item = new Item(base, options);\r\n            item.type = options.type;\r\n\r\n            context.attach(id, item);\r\n          }\r\n          else {\r\n            item.options(options);\r\n          }\r\n\r\n          return item;\r\n        }\r\n      });\r\n    },\r\n\r\n    _prepareConfig: function(options, data) {\r\n      return extractLayout(options(data));\r\n    },\r\n\r\n    _positionChartLayers: function() {\r\n      var position = this.chartPosition();\r\n      this.base.selectAll('.chart-layer')\r\n        .attr('transform', translate(position.left, position.top))\r\n        .attr('width', position.width)\r\n        .attr('height', position.height);\r\n    },\r\n\r\n    _positionComponents: function(layout) {\r\n      var chart_position = this.chartPosition();\r\n      var width = this._width();\r\n      var height = this._height();\r\n\r\n      applyLayout(layout, chart_position, width, height);\r\n    },\r\n\r\n    _positionByZIndex: function() {\r\n      var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n      // Sort by z-index\r\n      function setZIndex(layer) {\r\n        return {\r\n          layer: layer,\r\n          zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n        };\r\n      }\r\n      function sortZIndex(a, b) {\r\n        if (a.zIndex < b.zIndex)\r\n          return -1;\r\n        else if (a.zIndex > b.zIndex)\r\n          return 1;\r\n        else\r\n          return 0;\r\n      }\r\n      function getLayer(wrapped) {\r\n        return wrapped.layer;\r\n      }\r\n\r\n      layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n      // Move layers to z-index order\r\n      layers.forEach(function(layer) {\r\n        if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n          layer.parentNode.appendChild(layer);\r\n      });\r\n    },\r\n\r\n    _extractLayout: function(data) {\r\n      return calculateLayout(this.components(), data, this.demux.bind(this));\r\n    }\r\n  });\r\n\r\n  // TODO Find better place for this\r\n  function layered(items) {\r\n    if (!Array.isArray(items))\r\n      items = Array.prototype.slice.call(arguments);\r\n\r\n    return {_layered: true, items: items};\r\n  }\r\n\r\n  function findById(items, id) {\r\n    return find(items, function(item) {\r\n      return item.id == id;\r\n    });\r\n  }\n\n  /**\r\n    Common base for creating charts.\r\n    Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n    ### Extending\r\n\r\n    To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n    and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n    and `d3.compose.helpers.property` when creating your chart.\r\n\r\n    @example\r\n    ```js\r\n    var helpers = d3.compose.helpers;\r\n\r\n    d3.chart('Chart').extend('Pie', {\r\n      initialize: function() {\r\n        // same as d3.chart\r\n      },\r\n      transform: function(data) {\r\n        // same as d3.chart\r\n      },\r\n\r\n      color: helpers.di(function(chart, d, i) {\r\n        // \"di\" function with parent chart injected (\"this\" = element)\r\n      }),\r\n\r\n      centered: helpers.property({\r\n        default_value: true\r\n        // can be automatically set from options object\r\n      })\r\n    });\r\n    ```\r\n    @class Chart\r\n    @extends Base\r\n  */\r\n  var Chart$1 = Base.extend({}, {\r\n    /**\r\n      Default z-index for chart\r\n      (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n      @example\r\n      ```js\r\n      d3.chart('Chart').extend('BelowComponentLayers', {\r\n        // ...\r\n      }, {\r\n        z_index: 40\r\n      });\r\n      ```\r\n      @attribute z_index\r\n      @static\r\n      @type Number\r\n      @default 100\r\n    */\r\n    z_index: 100,\r\n    layer_type: 'chart'\r\n  });\n\n  // Export charts/components to d3.chart\r\n  utils.extend(d3.chart(), {\r\n    Base: Base,\r\n    Chart: Chart$1,\r\n    Component: Component,\r\n    Overlay: Overlay,\r\n    Compose: Compose\r\n  });\r\n\r\n  var d3c = d3.compose = {\r\n    VERSION: '0.15.10',\r\n    utils: utils,\r\n    helpers: helpers,\r\n    Base: Base,\r\n    Chart: Chart$1,\r\n    Component: Component,\r\n    Overlay: Overlay,\r\n    Compose: Compose,\r\n    layered: layered\r\n  };\n\n  return d3c;\n\n}));","// Many utils inlined from Underscore.js\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\nexport var slice = Array.prototype.slice;\nexport var toString = Object.prototype.toString;\n\nfunction _extend(target, extensions, undefined_only) {\n  for (var i = 0, length = extensions.length; i < length; i++) {\n    for (var key in extensions[i]) {\n      if (!undefined_only || target[key] === void 0)\n        target[key] = extensions[i][key];\n    }\n  }\n\n  return target;\n}\n\nexport function contains(arr, item) {\n  return arr.indexOf(item) >= 0;\n}\n\nexport function compact(arr) {\n  return arr.filter(function(item) {\n    return item;\n  });\n}\n\nexport function difference(a, b) {\n  return a.filter(function(value) {\n    return b.indexOf(value) < 0;\n  });\n}\n\nexport function defaults(target) {\n  return _extend(target, slice.call(arguments, 1), true);\n}\n\nexport function extend(target) {\n  return _extend(target, slice.call(arguments, 1));\n}\n\nexport function flatten(arr) {\n  // Assumes all items in arr are arrays and only flattens one level\n  return arr.reduce(function(memo, item) {\n    return memo.concat(item);\n  }, []);\n}\n\nexport function find(arr, fn, context) {\n  if (!arr) return;\n  for (var i = 0, length = arr.length; i < length; i++) {\n    if (fn.call(context, arr[i], i, arr))\n      return arr[i];\n  }\n}\n\nexport function first(arr, n) {\n  if (arr == null) return void 0;\n  if (n == null) return arr[0];\n  return Array.prototype.slice.call(arr, 0, n);\n}\n\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\nexport function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || type === 'object' && !!obj;\n}\nexport function isNumber(obj) {\n  return toString.call(obj) === '[object Number]';\n}\nexport function isString(obj) {\n  return toString.call(obj) === '[object String]';\n}\nexport function isUndefined(obj) {\n  return obj === void 0;\n}\n\nexport var isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport function objectEach(obj, fn, context) {\n  if (!obj) return;\n  var keys = Object.keys(obj);\n  for (var i = 0, length = keys.length; i < length; i++) {\n    fn.call(context, obj[keys[i]], keys[i], obj);\n  }\n}\n\nexport function objectFind(obj, fn, context) {\n  if (!obj) return;\n  var keys = Object.keys(obj);\n  for (var i = 0, length = keys.length; i < length; i++) {\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\n      return obj[keys[i]];\n  }\n}\n\nexport function pluck(objs, key) {\n  if (!objs) return [];\n  return objs.map(function(obj) {\n    return obj[key];\n  });\n}\n\nexport function uniq(arr) {\n  var result = [];\n  for (var i = 0, length = arr.length; i < length; i++) {\n    if (result.indexOf(arr[i]) < 0)\n      result.push(arr[i]);\n  }\n  return result;\n}\n\nexport function inherits(Child, Parent) {\n  Child.prototype = Object.create(Parent.prototype, {\n    constructor: {\n      value: Child,\n      enumerable: false,\n      writeable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(Child, Parent);\n  }\n  else {\n    Child.__proto__ = Parent; //eslint-disable-line no-proto\n\n    // __proto__ isn't supported in IE,\n    // use one-time copy of static properties to approximate\n    defaults(Child, Parent);\n  }\n}\n\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\n//\n// @method valueOrDefault\n// @param {Any} [value]\n// @param {Any} default_value\n// @return {Any}\nexport function valueOrDefault(value, default_value) {\n  return !isUndefined(value) ? value : default_value;\n}\n\nvar utils = {\n  slice: slice,\n  toString: toString,\n  contains: contains,\n  compact: compact,\n  difference: difference,\n  defaults: defaults,\n  extend: extend,\n  flatten: flatten,\n  find: find,\n  first: first,\n  isBoolean: isBoolean,\n  isFunction: isFunction,\n  isObject: isObject,\n  isNumber: isNumber,\n  isString: isString,\n  isUndefined: isUndefined,\n  objectEach: objectEach,\n  objectFind: objectFind,\n  pluck: pluck,\n  uniq: uniq,\n  inherits: inherits,\n  valueOrDefault: valueOrDefault\n};\nexport default utils;\n","import {\n  isFunction,\n  isUndefined,\n  valueOrDefault\n} from '../utils';\nvar unique_index = 0;\n\n/**\n  Helper for creating properties for charts/components\n\n  @example\n  ```javascript\n  var Custom = d3.chart('Chart').extend('Custom', {\n    // Create property that's stored internally as 'simple'\n    simple: property()\n  });\n  var custom; // = new Custom(...);\n\n  // set\n  custom.simple('Howdy');\n\n  // get\n  console.log(custom.simple()); // -> 'Howdy'\n\n  // Advanced\n  // --------\n  // Default values:\n  Custom.prototype.message = property({\n    default_value: 'Howdy!'\n  });\n\n  console.log(custom.message()); // -> 'Howdy!'\n  custom.message('Goodbye');\n  console.log(custom.message()); // -> 'Goodbye'\n\n  // Set to undefined to reset to default value\n  custom.message(undefined);\n  console.log(custom.message()); // -> 'Howdy!'\n\n  // Computed default value:\n  Custom.property.computed = property({\n    default_value: function() {\n      // \"this\" = Custom instance\n      return this.message();\n    }\n  });\n\n  // Function default value:\n  // For function default_values, wrap in function to differentiate from computed\n  Custom.property.fn = property({\n    default_value: function() {\n      return function defaultFn() {};\n    }\n    // The following would be incorrectly evaluated\n    // default_value: function defaultFn() {}\n  })\n\n  // Custom getter:\n  Custom.prototype.exclaimed = property({\n    get: function(value) {\n      // Value is the underlying set value\n      return value + '!';\n    }\n  });\n\n  custom.exclaimed('Howdy');\n  console.log(custom.exclaimed()); // -> 'Howdy!'\n\n  // Custom setter:\n  Custom.prototype.feeling = property({\n    set: function(value, previous) {\n      if (value == 'Hate') {\n        // To override value, return Object with override specified\n        return {\n          override: 'Love',\n\n          // To do something after override, use after callback\n          after: function() {\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\n          }\n        };\n      }\n    }\n\n    custom.feeling('Hate'); // -> 'After: Love'\n    console.log(custom.feeling()); // -> 'Love'\n  });\n  ```\n  @method property\n  @for helpers\n  @param {Object} [options]\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`). If default value is a function, wrap in another function as default_value is evaluated by default.\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\n  @return {Function} `()`: get, `(value)`: set\n*/\nexport default function property(options) {\n  // DEPRECATED: name as first argument\n  if (arguments.length == 2) {\n    if (typeof console != 'undefined' && console.warn)\n      console.warn('DEPRECATED - name argument for property is no longer supported will be removed in the next version of d3.compose');\n    options = arguments[1];\n  }\n\n  options = options || {};\n  var id = 'property_' + unique_index++;\n\n  var property = function(value) {//eslint-disable-line no-shadow\n    var properties = this.__properties = this.__properties || {};\n    var context = valueOrDefault(property.context, this);\n\n    if (arguments.length)\n      return set.call(this);\n    else\n      return get.call(this);\n\n    function get() {\n      value = properties[id];\n\n      if (isUndefined(value)) {\n        // Use default value and unwrap if it's a function\n        value = property.default_value;\n        if (isFunction(value))\n          value = value.call(context);\n      }\n\n      return isFunction(options.get) ? options.get.call(context, value) : value;\n    }\n\n    function set() {\n      // Validate\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(context, value))\n        throw new Error('Invalid value for property: ' + JSON.stringify(value));\n\n      var previous = properties[id];\n      properties[id] = value;\n\n      if (isFunction(options.set) && !isUndefined(value)) {\n        var response = options.set.call(context, value, previous);\n\n        if (response && 'override' in response)\n          properties[id] = response.override;\n        if (response && isFunction(response.after))\n          response.after.call(context, properties[id]);\n      }\n\n      return this;\n    }\n  };\n\n  // For checking if function is a property\n  property.is_property = true;\n  property.id = id;\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\n  property.default_value = options.default_value;\n  property.context = options.context;\n  property.options = options;\n\n  return property;\n}\n","import {\n  objectEach,\n  slice\n} from '../utils';\n\n/**\n  Combine mixins with Parent super class for extension\n\n  @example\n  ```js\n  var a = {transform: function() {}, a: 1};\n  var b = {initialize: function() {}, b: 2};\n  var c = {c: 3};\n\n  var Custom = mixin(Chart, a, b, c).extend({\n    initialize: function(options) {\n      this._super.initialize.call(this, options);\n      // d\n    },\n    transform: function(data) {\n      data = this._super.transform.call(this, data);\n      // d\n    }\n  });\n\n  // initialize: Chart, b, d\n  // transform: Chart, a, d\n  ```\n  @method mixin\n  @for helpers\n  @param {Function} Parent\n  @param {...Object} ...mixins\n  @return {Function}\n*/\nexport default function mixin(Parent/*, ...mixins*/) {\n  var mixins = slice.call(arguments, 1);\n  var initializes = [];\n  var transforms = [];\n  var mixed = {};\n\n  mixins.forEach(function(mix) {\n    objectEach(mix, function(value, key) {\n      if (key == 'initialize')\n        initializes.push(value);\n      else if (key == 'transform')\n        transforms.push(value);\n      else\n        mixed[key] = value;\n    });\n  });\n\n  if (initializes.length) {\n    mixed.initialize = function initialize() {\n      var args = slice.call(arguments);\n      Parent.prototype.initialize.apply(this, args);\n      initializes.forEach(function(init) {\n        init.apply(this, args);\n      }, this);\n    };\n  }\n\n  if (transforms.length) {\n    mixed.transform = function transform(data) {\n      data = Parent.prototype.transform.call(this, data);\n      return transforms.reduce(function(memo, trans) {\n        return trans.call(this, memo);\n      }.bind(this), data);\n    };\n  }\n\n  return Parent.extend(mixed);\n}\n","import d3 from 'd3';\r\nimport { extend } from '../utils';\r\nimport { translate } from '../helpers';\r\n\r\n/**\r\n  Stack given array of elements vertically or horizontally\r\n\r\n  @example\r\n  ```js\r\n  // Stack all text elements vertically, from the top, with 0px padding\r\n  d3.selectAll('text').call(helpers.stack())\r\n\r\n  // Stack all text elements horizontally, from the right, with 5px padding\r\n  d3.selectAll('text').call(helpers.stack({\r\n    direction: 'horizontal',\r\n    origin: 'right',\r\n    padding: 5\r\n  }));\r\n  ```\r\n  @method stack\r\n  @for helpers\r\n  @param {Object} [options]\r\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\r\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\r\n  @param {Number} [options.padding=0] padding (in px) between elements\r\n  @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\r\n  @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\r\n  @return {Function}\r\n*/\r\nexport default function stack(options) {\r\n  options = extend({\r\n    direction: 'vertical',\r\n    origin: 'top',\r\n    padding: 0,\r\n    min_height: 0,\r\n    min_width: 0\r\n  }, options);\r\n\r\n  // Ensure valid origin based on direction\r\n  if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\r\n    options.origin = 'left';\r\n  else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\r\n    options.origin = 'top';\r\n\r\n  function padding(i) {\r\n    return i > 0 && options.padding ? options.padding : 0;\r\n  }\r\n\r\n  return function(elements) {\r\n    if (elements && elements.attr) {\r\n      var previous = 0;\r\n\r\n      elements.attr('transform', function(d, i) {\r\n        var element_dimensions = this.getBBox();\r\n        var spacing_width = d3.max([element_dimensions.width, options.min_width]);\r\n        var spacing_height = d3.max([element_dimensions.height, options.min_height]);\r\n        var x = 0;\r\n        var y = 0;\r\n        var next_position;\r\n\r\n        if (options.direction == 'horizontal') {\r\n          next_position = previous + spacing_width + padding(i);\r\n\r\n          if (options.origin == 'left')\r\n            x = previous + padding(i);\r\n          else\r\n            x = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n        else {\r\n          next_position = previous + spacing_height + padding(i);\r\n\r\n          if (options.origin == 'top')\r\n            y = previous + padding(i);\r\n          else\r\n            y = next_position;\r\n\r\n          previous = next_position;\r\n        }\r\n\r\n        return translate(x, y);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import d3 from 'd3';\nimport {\n  isFunction,\n  extend,\n  objectEach,\n  uniq,\n  contains,\n  flatten\n} from '../utils';\nimport {\n  min,\n  max,\n  isSeriesData\n} from '../helpers';\n\n/**\n  Create scale from options\n\n  @example\n  ```javascript\n  // Simple type, range, and domain\n  var scale = createScale({\n    type: 'linear',\n    domain: [0, 100],\n    range: [0, 500]\n  });\n\n  // Calculate domain for data\n  var scale = createScale({\n    type: 'log',\n    data: [{y: 1}, {y: 100}, {y: 2000}, {y: 5000}],\n    key: 'y'\n  });\n\n  // Scale is passed through\n  var original = d3.scale.linear();\n  var scale = createScale(original);\n  scale === original;\n\n  // Set other properties by passing in \"arguments\" array\n  var scale = createScale({\n    type: 'ordinal',\n    domain: ['a', 'b', 'c', 'd', 'e'],\n    rangeRoundBands: [[0, 100], 0.1, 0.05] // -> rangeRoundBands([0, 100], 0.1, 0.05)\n  });\n\n  // Use ordinal + adjacent for bar charts\n  var scale = createScale({\n    type: 'ordinal',\n    adjacent: true,\n    domain: ['a', 'b', 'c'],\n    series: 2 // Series count is required for adjacent if data isn't given\n  })\n  ```\n  @method createScale\n  @for helpers\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\n  @param {Array} [options.domain] Domain for scale\n  @param {Array} [options.range] Range for scale\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\n  @param {Function} [options.value] \"di\"-function for getting value for data\n  @param {String} [options.key] Data key to extract value\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\n\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\n  - Requires \"data\" or \"series\" options to determine number of series\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\n  @return {d3.Scale}\n*/\nexport default function createScale(options) {\n  options = options || {};\n\n  // If function, scale was passed in as options\n  if (isFunction(options))\n    return options;\n\n  // Create scale (using d3.time.scale() if type is 'time')\n  var scale;\n  if (options.type == 'time')\n    scale = d3.time.scale();\n  else if (d3.scale[options.type])\n    scale = d3.scale[options.type]();\n  else\n    scale = d3.scale.linear();\n\n  objectEach(options, function(value, key) {\n    if (scale[key]) {\n      // If option is standard property (domain or range), pass in directly\n      // otherwise, pass in as arguments\n      // (don't pass through internal options)\n      if (key == 'range' || key == 'domain')\n        scale[key](value);\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\n        scale[key].apply(scale, value);\n    }\n  });\n\n  if (!options.domain && options.data && (options.key || options.value))\n    scale = setDomain(scale, options);\n\n  // Add centered and adjacent extensions to ordinal\n  // (centered by default for ordinal)\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\n  if (options.type == 'ordinal' && (centered || options.adjacent))\n    scale = addCentered(scale, options);\n\n  // Add padding extension to ordinal\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\n    scale = addPadding(scale, options);\n\n  return scale;\n}\n\nfunction setDomain(scale, options) {\n  // Use value \"di\" or create for key\n  var getValue = options.value || function(d) {\n    return d[options.key];\n  };\n\n  // Enforce series data\n  var data = options.data;\n  if (!isSeriesData(data))\n    data = [{values: data}];\n\n  var domain;\n  if (options.type == 'ordinal') {\n    // Domain for ordinal is array of unique values\n    domain = uniq(flatten(data.map(function(series) {\n      if (series && series.values)\n        return series.values.map(getValue);\n    })));\n  }\n  else {\n    var min_value = min(data, getValue);\n\n    domain = [\n      min_value < 0 ? min_value : 0,\n      max(data, getValue)\n    ];\n  }\n\n  scale.domain(domain);\n  return scale;\n}\n\nfunction addCentered(original, options) {\n  // Get series count for adjacent\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\n\n  // TODO Look into removing closure\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\n    var context = function(value, series_index) {\n      var width = context.width();\n\n      if (!options.adjacent)\n        series_index = 0;\n\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\n    };\n    extend(context, original, {\n      width: function() {\n        var range_band = context.rangeBand && context.rangeBand();\n        var width = isFinite(range_band) ? range_band : 0;\n\n        if (options.adjacent)\n          width = width / series_count;\n\n        return width;\n      }\n    });\n\n    // TODO test copy() behavior\n\n    return context;\n  })(original, options, series_count);\n\n  return scale;\n}\n\nfunction addPadding(scale, options) {\n  var padding = options.padding != null ? options.padding : 0.1;\n\n  var original_range = scale.range;\n  scale.range = function(range) {\n    if (!arguments.length) return original_range();\n\n    scale.rangeBands(\n      range,\n      padding,\n      padding / 2\n    );\n  };\n\n  if (options.range)\n    scale.range(options.range);\n\n  // TODO test copy() behavior\n  return scale;\n}\n","import d3 from 'd3';\n\n/**\n  Helper for robustly determining width/height of given selector.\n  Checks dimensions from css, attributes, and bounding box.\n\n  @method dimensions\n  @for helpers\n  @param {d3.Selection} selection\n  @return {Object} `{width, height}`\n*/\nexport default function dimensions(selection) {\n  // 1. Get width/height set via css (only valid for svg and some other elements)\n  var client = clientDimensions(selection);\n\n  if (client.width && client.height)\n    return client;\n\n  // 2. Get width/height set via attribute\n  var attr = attrDimensions(selection);\n\n  if (isSVG(selection)) {\n    return {\n      width: client.width != null ? client.width : attr.width || 0,\n      height: client.height != null ? client.height : attr.height || 0\n    };\n  }\n  else {\n    var bbox = bboxDimensions(selection);\n\n    // Size set by css -> client (only valid for svg and some other elements)\n    // Size set by svg -> attr override or bounding_box\n    // -> Take maximum\n    return {\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\n    };\n  }\n}\n\nfunction clientDimensions(selection) {\n  var element = selection.node();\n\n  var client_dimensions = {\n    width: element && element.clientWidth,\n    height: element && element.clientHeight\n  };\n\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\n  //        calculate from css\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\n    var styles = window.getComputedStyle(element);\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\n  }\n\n  return client_dimensions;\n}\n\nfunction attrDimensions(selection) {\n  return {\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\n  };\n}\n\nfunction bboxDimensions(selection) {\n  var element = selection.node();\n  var bbox;\n  try {\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\n  }\n  catch(ex) {\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\n    // Ignore error and set to empty\n    bbox = {width: 0, height: 0};\n  }\n\n  return bbox;\n}\n\nfunction isSVG(selection) {\n  return selection.node().nodeName == 'svg';\n}\n","import d3 from 'd3';\nimport {\n  defaults,\n  extend,\n  first,\n  isNumber,\n  isObject,\n  objectEach\n} from './utils';\n\n/**\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\n\n  @class helpers\n*/\n\nimport property from './helpers/property';\nimport dimensions from './helpers/dimensions';\nimport createScale from './helpers/create-scale';\nimport mixin from './helpers/mixin';\nimport stack from './helpers/stack';\n\n/**\n  Translate by (x, y) distance\n\n  @example\n  ```javascript\n  translate(10, 15) == 'translate(10, 15)'\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\n  ```\n  @method translate\n  @param {Number|Object} [x] value or `{x, y}`\n  @param {Number} [y]\n  @return {String}\n*/\nexport function translate(x, y) {\n  if (isObject(x)) {\n    y = x.y;\n    x = x.x;\n  }\n\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\n}\n\n/**\n  Rotate by degrees, with optional center\n\n  @method rotate\n  @param {Number} degrees\n  @param {Object} [center = {x: 0, y: 0}]\n  @return {String}\n*/\nexport function rotate(degrees, center) {\n  var rotation = 'rotate(' + (degrees || 0);\n  if (center)\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\n  rotation += ')';\n\n  return rotation;\n}\n\n/**\n  Find vertical offset to vertically align text\n  (needed due to lack of `alignment-baseline` support in Firefox)\n\n  @example\n  ```js\n  var label = d3.select('text');\n\n  // Place label vertically so that origin is top-left\n  var offset = alignText(label);\n  label.attr('transform', translate(0, offset));\n\n  // Center label for line-height of 20px\n  var offset = alignText(label, 20);\n  label.attr('transform', translate(0, offset));\n  ```\n  @method alignText\n  @param {element} element\n  @param {Number} [line_height]\n  @return {Number} offset\n*/\nexport function alignText(element, line_height) {\n  var offset = 0;\n  try {\n    var height = element.getBBox().height;\n\n    var element_style = window.getComputedStyle(element);\n    var css_font_size = parseFloat(element_style['font-size']);\n    var css_line_height = parseFloat(element_style['line-height']);\n\n    // If line-height: normal, use estimate 1.14em\n    // (actual line-height depends on browser and font)\n    if (isNaN(css_line_height))\n      css_line_height = 1.15 * css_font_size;\n\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\n\n    // Add additional line-height, if specified\n    var height_adjustment = 0;\n    if (line_height && line_height > 0)\n      height_adjustment = (line_height - height) / 2;\n\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\n  }\n  catch (ex) {\n    // Errors can occur from getBBox and getComputedStyle\n    // No useful information for offset, do nothing\n  }\n\n  return offset;\n}\n\n/**\n  Determine if given data is likely series data\n\n  @method isSeriesData\n  @param {Array} data\n  @return {Boolean}\n*/\nexport function isSeriesData(data) {\n  var first_item = first(data);\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\n}\n\n/**\n  Get max for array/series by value di\n\n  @example\n  ```js\n  var data = [\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\n  ];\n  max(data, function(d, i) { return d.y; }); // -> 4\n  ```\n  @method max\n  @param {Array} data\n  @param {Function} getValue di function that returns value for given (d, i)\n  @return {Number}\n*/\nexport function max(data, getValue) {\n  var getMax = function(series_data) {\n    return series_data && d3.extent(series_data, getValue)[1];\n  };\n\n  if (isSeriesData(data)) {\n    return data.reduce(function(memo, series) {\n      if (series && Array.isArray(series.values)) {\n        var series_max = getMax(series.values);\n        return series_max > memo ? series_max : memo;\n      }\n      else {\n        return memo;\n      }\n    }, -Infinity);\n  }\n  else {\n    return getMax(data);\n  }\n}\n\n/**\n  Get min for array/series by value di\n\n  @example\n  ```js\n  var data = [\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\n  ];\n  min(data, function(d, i) { return d.x; }); // -> 0\n  ```\n  @method min\n  @param {Array} data\n  @param {Function} getValue di function that returns value for given (d, i)\n  @return {Number}\n*/\nexport function min(data, getValue) {\n  var getMin = function(series_data) {\n    return series_data && d3.extent(series_data, getValue)[0];\n  };\n\n  if (isSeriesData(data)) {\n    return data.reduce(function(memo, series) {\n      if (series && Array.isArray(series.values)) {\n        var series_min = getMin(series.values);\n        return series_min < memo ? series_min : memo;\n      }\n      else {\n        return memo;\n      }\n    }, Infinity);\n  }\n  else {\n    return getMin(data);\n  }\n}\n\n// TODO Look into converting to d3's internal style handling\n// Convert key,values to style string\n//\n// @example\n// ```js\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\n// ```\n// @method style\n// @param {Object} styles\n// @return {String}\nexport function style(styles) {\n  if (!styles)\n    return '';\n\n  var keyValues = [];\n  objectEach(styles, function(value, key) {\n    keyValues.push(key + ': ' + value);\n  });\n  styles = keyValues.join('; ');\n\n  return styles ? styles + ';' : '';\n}\n\n/**\n  Get formatted margins for varying input\n\n  @method getMargins\n  @example\n  ```js\n  getMargins(4);\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\n\n  getMargins({top: 20}, {top: 8, bottom: 8});\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\n  ```\n  @param {Number|Object} margins\n  @param {Object} default_margins\n  @return {Object}\n*/\nexport function getMargins(margins, default_margins) {\n  if (isNumber(margins))\n    return {top: margins, right: margins, bottom: margins, left: margins};\n  else\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\n}\n\n/**\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\n  Wrapped function uses standard d3 arguments and context.\n\n  Note: in order to pass proper context to di-functions called within di-function\n  use `.call(this, d, i)` (where \"this\" is d3 context)\n\n  @example\n  ```javascript\n  d3.chart('Base').extend('Custom', {\n    initialize: function() {\n      this.base.select('point')\n        .attr('cx', this.x);\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\n    },\n\n    x: di(function(chart, d, i) {\n      // \"this\" is standard d3 context: node\n      return chart.xScale()(chart.xValue.call(this, d, i));\n    })\n\n    // xScale, xValue...\n  });\n  ```\n  @method di\n  @param {Function} callback with `(chart, d, i)` arguments\n  @return {Function}\n*/\nexport function di(callback) {\n  // Create intermediate wrapping in case it's called without binding\n  var wrapped = function wrapped(d, i, j) {\n    return callback.call(this, undefined, d, i, j);\n  };\n  wrapped._is_di = true;\n  wrapped.original = callback;\n\n  return wrapped;\n}\n\nexport function bindDi(diFn, chart) {\n  return function wrapped(d, i, j) {\n    return (diFn.original || diFn).call(this, chart, d, i, j);\n  };\n}\n\n// Bind all di-functions found in chart\nexport function bindAllDi(chart) {\n  for (var key in chart) {\n    if (chart[key] && chart[key]._is_di)\n      chart[key] = bindDi(chart[key], chart);\n  }\n}\n\n\n/**\n  Get parent data for element (used to get parent series for data point)\n\n  @example\n  ```js\n  var data = [{\n    name: 'Input',\n    values: [1, 2, 3]\n  }];\n\n  d3.selectAll('g')\n    .data(data)\n    .enter().append('g')\n      .selectAll('text')\n        .data(function(d) { return d.values; })\n        .enter().append('text')\n          .text(function(d) {\n            var series_data = getParentData(this);\n            return series_data.name + ': ' + d;\n          });\n\n  // Input: 1, Input: 2, Input: 3\n  ```\n  @method getParentData\n  @param {Element} element\n  @return {Any}\n*/\nexport function getParentData(element) {\n  // @internal Shortcut if element + parentData needs to be mocked\n  if (element._parent_data)\n    return element._parent_data;\n\n  var parent = element && element.parentNode;\n  if (parent) {\n    var data = d3.select(parent).data();\n    return data && data[0];\n  }\n}\n\nexport function createHelper(type) {\n  return function(id, options) {\n    if (!options) {\n      options = id;\n      id = undefined;\n    }\n\n    return extend({id: id, type: type}, options);\n  };\n}\n\nvar helpers = {\n  property: property,\n  dimensions: dimensions,\n  translate: translate,\n  rotate: rotate,\n  alignText: alignText,\n  isSeriesData: isSeriesData,\n  max: max,\n  min: min,\n  createScale: createScale,\n  style: style,\n  getMargins: getMargins,\n  stack: stack,\n  di: di,\n  bindDi: bindDi,\n  bindAllDi: bindAllDi,\n  getParentData: getParentData,\n  mixin: mixin,\n  createHelper: createHelper\n};\n\nexport {\n  helpers as default,\n  property,\n  dimensions,\n  createScale,\n  mixin,\n  stack\n};\n","import d3 from 'd3';\r\nimport {\r\n  difference,\r\n  extend,\r\n  inherits,\r\n  isString,\r\n  objectEach\r\n} from './utils';\r\nimport {\r\n  property,\r\n  bindAllDi,\r\n  dimensions\r\n} from './helpers';\r\nvar Chart = d3.chart();\r\n\r\n// TEMP Clear namespace from mixins\r\n/**\r\n  @namespace\r\n*/\r\n\r\n/**\r\n  Shared functionality between all charts and components.\r\n\r\n  - Set properties automatically from `options`,\r\n  - Store fully transformed data\r\n  - Adds `\"before:draw\"` and `\"draw\"` events\r\n  - Standard `width` and `height` calculations\r\n\r\n  @class Base\r\n*/\r\nfunction Base(selection, options) {\r\n  // d3.chart() constructor without transform and initialize cascade\r\n  this.base = selection;\r\n  this._layers = {};\r\n  this._attached = {};\r\n  this._events = {};\r\n\r\n  // Bind all di-functions to this chart\r\n  bindAllDi(this);\r\n\r\n  // Set options (and properties with set_from_options)\r\n  if (options)\r\n    this.options(options);\r\n\r\n  // Initialize Chart (relies on explicitly calling super in initialize)\r\n  this.initialize(options);\r\n}\r\n\r\ninherits(Base, Chart);\r\n\r\nextend(Base.prototype, {\r\n  initialize: function() {},\r\n  transform: function(data) {\r\n    return data;\r\n  },\r\n  demux: function(name, data) { return data; },\r\n\r\n  // Add events to draw: \"before:draw\" and \"draw\"\r\n  draw: function(data) {\r\n    // Transform data (relies on explicitly calling super in transform)\r\n    data = this.transform(data);\r\n\r\n    // Store fully-transformed data for reference\r\n    this.data(data);\r\n\r\n    this.trigger('before:draw', data);\r\n\r\n    objectEach(this._layers, function(layer) {\r\n      layer.draw(data);\r\n    });\r\n    objectEach(this._attached, function(attachment, name) {\r\n      attachment.draw(this.demux(name, data));\r\n    }, this);\r\n\r\n    this.trigger('draw', data);\r\n  },\r\n\r\n  // Explicitly load d3.chart prototype\r\n  layer: Chart.prototype.layer,\r\n  unlayer: Chart.prototype.unlayer,\r\n  attach: Chart.prototype.attach,\r\n  on: Chart.prototype.on,\r\n  once: Chart.prototype.once,\r\n  off: Chart.prototype.off,\r\n  trigger: Chart.prototype.trigger,\r\n\r\n  /**\r\n    Store fully-transformed data for direct access from the chart\r\n\r\n    @property data\r\n    @type Any\r\n  */\r\n  data: property(),\r\n\r\n  /**\r\n    Overall options for chart/component, automatically setting any matching properties.\r\n\r\n    @example\r\n    ```js\r\n    var property = d3.compose.helpers.property;\r\n\r\n    d3.chart('Base').extend('HasProperties', {\r\n      a: property(),\r\n      b: property({\r\n        set: function(value) {\r\n          return {\r\n            override: value + '!'\r\n          };\r\n        }\r\n      })\r\n    });\r\n\r\n    var instance = d3.select('#chart')\r\n      .chart('HasProperties', {\r\n        a: 123,\r\n        b: 'Howdy',\r\n        c: true\r\n      });\r\n\r\n    // Equivalent to:\r\n    // d3.select(...)\r\n    //   .chart('HasProperties')\r\n    //   .options({...});\r\n\r\n    console.log(instance.a()); // -> 123\r\n    console.log(instance.b()); // -> Howdy!\r\n    console.log(instance.options().c); // -> true\r\n    ```\r\n    @property options\r\n    @type Object\r\n  */\r\n  options: property({\r\n    default_value: {},\r\n    set: function(options, previous) {\r\n      // Clear all unset options, except for data and options\r\n      if (previous) {\r\n        var unset = difference(Object.keys(previous), Object.keys(options));\r\n        unset.forEach(function(key) {\r\n          if (key != 'data' && key != 'options' && isProperty(this, key))\r\n            this[key](undefined);\r\n        }, this);\r\n      }\r\n\r\n      objectEach(options, function setFromOptions(value, key) {\r\n        if (isProperty(this, key))\r\n          this[key](value);\r\n      }, this);\r\n\r\n      function isProperty(chart, key) {\r\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get width of `this.base`.\r\n    (Does not include `set` for setting width of `this.base`)\r\n\r\n    @method width\r\n    @return {Number}\r\n  */\r\n  width: function width() {\r\n    return dimensions(this.base).width;\r\n  },\r\n\r\n  /**\r\n    Get height of `this.base`.\r\n    (Does not include `set` for setting height of `this.base`)\r\n\r\n    @method height\r\n    @return {Number}\r\n  */\r\n  height: function height() {\r\n    return dimensions(this.base).height;\r\n  }\r\n});\r\n\r\nBase.extend = function(proto_props, static_props) {\r\n  // name may be first parameter for d3.chart usage\r\n  var name;\r\n  if (isString(proto_props)) {\r\n    name = proto_props;\r\n    proto_props = static_props;\r\n    static_props = arguments[2];\r\n  }\r\n\r\n  var Parent = this;\r\n  var Child;\r\n\r\n  if (proto_props && proto_props.hasOwnProperty('constructor')) {\r\n    Child = proto_props.constructor;\r\n\r\n    // inherits sets constructor, remove from proto_props\r\n    proto_props = extend({}, proto_props);\r\n    delete proto_props.constructor;\r\n  }\r\n  else {\r\n    Child = function() { return Parent.apply(this, arguments); };\r\n  }\r\n\r\n  inherits(Child, Parent);\r\n  if (static_props)\r\n    extend(Child, static_props);\r\n  if (proto_props)\r\n    extend(Child.prototype, proto_props);\r\n\r\n  // If name is given, register with d3.chart\r\n  if (name)\r\n    Chart[name] = Child;\r\n\r\n  return Child;\r\n};\r\n\r\nexport default Base;\r\n","import {\n  contains,\n  defaults,\n  isFunction\n} from './utils';\n\n/*\n  Extract layout from the given options\n\n  @param {Array} options\n  @return {Object} {data, items, layout}\n*/\nexport function extractLayout(options) {\n  if (!options)\n    return;\n\n  var data = {\n    _charts: {},\n    _components: {}\n  };\n  var items = {};\n  var layout = [];\n  var charts = [];\n  var components = [];\n\n  // TEMP Idenfify charts from layered,\n  // eventually no distinction between charts and components\n  var found = {\n    row: false,\n    charts: false\n  };\n\n  // Components are added from inside-out\n  // so for position: top, position: left, use unshift\n  options.forEach(function(row, row_index) {\n    var row_components = [];\n\n    if (!Array.isArray(row))\n      row = [row];\n    if (row.length > 1)\n      found.row = true;\n\n    var row_layout = row.map(function(item, col_index) {\n      if (!item)\n        return;\n\n      if (item._layered) {\n        // Charts\n        found.charts = found.row = true;\n        var chart_ids = [];\n\n        item.items.forEach(function(chart, chart_index) {\n          if (!chart)\n            return;\n\n          chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\n\n          chart_ids.push(chart.id);\n          charts.push(chart);\n          items[chart.id] = chart;\n        });\n\n        return chart_ids;\n      }\n\n      var component = prepareComponent(item, row_index, col_index);\n      items[component.id] = component;\n\n      if (row.length > 1) {\n        if (!found.charts) {\n          // Left\n          setPosition(component, 'left');\n          row_components.unshift(component);\n        }\n        else {\n          // Right\n          setPosition(component, 'right');\n          row_components.push(component);\n        }\n      }\n      else {\n        if (!found.row) {\n          // Top\n          setPosition(component, 'top');\n          components.unshift(component);\n        }\n        else {\n          // Bottom\n          setPosition(component, 'bottom');\n          components.push(component);\n        }\n      }\n\n      return component.id;\n    });\n\n    if (row_components.length)\n      components = components.concat(row_components);\n\n    layout.push(row_layout);\n  });\n\n  charts.forEach(extractData('_charts'));\n  components.forEach(extractData('_components'));\n\n  return {\n    data: data,\n    items: items,\n    layout: layout,\n\n    charts: charts,\n    components: components\n  };\n\n  function prepareComponent(component, row_index, col_index) {\n    return defaults({}, component, {id: getId(row_index, col_index)});\n  }\n  function setPosition(component, position) {\n    if (component && isFunction(component.position))\n      component.position(position);\n    else\n      component.position = position;\n  }\n  function getId(row_index, col_index, layered_index) {\n    var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\n    if (layered_index != null)\n      id += '-' + (layered_index + 1);\n\n    return id;\n  }\n\n  function extractData(type) {\n    return function(item) {\n      if (item.data && !isFunction(item.data)) {\n        data[type][item.id] = item.data;\n        data[item.id] = item.data;\n        delete item.data;\n      }\n    };\n  }\n}\n\n/*\n  Calculate component and chart coordinates for given layout\n*/\nexport function calculateLayout(components, data, demux) {\n  var overall_layout = {top: [], right: [], bottom: [], left: []};\n  components.forEach(function(component) {\n    if (component.skip_layout || !component.getLayout)\n      return;\n\n    var layout = component.getLayout(demux(component.id, data));\n    var position = layout && layout.position;\n\n    if (!contains(['top', 'right', 'bottom', 'left'], position))\n      return;\n\n    overall_layout[position].push({\n      offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\n      component: component\n    });\n  });\n\n  return overall_layout;\n}\n\n/*\n  Apply calculated layout to charts and components\n*/\nexport function applyLayout(layout, chart_position, width, height) {\n  layout.top.reduce(function(previous, part) {\n    var y = previous - part.offset;\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n    return y;\n  }, chart_position.top);\n\n  layout.right.reduce(function(previous, part, index, parts) {\n    var previousPart = parts[index - 1] || {offset: 0};\n    var x = previous + previousPart.offset;\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n    return x;\n  }, width - chart_position.right);\n\n  layout.bottom.reduce(function(previous, part, index, parts) {\n    var previousPart = parts[index - 1] || {offset: 0};\n    var y = previous + previousPart.offset;\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n    return y;\n  }, height - chart_position.bottom);\n\n  layout.left.reduce(function(previous, part) {\n    var x = previous - part.offset;\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n    return x;\n  }, chart_position.left);\n\n  function setLayout(component, x, y, options) {\n    if (component && isFunction(component.setLayout))\n      component.setLayout(x, y, options);\n  }\n}\n","import d3 from 'd3';\r\nimport {\r\n  isFunction,\r\n  find,\r\n  defaults,\r\n  extend,\r\n  objectEach,\r\n  difference,\r\n  pluck\r\n} from './utils';\r\nimport {\r\n  getMargins,\r\n  property,\r\n  style,\r\n  translate\r\n} from './helpers';\r\nimport {\r\n  extractLayout,\r\n  calculateLayout,\r\n  applyLayout\r\n} from './layout';\r\nimport Base from './Base';\r\nimport Overlay from './Overlay';\r\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\r\n\r\n/**\r\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\r\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\r\n\r\n  @example\r\n  ```html\r\n  <div id=\"#chart\"></div>\r\n  ```\r\n  ```js\r\n  var chart = d3.select('#chart').chart('Compose', function(data) {\r\n    // Process data...\r\n\r\n    // Create shared scales\r\n    var scales = {\r\n      x: {data: data.input, key: 'x', adjacent: true},\r\n      y: {data: data.input, key: 'y'},\r\n      y2: {data: data.output, key: 'y'}\r\n    };\r\n\r\n    // Setup charts and components\r\n    var charts = [\r\n      d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\r\n      d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\r\n    ];\r\n\r\n    var title = d3c.title('d3.compose');\r\n    var xAxis = d3c.axis('xAxis', {scale: scales.x});\r\n    var yAxis = d3c.axis('yAxis', {scale: scales.y});\r\n    var y2Axis = d3c.axis('y2Axis', {scale: scales.y2});\r\n\r\n    // Layout charts and components\r\n    return [\r\n      title,\r\n      [yAxis, d3c.layered(charts), y2Axis],\r\n      xAxis\r\n    ];;\r\n  });\r\n\r\n  chart.draw({input: [...], output: [...]});\r\n  ```\r\n  @class Compose\r\n  @extends Base\r\n*/\r\nvar Compose = Base.extend({\r\n  initialize: function(options) {\r\n    Base.prototype.initialize.call(this, options);\r\n\r\n    // Responsive svg based on the following approach (embedded + padding hack)\r\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\r\n    // (not enabled if selection is svg)\r\n    if (this.base.node().tagName != 'svg') {\r\n      this.container = this.base.append('div')\r\n        .attr('class', 'chart-compose-container');\r\n\r\n      this.base = this.container.append('svg')\r\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\r\n        .attr('version', '1.1')\r\n        .attr('class', 'chart-compose');\r\n    }\r\n    else {\r\n      this.base.classed('chart-compose', true);\r\n    }\r\n\r\n    this.attachHoverListeners();\r\n  },\r\n\r\n  transform: function(data) {\r\n    // Save raw data for redraw\r\n    this.rawData(data);\r\n    return Base.prototype.transform.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Get/set the options `object/function` for the chart that takes `data` and\r\n    returns `[...layout]` for composing child charts and components.\r\n\r\n    @example\r\n    ```js\r\n    // get\r\n    chart.options();\r\n\r\n    // set (static)\r\n    chart.options([\r\n      // ...\r\n    ]);\r\n\r\n    // set (dynamic, takes data and returns options)\r\n    chart.options(function(data) {\r\n      // process data...\r\n\r\n      return [\r\n        // ...\r\n      ];\r\n    });\r\n\r\n    // Set directly from d3.chart creation\r\n    d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n    ```\r\n    @property options\r\n    @type Function|Object\r\n  */\r\n  options: property({\r\n    default_value: function() { return function() {}; },\r\n    set: function(options) {\r\n      // If options is plain object,\r\n      // return from generic options function\r\n      if (!isFunction(options)) {\r\n        return {\r\n          override: function() {\r\n            return options;\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Store raw data for container before it has been transformed\r\n  rawData: property(),\r\n\r\n  /**\r\n    Margins between edge of container and components/chart\r\n\r\n    @example\r\n    ```js\r\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\r\n    ```\r\n    @property margins\r\n    @type Object {top, right, bottom, left}\r\n    @default {top: 10, right: 10, bottom: 10, left: 10}\r\n  */\r\n  margins: property({\r\n    default_value: default_compose_margins,\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values, default_compose_margins)\r\n      };\r\n    }\r\n  }),\r\n\r\n  // Chart position\r\n  chartPosition: property({\r\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\r\n    set: function(values) {\r\n      return {\r\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\r\n      };\r\n    },\r\n    get: function(values) {\r\n      values.width = this._width() - values.right - values.left;\r\n      values.height = this._height() - values.bottom - values.top;\r\n\r\n      return values;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set overall width of chart\r\n\r\n    @property width\r\n    @type Number\r\n  */\r\n  width: property({\r\n    default_value: null\r\n  }),\r\n\r\n  /**\r\n    Get/set overall height of chart\r\n\r\n    @property height\r\n    @type Number\r\n  */\r\n  height: property({\r\n    default_value: null\r\n  }),\r\n\r\n  _width: function() {\r\n    var width = this.width();\r\n    return width != null ? width : Base.prototype.width.call(this);\r\n  },\r\n  _height: function() {\r\n    var height = this.height();\r\n    return height != null ? height : Base.prototype.height.call(this);\r\n  },\r\n\r\n  /**\r\n    Enable responsive container + viewBox so that chart scales to fill width\r\n    (only works if selection is not an svg)\r\n\r\n    @property responsive\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  responsive: property({\r\n    default_value: true\r\n  }),\r\n\r\n  // Set svg viewBox attribute\r\n  viewBox: property({\r\n    default_value: function() {\r\n      if (this.responsive() && this.width() && this.height())\r\n        return '0 0 ' + this.width() + ' ' + this.height();\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set svg preserveAspectRatio attribute\r\n  preserveAspectRatio: property({\r\n    default_value: function() {\r\n      if (this.responsive())\r\n        return 'xMidYMid meet';\r\n      else\r\n        return null;\r\n    }\r\n  }),\r\n\r\n  // Set container style\r\n  containerStyle: property({\r\n    default_value: function() {\r\n      if (this.responsive()) {\r\n        var aspect_ratio = 1;\r\n        if (this.width() && this.height())\r\n          aspect_ratio = this.height() / this.width();\r\n\r\n        return style({\r\n          width: '100%',\r\n          height: 0,\r\n          'padding-top': (aspect_ratio * 100) + '%',\r\n          position: 'relative'\r\n        });\r\n      }\r\n      else {\r\n        return style({position: 'relative'});\r\n      }\r\n    }\r\n  }),\r\n\r\n  // Set base style\r\n  baseStyle: property({\r\n    default_value: function() {\r\n      if (this.responsive() && this.container) {\r\n        return style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0\r\n        });\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Set charts from options or get chart instances.\r\n    Each chart should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\r\n\r\n    @example\r\n    ```js\r\n    chart.charts([\r\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\r\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\r\n    ]);\r\n    ```\r\n    @property charts\r\n    @type Array\r\n  */\r\n  charts: property({\r\n    set: function(chart_options, charts) {\r\n      // Store actual charts rather than options\r\n      return {\r\n        override: this._attachItems(chart_options, charts, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Set components from options or get components instances.\r\n    Each component should use a unique key so that updates are passed to the existing chart\r\n    (otherwise they are recreated on update).\r\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\r\n\r\n    @example\r\n    ```js\r\n    chart.components([\r\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\r\n      {id: 'title', type: 'Title'} // options to pass to Title component\r\n    ])\r\n    ```\r\n    @property components\r\n    @type Array\r\n  */\r\n  components: property({\r\n    set: function(component_options, components) {\r\n      // Store actual components rather than options\r\n      return {\r\n        override: this._attachItems(component_options, components, this)\r\n      };\r\n    },\r\n    default_value: []\r\n  }),\r\n\r\n  /**\r\n    Delay start of transition by specified milliseconds.\r\n    (applied to all charts and components as default)\r\n\r\n    @property delay\r\n    @type Number|Function\r\n    @default d3 default: 0\r\n  */\r\n  delay: property(),\r\n\r\n  /**\r\n    Transition duration in milliseconds.\r\n    (applied to all charts and components as default)\r\n\r\n    @property duration\r\n    @type Number|Function\r\n    @default d3 default: 250ms\r\n  */\r\n  duration: property(),\r\n\r\n  /**\r\n    Transition ease function.\r\n    (applied to all charts and components as default)\r\n\r\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\r\n    - Note: arguments to pass to `d3.ease` are not supported\r\n\r\n    @property ease\r\n    @type String|Function\r\n    @default d3 default: 'cubic-in-out'\r\n  */\r\n  ease: property(),\r\n\r\n  /**\r\n    Draw chart with given data\r\n\r\n    @example\r\n    ```js\r\n    var chart = d3.select('#chart')\r\n      .chart('Compose', function(data) {\r\n        // ...\r\n      });\r\n\r\n    chart.draw([1, 2, 3]);\r\n\r\n    chart.draw({values: [1, 2, 3]});\r\n\r\n    chart.draw([\r\n      {values: [1, 2, 3]},\r\n      {values: [4, 5, 6]}\r\n    ]);\r\n    ```\r\n    @method draw\r\n    @param {Any} data\r\n  */\r\n  draw: function(data) {\r\n    var config = this._prepareConfig(this.options(), data);\r\n    if (!config)\r\n      config = {data: {_charts: {}, _components: {}}, layout: [], charts: [], components: []};\r\n\r\n    // Set charts and components from config\r\n    this.charts(config.charts);\r\n    this.components(config.components);\r\n\r\n    // Add config data\r\n    data = {\r\n      original: data,\r\n      config: config.data\r\n    };\r\n    this.data(data);\r\n\r\n    this._setDimensions();\r\n\r\n    // Layout components\r\n    this.layout(config.layout, data);\r\n\r\n    // Full draw now that everything has been laid out\r\n    d3.chart().prototype.draw.call(this, data);\r\n  },\r\n\r\n  /**\r\n    Redraw chart with current data\r\n\r\n    @method redraw\r\n  */\r\n  redraw: function() {\r\n    if (this.rawData())\r\n      this.draw(this.rawData().original);\r\n  },\r\n\r\n  demux: function(name, data) {\r\n    if (!data || !data.config || !data.original)\r\n      return data;\r\n\r\n    if (findById(this.charts(), name) && data.config._charts[name])\r\n      return data.config._charts[name];\r\n    else if (findById(this.components(), name) && data.config._components[name])\r\n      return data.config._components[name];\r\n    else\r\n      return data.original;\r\n  },\r\n\r\n  // Create chart layer (for laying out charts)\r\n  createChartLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create component layer\r\n  createComponentLayer: function(options) {\r\n    return this.base.append('g')\r\n      .attr('class', 'chart-component-layer')\r\n      .attr('data-zIndex', options && options.z_index);\r\n  },\r\n\r\n  // Create overlay layer\r\n  createOverlayLayer: function() {\r\n    if (!this.container)\r\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\r\n\r\n    return this.container.append('div')\r\n      .attr('class', 'chart-overlay-layer');\r\n  },\r\n\r\n  // Layout components and charts for given data\r\n  layout: function(layout, data) {\r\n    // 1. Place chart layers\r\n    this._positionChartLayers();\r\n\r\n    // 2. Extract layout from components\r\n    layout = this._extractLayout(data);\r\n\r\n    // 3. Set chart position from layout\r\n    var chart_position = extend({}, this.margins());\r\n    objectEach(layout, function(parts, key) {\r\n      parts.forEach(function(part) {\r\n        chart_position[key] += part.offset || 0;\r\n      });\r\n    });\r\n    this.chartPosition(chart_position);\r\n\r\n    // 4. Position layers with layout\r\n    this.positionLayers(layout);\r\n  },\r\n\r\n  attachHoverListeners: function() {\r\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\r\n    // For non-responsive, bounding rectangle is container so calculations still apply\r\n\r\n    var trigger = this.trigger.bind(this);\r\n    var chartPosition = this.chartPosition.bind(this);\r\n    var container = this.container || this.base;\r\n    var base = this.base.node();\r\n    var chart_position, bounds, was_inside;\r\n\r\n    container.on('mouseenter', function() {\r\n      // Calculate chart position and bounds on enter and cache during move\r\n      chart_position = chartPosition();\r\n      bounds = getBounds();\r\n\r\n      was_inside = inside(bounds);\r\n      if (was_inside)\r\n        enter();\r\n    });\r\n    container.on('mousemove', function() {\r\n      // Mousemove may fire before mouseenter in IE\r\n      if (!chart_position || !bounds) {\r\n        chart_position = chartPosition();\r\n        bounds = getBounds();\r\n      }\r\n\r\n      var is_inside = inside(bounds);\r\n      if (was_inside && is_inside)\r\n        move();\r\n      else if (was_inside)\r\n        leave();\r\n      else if (is_inside)\r\n        enter();\r\n\r\n      was_inside = is_inside;\r\n    });\r\n    container.on('mouseleave', function() {\r\n      if (was_inside) {\r\n        was_inside = false;\r\n        leave();\r\n      }\r\n    });\r\n\r\n    function inside() {\r\n      var mouse = d3.mouse(document.documentElement);\r\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\r\n    }\r\n    function enter() {\r\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\r\n    }\r\n    function move() {\r\n      trigger('mousemove', translateToXY(d3.mouse(base)));\r\n    }\r\n    function leave() {\r\n      trigger('mouseleave');\r\n    }\r\n\r\n    function translateToXY(coordinates) {\r\n      var x = coordinates[0];\r\n      var y = coordinates[1];\r\n      var chart_x = x - chart_position.left;\r\n      var chart_y = y - chart_position.top;\r\n\r\n      // Set at chart bounds if outside of chart\r\n      if (x > (chart_position.left + chart_position.width))\r\n        chart_x = chart_position.width;\r\n      else if (x < chart_position.left)\r\n        chart_x = 0;\r\n\r\n      if (y > (chart_position.top + chart_position.height))\r\n        chart_y = chart_position.height;\r\n      else if (y < chart_position.top)\r\n        chart_y = 0;\r\n\r\n      return {\r\n        container: {x: x, y: y},\r\n        chart: {x: chart_x, y: chart_y}\r\n      };\r\n    }\r\n\r\n    function getBounds() {\r\n      var scroll_y = 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop;\r\n\r\n      bounds = extend({}, base.getBoundingClientRect());\r\n      bounds.top += scroll_y;\r\n      bounds.bottom += scroll_y;\r\n\r\n      return bounds;\r\n    }\r\n  },\r\n\r\n  // Attach chart/component child item with id\r\n  attach: function(id, item) {\r\n    item.id = id;\r\n    item.base.attr('data-id', id);\r\n    item.container = this;\r\n\r\n    Base.prototype.attach.call(this, id, item);\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('attach');\r\n  },\r\n\r\n  // Detach chart/component child item by id\r\n  detach: function(id, item) {\r\n    item.base.remove();\r\n\r\n    delete this._attached[id];\r\n\r\n    if (item && isFunction(item.trigger))\r\n      item.trigger('detach');\r\n  },\r\n\r\n  // Position chart and component layers\r\n  positionLayers: function(layout) {\r\n    this._positionChartLayers();\r\n    this._positionComponents(layout);\r\n    this._positionByZIndex();\r\n  },\r\n\r\n  //\r\n  // Internal\r\n  //\r\n\r\n  _setDimensions: function() {\r\n    // Set container and svg dimensions\r\n    // (if original selection is svg, no container and skip responsiveness)\r\n    if (this.container) {\r\n      this.container\r\n        .attr('style', this.containerStyle());\r\n    }\r\n\r\n    this.base\r\n      .attr('viewBox', this.viewBox())\r\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\r\n      .attr('style', this.baseStyle())\r\n      .attr('width', this.responsive() ? null : this.width())\r\n      .attr('height', this.responsive() ? null : this.height());\r\n  },\r\n\r\n  _attachItems: function(items, container, context) {\r\n    items = items || [];\r\n    container = container || [];\r\n\r\n    // Remove charts that are no longer needed\r\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\r\n    remove_ids.forEach(function(remove_id) {\r\n      context.detach(remove_id, findById(container, remove_id));\r\n    });\r\n\r\n    // Create or update charts\r\n    return items.map(function(options) {\r\n      // TODO May not have id, might need to auto-generate\r\n      // (might be during another step)\r\n      var id = options.id;\r\n      var item = findById(container, id);\r\n\r\n      if (options instanceof d3.chart()) {\r\n        // If chart instance, replace with instance\r\n        if (item)\r\n          context.detach(id, item);\r\n\r\n        context.attach(id, options);\r\n        return options;\r\n      }\r\n      else {\r\n        // TEMP Changing position has nasty side effects, disable for now\r\n        var changed_position = item && !(item instanceof Overlay) && item.position && options.position && item.position() != options.position;\r\n\r\n        if (item && (item.type != options.type || changed_position)) {\r\n          // If chart type has changed, detach and re-create\r\n          context.detach(id, item);\r\n          item = undefined;\r\n        }\r\n\r\n        if (!item) {\r\n          var Item = d3.chart(options.type);\r\n\r\n          if (!Item)\r\n            throw new Error('No registered d3.chart found for ' + options.type);\r\n\r\n          var layer_options = {z_index: Item.z_index || 0};\r\n          var createLayer = {\r\n            'chart': 'createChartLayer',\r\n            'component': 'createComponentLayer',\r\n            'overlay': 'createOverlayLayer'\r\n          }[Item.layer_type];\r\n\r\n          if (!createLayer)\r\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\r\n\r\n          var base = context[createLayer](layer_options);\r\n\r\n          item = new Item(base, options);\r\n          item.type = options.type;\r\n\r\n          context.attach(id, item);\r\n        }\r\n        else {\r\n          item.options(options);\r\n        }\r\n\r\n        return item;\r\n      }\r\n    });\r\n  },\r\n\r\n  _prepareConfig: function(options, data) {\r\n    return extractLayout(options(data));\r\n  },\r\n\r\n  _positionChartLayers: function() {\r\n    var position = this.chartPosition();\r\n    this.base.selectAll('.chart-layer')\r\n      .attr('transform', translate(position.left, position.top))\r\n      .attr('width', position.width)\r\n      .attr('height', position.height);\r\n  },\r\n\r\n  _positionComponents: function(layout) {\r\n    var chart_position = this.chartPosition();\r\n    var width = this._width();\r\n    var height = this._height();\r\n\r\n    applyLayout(layout, chart_position, width, height);\r\n  },\r\n\r\n  _positionByZIndex: function() {\r\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\r\n\r\n    // Sort by z-index\r\n    function setZIndex(layer) {\r\n      return {\r\n        layer: layer,\r\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\r\n      };\r\n    }\r\n    function sortZIndex(a, b) {\r\n      if (a.zIndex < b.zIndex)\r\n        return -1;\r\n      else if (a.zIndex > b.zIndex)\r\n        return 1;\r\n      else\r\n        return 0;\r\n    }\r\n    function getLayer(wrapped) {\r\n      return wrapped.layer;\r\n    }\r\n\r\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\r\n\r\n    // Move layers to z-index order\r\n    layers.forEach(function(layer) {\r\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\r\n        layer.parentNode.appendChild(layer);\r\n    });\r\n  },\r\n\r\n  _extractLayout: function(data) {\r\n    return calculateLayout(this.components(), data, this.demux.bind(this));\r\n  }\r\n});\r\n\r\n// TODO Find better place for this\r\nfunction layered(items) {\r\n  if (!Array.isArray(items))\r\n    items = Array.prototype.slice.call(arguments);\r\n\r\n  return {_layered: true, items: items};\r\n}\r\n\r\nfunction findById(items, id) {\r\n  return find(items, function(item) {\r\n    return item.id == id;\r\n  });\r\n}\r\n\r\nexport {\r\n  Compose as default,\r\n  layered\r\n};\r\n","import { contains } from './utils';\r\nimport {\r\n  dimensions,\r\n  getMargins,\r\n  property,\r\n  translate\r\n} from './helpers';\r\nimport Base from './Base';\r\n\r\n/**\r\n  Common base for creating components that includes helpers for positioning and layout.\r\n\r\n  ### Extending\r\n\r\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\r\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\r\n  - To layout a component within the chart, use `skip_layout: true` and the static `layer_type: 'chart'`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Component').extend('Key', {\r\n    initialize: function() {\r\n      this.layer('Key', this.base, {\r\n        dataBind: function(data) {\r\n          return this.selectAll('text')\r\n            .data(data);\r\n        },\r\n        insert: function() {\r\n          return this.append('text');\r\n        },\r\n        events: {\r\n          merge: function() {\r\n            this.text(this.chart().keyText)\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    keyText: helpers.di(function(chart, d, i) {\r\n      return d.abbr + ' = ' + d.value;\r\n    })\r\n  });\r\n  ```\r\n  @class Component\r\n  @extends Base\r\n*/\r\nvar Component = Base.extend({\r\n  /**\r\n    Component's position relative to chart\r\n    (top, right, bottom, left)\r\n\r\n    @property position\r\n    @type String\r\n    @default 'top'\r\n  */\r\n  position: property({\r\n    default_value: 'top',\r\n    validate: function(value) {\r\n      return contains(['top', 'right', 'bottom', 'left'], value);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the width of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property width\r\n    @type Number\r\n    @default (actual width)\r\n  */\r\n  width: property({\r\n    default_value: function() {\r\n      return dimensions(this.base).width;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Get/set the height of the component (in pixels)\r\n    (used in layout calculations)\r\n\r\n    @property height\r\n    @type Number\r\n    @default (actual height)\r\n  */\r\n  height: property({\r\n    default_value: function() {\r\n      return dimensions(this.base).height;\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Margins (in pixels) around component\r\n\r\n    @property margins\r\n    @type Object\r\n    @default {top: 0, right: 0, bottom: 0, left: 0}\r\n  */\r\n  margins: property({\r\n    set: function(values) {\r\n      return {\r\n        override: getMargins(values)\r\n      };\r\n    },\r\n    default_value: getMargins()\r\n  }),\r\n\r\n  /**\r\n    Center the component vertically/horizontally (depending on position)\r\n\r\n    @property centered\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  centered: property({\r\n    default_value: false\r\n  }),\r\n\r\n  /**\r\n    Skip component during layout calculations and positioning\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('NotLaidOut', {\r\n      skip_layout: true\r\n    });\r\n    ```\r\n    @attribute skip_layout\r\n    @type Boolean\r\n    @default false\r\n  */\r\n  skip_layout: false,\r\n\r\n  /**\r\n    Perform any layout preparation required before getLayout (default is draw)\r\n    (override in prototype of extension)\r\n\r\n    Note: By default, components are double-drawn;\r\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\r\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      prepareLayout: function(data) {\r\n        // default: this.draw(data);\r\n        // so that getLayout has real dimensions\r\n\r\n        // -> custom preparation (if necessary)\r\n      }\r\n    })\r\n    ```\r\n    @method prepareLayout\r\n    @param {Any} data\r\n  */\r\n  prepareLayout: function(data) {\r\n    this.draw(data);\r\n  },\r\n\r\n  /**\r\n    Get layout details for use when laying out component\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      getLayout: function(data) {\r\n        var calculated_width, calculated_height;\r\n\r\n        // Perform custom calculations...\r\n\r\n        // Must return position, width, and height\r\n        return {\r\n          position: this.position(),\r\n          width: calculated_width,\r\n          height: calculated_height\r\n        };\r\n      }\r\n    });\r\n    ```\r\n    @method getLayout\r\n    @param {Any} data\r\n    @return {Object} position, width, and height for layout\r\n  */\r\n  getLayout: function(data) {\r\n    this.prepareLayout(data);\r\n\r\n    var margins = this.margins();\r\n    return {\r\n      position: this.position(),\r\n      width: this.width() + margins.left + margins.right,\r\n      height: this.height() + margins.top + margins.bottom\r\n    };\r\n  },\r\n\r\n  /**\r\n    Set layout of underlying base\r\n    (override in prototype of extension)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('Custom', {\r\n      setLayout: function(x, y, options) {\r\n        // Set layout of this.base...\r\n        // (the following is the default implementation)\r\n        var margins = this.margins();\r\n\r\n        // (handle this.centered())\r\n\r\n        this.base\r\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\r\n        this.height(options && options.height);\r\n        this.width(options && options.width);\r\n      }\r\n    });\r\n    ```\r\n    @method setLayout\r\n    @param {Number} x position of base top-left\r\n    @param {Number} y position of base top-left\r\n    @param {Object} options\r\n      @param {Object} [options.height] height of component in layout\r\n      @param {Object} [options.width] width of component in layout\r\n  */\r\n  setLayout: function(x, y, options) {\r\n    var margins = this.margins();\r\n\r\n    if (this.centered()) {\r\n      var actual_dimensions = dimensions(this.base);\r\n      if ('height' in options)\r\n        y += (options.height - actual_dimensions.height) / 2;\r\n      else\r\n        y += margins.top;\r\n\r\n      if ('width' in options)\r\n        x += (options.width - actual_dimensions.width) / 2;\r\n      else\r\n        x += margins.left;\r\n    }\r\n    else {\r\n      x += margins.left;\r\n      y += margins.top;\r\n    }\r\n\r\n    this.base.attr('transform', translate(x, y));\r\n    this.height(options && options.height);\r\n    this.width(options && options.width);\r\n  }\r\n}, {\r\n  /**\r\n    Default z-index for component\r\n    (Charts are 100 by default, so Component = 50 is below chart by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('AboveChartLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 150\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 50\r\n  */\r\n  z_index: 50,\r\n\r\n  /**\r\n    Set to `'chart'` to use chart layer for component.\r\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Component').extend('ChartComponent', {\r\n      // ...\r\n    }, {\r\n      layer_type: 'chart'\r\n    });\r\n    ```\r\n    @attribute layer_type\r\n    @static\r\n    @type String\r\n    @default 'component'\r\n  */\r\n  layer_type: 'component'\r\n});\r\n\r\nexport default Component;\r\n","import {\r\n  property,\r\n  translate,\r\n  style as styleToString,\r\n  dimensions\r\n} from './helpers';\r\nimport Component from './Component';\r\n\r\n/**\r\n  Common base for creating overlays that includes helpers for positioning and show/hide.\r\n\r\n  ### Extending\r\n\r\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\r\n\r\n  - To adjust positioning, override `position`\r\n  - To adjust show/hide behavior, override `show`/`hide`\r\n\r\n  @example\r\n  ```js\r\n  d3.chart('Overlay').extend('ClosestPoints', {\r\n    // TODO\r\n  });\r\n  ```\r\n  @class Overlay\r\n  @extends Component\r\n*/\r\nvar Overlay = Component.extend({\r\n  initialize: function(options) {\r\n    Component.prototype.initialize.call(this, options);\r\n    this.base.attr('style', this.style());\r\n  },\r\n  skip_layout: true,\r\n\r\n  /**\r\n    Overlay's top-left x-position in px from left\r\n\r\n    @property x\r\n    @type Number\r\n    @default 0\r\n  */\r\n  x: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Overlay's top-left y-position in px from top\r\n\r\n    @property y\r\n    @type Number\r\n    @default 0\r\n  */\r\n  y: property({\r\n    default_value: 0\r\n  }),\r\n\r\n  /**\r\n    Whether overlay is currently hidden\r\n\r\n    @property hidden\r\n    @type Boolean\r\n    @default true\r\n  */\r\n  hidden: property({\r\n    default_value: true\r\n  }),\r\n\r\n  /**\r\n    Overlays base styling\r\n    (default includes position and hidden)\r\n\r\n    @property style\r\n    @type String\r\n    @default set from x, y, and hidden\r\n  */\r\n  style: property({\r\n    default_value: function() {\r\n      var transform = translate(this.x() + 'px', this.y() + 'px');\r\n      var styles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        '-webkit-transform': transform,\r\n        '-ms-transform': transform,\r\n        transform: transform\r\n      };\r\n\r\n      if (this.hidden())\r\n        styles.display = 'none';\r\n\r\n      return styleToString(styles);\r\n    }\r\n  }),\r\n\r\n  /**\r\n    Position overlay layer at given x,y coordinates\r\n\r\n    @example\r\n    ```js\r\n    // Absolute, x: 100, y: 50\r\n    overlay.position(100, 50);\r\n    overlay.position({x: 100, y: 50});\r\n\r\n    // Relative-to-chart, x: 50, y: 40\r\n    overlay.position({chart: {x: 50, y: 40}});\r\n\r\n    // Relative-to-container, x: 75, y: 50\r\n    overlay.position({container: {x: 75, y: 50}});\r\n    ```\r\n    @method position\r\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\r\n    @param {Number} [y] in px from top\r\n  */\r\n  // TODO This conflicts with component.position(), might need a rename\r\n  position: function(position, y) {\r\n    if (arguments.length > 1) {\r\n      position = {\r\n        x: position,\r\n        y: y\r\n      };\r\n    }\r\n    else {\r\n      if ('container' in position) {\r\n        position = this.getAbsolutePosition(position.container);\r\n      }\r\n      else if ('chart' in position) {\r\n        if (this.container) {\r\n          var chart = this.container.chartPosition();\r\n          position = this.getAbsolutePosition({\r\n            x: position.chart.x + chart.left,\r\n            y: position.chart.y + chart.top\r\n          });\r\n        }\r\n        else {\r\n          position = this.getAbsolutePosition(position.chart);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.x(position.x).y(position.y);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Show overlay (with `display: block`)\r\n\r\n    @method show\r\n  */\r\n  show: function() {\r\n    this.hidden(false);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Hide overlay (with `display: none`)\r\n\r\n    @method hide\r\n  */\r\n  hide: function() {\r\n    this.hidden(true);\r\n    this.base.attr('style', this.style());\r\n  },\r\n\r\n  /**\r\n    Get absolute position from container position\r\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\r\n\r\n    @method getAbsolutePosition\r\n    @param {Object} container_position ({x, y})\r\n    @return {Object} absolute {x, y} relative to container div\r\n  */\r\n  getAbsolutePosition: function(container_position) {\r\n    var container = this.container && this.container.container;\r\n\r\n    if (container && this.container.responsive()) {\r\n      var container_dimensions = dimensions(container);\r\n      var chart_width = this.container.width();\r\n      var chart_height = this.container.height();\r\n      var width_ratio = container_dimensions.width / chart_width;\r\n      var height_ratio = container_dimensions.height / chart_height;\r\n\r\n      return {\r\n        x: width_ratio * container_position.x,\r\n        y: height_ratio * container_position.y\r\n      };\r\n    }\r\n    else {\r\n      // Not attached so can't get actual dimensions\r\n      // fallback to container position\r\n      return container_position;\r\n    }\r\n  }\r\n}, {\r\n  layer_type: 'overlay'\r\n});\r\n\r\nexport default Overlay;\r\n","import Base from './Base';\r\n\r\n/**\r\n  Common base for creating charts.\r\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\r\n\r\n  ### Extending\r\n\r\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\r\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\r\n  and `d3.compose.helpers.property` when creating your chart.\r\n\r\n  @example\r\n  ```js\r\n  var helpers = d3.compose.helpers;\r\n\r\n  d3.chart('Chart').extend('Pie', {\r\n    initialize: function() {\r\n      // same as d3.chart\r\n    },\r\n    transform: function(data) {\r\n      // same as d3.chart\r\n    },\r\n\r\n    color: helpers.di(function(chart, d, i) {\r\n      // \"di\" function with parent chart injected (\"this\" = element)\r\n    }),\r\n\r\n    centered: helpers.property({\r\n      default_value: true\r\n      // can be automatically set from options object\r\n    })\r\n  });\r\n  ```\r\n  @class Chart\r\n  @extends Base\r\n*/\r\nvar Chart = Base.extend({}, {\r\n  /**\r\n    Default z-index for chart\r\n    (Components are 50 by default, so Chart = 100 is above component by default)\r\n\r\n    @example\r\n    ```js\r\n    d3.chart('Chart').extend('BelowComponentLayers', {\r\n      // ...\r\n    }, {\r\n      z_index: 40\r\n    });\r\n    ```\r\n    @attribute z_index\r\n    @static\r\n    @type Number\r\n    @default 100\r\n  */\r\n  z_index: 100,\r\n  layer_type: 'chart'\r\n});\r\n\r\nexport default Chart;\r\n","import d3 from 'd3';\r\nimport utils from './src/utils';\r\nimport helpers from './src/helpers';\r\nimport Base from './src/Base';\r\nimport Chart from './src/Chart';\r\nimport Component from './src/Component';\r\nimport Overlay from './src/Overlay';\r\nimport Compose, { layered } from './src/Compose';\r\n\r\n// Export charts/components to d3.chart\r\nutils.extend(d3.chart(), {\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose\r\n});\r\n\r\nvar d3c = d3.compose = {\r\n  VERSION: '{version}',\r\n  utils: utils,\r\n  helpers: helpers,\r\n  Base: Base,\r\n  Chart: Chart,\r\n  Component: Component,\r\n  Overlay: Overlay,\r\n  Compose: Compose,\r\n  layered: layered\r\n};\r\n\r\nexport default d3c;\r\n"],"sourceRoot":"/source/"}