{"version":3,"sources":["d3.compose.min.js","d3.compose.js","../C:/dev/d3.compose/src/utils.js","../C:/dev/d3.compose/src/helpers/property.js","../C:/dev/d3.compose/src/helpers/dimensions.js","../C:/dev/d3.compose/src/helpers/create-scale.js","../C:/dev/d3.compose/src/helpers/mixin.js","../C:/dev/d3.compose/src/helpers/stack.js","../C:/dev/d3.compose/src/helpers.js","../C:/dev/d3.compose/src/Base.js","../C:/dev/d3.compose/src/layout.js","../C:/dev/d3.compose/src/Compose.js","../C:/dev/d3.compose/src/Chart.js","../C:/dev/d3.compose/src/Component.js","../C:/dev/d3.compose/src/Overlay.js","../C:/dev/d3.compose/d3.compose.js"],"names":["global","factory","exports","module","require","define","amd","d3c","d3","this","_extend","target","extensions","undefined_only","i","length","key","contains","arr","item","indexOf","compact","filter","difference","a","b","value","defaults","slice","call","arguments","extend","flatten","reduce","memo","concat","find","fn","context","first","n","Array","prototype","isBoolean","obj","isObject","type","isNumber","toString","isString","isUndefined","objectEach","keys","Object","objectFind","pluck","objs","map","uniq","result","push","inherits","Child","Parent","create","constructor","enumerable","writeable","configurable","setPrototypeOf","__proto__","valueOrDefault","default_value","property","options","console","warn","id","unique_index","get","properties","isFunction","set","validate","Error","JSON","stringify","previous","response","override","after","__properties","is_property","set_from_options","dimensions","selection","client","clientDimensions","width","height","attr","attrDimensions","isSVG","bbox","bboxDimensions","max","element","node","client_dimensions","clientWidth","clientHeight","window","getComputedStyle","styles","parseFloat","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","getBBox","ex","nodeName","createScale","scale","time","linear","apply","domain","data","setDomain","centered","adjacent","addCentered","padding","addPadding","getValue","d","isSeriesData","values","series","min_value","min","original","series_count","series_index","range_band","rangeBand","isFinite","original_range","range","rangeBands","mixin","mixins","initializes","transforms","mixed","forEach","mix","initialize","args","init","transform","trans","bind","stack","direction","origin","min_height","min_width","elements","next_position","element_dimensions","spacing_width","spacing_height","x","y","translate","rotate","degrees","center","rotation","alignText","line_height","offset","element_style","css_font_size","css_line_height","isNaN","css_adjustment","height_adjustment","first_item","isArray","getMax","series_data","extent","series_max","Infinity","getMin","series_min","src_helpers__style","keyValues","join","getMargins","margins","default_margins","top","right","bottom","left","di","callback","wrapped","j","undefined","_is_di","bindDi","diFn","chart","bindAllDi","getParentData","_parent_data","parent","parentNode","select","createHelper","Base","base","_layers","_attached","_events","extractLayout","prepareComponent","component","row_index","col_index","getId","setPosition","position","layered_index","extractData","_charts","_components","items","layout","charts","components","found","row","row_components","row_layout","_layered","chart_ids","chart_index","unshift","calculateLayout","demux","overall_layout","skip_layout","getLayout","applyLayout","chart_position","setLayout","part","index","parts","previousPart","layered","findById","Int8Array","utils","helpers","style","Base__Chart","name","draw","trigger","layer","attachment","unlayer","attach","on","once","off","isProperty","unset","proto_props","static_props","hasOwnProperty","src_Chart__Chart","z_index","layer_type","Chart","src_Chart","Component","prepareLayout","actual_dimensions","Overlay","hidden","-webkit-transform","-ms-transform","display","getAbsolutePosition","container","chartPosition","show","hide","container_position","responsive","container_dimensions","chart_width","chart_height","width_ratio","height_ratio","default_compose_margins","Compose","tagName","append","classed","attachHoverListeners","rawData","_width","_height","viewBox","preserveAspectRatio","containerStyle","aspect_ratio","padding-top","baseStyle","chart_options","_attachItems","component_options","delay","duration","ease","config","_prepareConfig","_setDimensions","redraw","createChartLayer","createComponentLayer","createOverlayLayer","_positionChartLayers","_extractLayout","positionLayers","inside","mouse","document","documentElement","bounds","enter","translateToXY","move","leave","coordinates","chart_x","chart_y","getBounds","scroll_y","scrollY","scrollTop","getBoundingClientRect","was_inside","is_inside","detach","remove","_positionComponents","_positionByZIndex","remove_ids","remove_id","changed_position","Item","layer_options","createLayer","overlay","selectAll","setZIndex","zIndex","parseInt","sortZIndex","getLayer","layers","sort","appendChild","compose","VERSION","d3_compose"],"mappings":"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","file":"d3.compose.min.js","sourcesContent":[null,"/*!\n * d3.compose - Compose complex, data-driven visualizations from reusable charts and components with d3\n * v0.15.9 - https://github.com/CSNW/d3.compose - license: MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('d3')) :\n  typeof define === 'function' && define.amd ? define(['d3'], factory) :\n  global.d3c = factory(global.d3)\n}(this, function (d3) { 'use strict';\n\n  // Many utils inlined from Underscore.js\n  // (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\n  var slice = Array.prototype.slice;\n  var toString = Object.prototype.toString;\n\n  function _extend(target, extensions, undefined_only) {\n    for (var i = 0, length = extensions.length; i < length; i++) {\n      for (var key in extensions[i]) {\n        if (!undefined_only || target[key] === void 0)\n          target[key] = extensions[i][key];\n      }\n    }\n\n    return target;\n  }\n\n  function contains(arr, item) {\n    return arr.indexOf(item) >= 0;\n  }\n\n  function compact(arr) {\n    return arr.filter(function(item) {\n      return item;\n    });\n  }\n\n  function difference(a, b) {\n    return a.filter(function(value) {\n      return b.indexOf(value) < 0;\n    });\n  }\n\n  function defaults(target) {\n    return _extend(target, slice.call(arguments, 1), true);\n  }\n\n  function extend(target) {\n    return _extend(target, slice.call(arguments, 1));\n  }\n\n  function flatten(arr) {\n    // Assumes all items in arr are arrays and only flattens one level\n    return arr.reduce(function(memo, item) {\n      return memo.concat(item);\n    }, []);\n  }\n\n  function find(arr, fn, context) {\n    if (!arr) return;\n    for (var i = 0, length = arr.length; i < length; i++) {\n      if (fn.call(context, arr[i], i, arr))\n        return arr[i];\n    }\n  }\n\n  function first(arr, n) {\n    if (arr == null) return void 0;\n    if (n == null) return arr[0];\n    return Array.prototype.slice.call(arr, 0, n);\n  }\n\n  function isBoolean(obj) {\n    return obj === true || obj === false;\n  }\n  function isObject(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  }\n  function isNumber(obj) {\n    return toString.call(obj) === '[object Number]';\n  }\n  function isString(obj) {\n    return toString.call(obj) === '[object String]';\n  }\n  function isUndefined(obj) {\n    return obj === void 0;\n  }\n\n  var isFunction = function(obj) {\n    return toString.call(obj) === '[object Function]';\n  };\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  function objectEach(obj, fn, context) {\n    if (!obj) return;\n    var keys = Object.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      fn.call(context, obj[keys[i]], keys[i], obj);\n    }\n  }\n\n  function objectFind(obj, fn, context) {\n    if (!obj) return;\n    var keys = Object.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      if (fn.call(context, obj[keys[i]], keys[i], obj))\n        return obj[keys[i]];\n    }\n  }\n\n  function pluck(objs, key) {\n    if (!objs) return [];\n    return objs.map(function(obj) {\n      return obj[key];\n    });\n  }\n\n  function uniq(arr) {\n    var result = [];\n    for (var i = 0, length = arr.length; i < length; i++) {\n      if (result.indexOf(arr[i]) < 0)\n        result.push(arr[i]);\n    }\n    return result;\n  }\n\n  function inherits(Child, Parent) {\n    Child.prototype = Object.create(Parent.prototype, {\n      constructor: {\n        value: Child,\n        enumerable: false,\n        writeable: true,\n        configurable: true\n      }\n    });\n\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(Child, Parent);\n    }\n    else {\n      Child.__proto__ = Parent; //eslint-disable-line no-proto\n\n      // __proto__ isn't supported in IE,\n      // use one-time copy of static properties to approximate\n      defaults(Child, Parent);\n    }\n  }\n\n  // If value isn't `undefined`, return `value`, otherwise use `default_value`\n  //\n  // @method valueOrDefault\n  // @param {Any} [value]\n  // @param {Any} default_value\n  // @return {Any}\n  function valueOrDefault(value, default_value) {\n    return !isUndefined(value) ? value : default_value;\n  }\n\n  var utils = {\n    slice: slice,\n    toString: toString,\n    contains: contains,\n    compact: compact,\n    difference: difference,\n    defaults: defaults,\n    extend: extend,\n    flatten: flatten,\n    find: find,\n    first: first,\n    isBoolean: isBoolean,\n    isFunction: isFunction,\n    isObject: isObject,\n    isNumber: isNumber,\n    isString: isString,\n    isUndefined: isUndefined,\n    objectEach: objectEach,\n    objectFind: objectFind,\n    pluck: pluck,\n    uniq: uniq,\n    inherits: inherits,\n    valueOrDefault: valueOrDefault\n  };\n\n  var unique_index = 0;\n\n  /**\n    Helper for creating properties for charts/components\n\n    @example\n    ```javascript\n    var Custom = d3.chart('Chart').extend('Custom', {\n      // Create property that's stored internally as 'simple'\n      simple: property()\n    });\n    var custom; // = new Custom(...);\n\n    // set\n    custom.simple('Howdy');\n\n    // get\n    console.log(custom.simple()); // -> 'Howdy'\n\n    // Advanced\n    // --------\n    // Default values:\n    Custom.prototype.message = property({\n      default_value: 'Howdy!'\n    });\n\n    console.log(custom.message()); // -> 'Howdy!'\n    custom.message('Goodbye');\n    console.log(custom.message()); // -> 'Goodbye'\n\n    // Set to undefined to reset to default value\n    custom.message(undefined);\n    console.log(custom.message()); // -> 'Howdy!'\n\n    // Computed default value:\n    Custom.property.computed = property({\n      default_value: function() {\n        // \"this\" = Custom instance\n        return this.message();\n      }\n    });\n\n    // Function default value:\n    // For function default_values, wrap in function to differentiate from computed\n    Custom.property.fn = property({\n      default_value: function() {\n        return function defaultFn() {};\n      }\n      // The following would be incorrectly evaluated\n      // default_value: function defaultFn() {}\n    })\n\n    // Custom getter:\n    Custom.prototype.exclaimed = property({\n      get: function(value) {\n        // Value is the underlying set value\n        return value + '!';\n      }\n    });\n\n    custom.exclaimed('Howdy');\n    console.log(custom.exclaimed()); // -> 'Howdy!'\n\n    // Custom setter:\n    Custom.prototype.feeling = property({\n      set: function(value, previous) {\n        if (value == 'Hate') {\n          // To override value, return Object with override specified\n          return {\n            override: 'Love',\n\n            // To do something after override, use after callback\n            after: function() {\n              console.log('After: ' + this.feeling()); // -> 'After: Love'\n            }\n          };\n        }\n      }\n\n      custom.feeling('Hate'); // -> 'After: Love'\n      console.log(custom.feeling()); // -> 'Love'\n    });\n    ```\n    @method property\n    @for helpers\n    @param {Object} [options]\n    @param {Any} [options.default_value] default value for property (when set value is `undefined`). If default value is a function, wrap in another function as default_value is evaluated by default.\n    @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\n    @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\n    @param {Object} [options.context=this] context to evaluate get/set/after functions\n    @return {Function} `()`: get, `(value)`: set\n  */\n  function property(options) {\n    // DEPRECATED: name as first argument\n    if (arguments.length == 2) {\n      if (typeof console != 'undefined' && console.warn)\n        console.warn('DEPRECATED - name argument for property is no longer supported will be removed in the next version of d3.compose');\n      options = arguments[1];\n    }\n\n    options = options || {};\n    var id = 'property_' + unique_index++;\n\n    var property = function(value) {//eslint-disable-line no-shadow\n      var properties = this.__properties = this.__properties || {};\n      var context = valueOrDefault(property.context, this);\n\n      if (arguments.length)\n        return set.call(this);\n      else\n        return get.call(this);\n\n      function get() {\n        value = properties[id];\n\n        if (isUndefined(value)) {\n          // Use default value and unwrap if it's a function\n          value = property.default_value;\n          if (isFunction(value))\n            value = value.call(context);\n        }\n\n        return isFunction(options.get) ? options.get.call(context, value) : value;\n      }\n\n      function set() {\n        // Validate\n        if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(context, value))\n          throw new Error('Invalid value for property: ' + JSON.stringify(value));\n\n        var previous = properties[id];\n        properties[id] = value;\n\n        if (isFunction(options.set) && !isUndefined(value)) {\n          var response = options.set.call(context, value, previous);\n\n          if (response && 'override' in response)\n            properties[id] = response.override;\n          if (response && isFunction(response.after))\n            response.after.call(context, properties[id]);\n        }\n\n        return this;\n      }\n    };\n\n    // For checking if function is a property\n    property.is_property = true;\n    property.id = id;\n    property.set_from_options = valueOrDefault(options.set_from_options, true);\n    property.default_value = options.default_value;\n    property.context = options.context;\n    property.options = options;\n\n    return property;\n  }\n\n  /**\n    Helper for robustly determining width/height of given selector.\n    Checks dimensions from css, attributes, and bounding box.\n\n    @method dimensions\n    @for helpers\n    @param {d3.Selection} selection\n    @return {Object} `{width, height}`\n  */\n  function dimensions(selection) {\n    // 1. Get width/height set via css (only valid for svg and some other elements)\n    var client = clientDimensions(selection);\n\n    if (client.width && client.height)\n      return client;\n\n    // 2. Get width/height set via attribute\n    var attr = attrDimensions(selection);\n\n    if (isSVG(selection)) {\n      return {\n        width: client.width != null ? client.width : attr.width || 0,\n        height: client.height != null ? client.height : attr.height || 0\n      };\n    }\n    else {\n      var bbox = bboxDimensions(selection);\n\n      // Size set by css -> client (only valid for svg and some other elements)\n      // Size set by svg -> attr override or bounding_box\n      // -> Take maximum\n      return {\n        width: d3.max([client.width, attr.width || bbox.width]) || 0,\n        height: d3.max([client.height, attr.height || bbox.height]) || 0\n      };\n    }\n  }\n\n  function clientDimensions(selection) {\n    var element = selection.node();\n\n    var client_dimensions = {\n      width: element && element.clientWidth,\n      height: element && element.clientHeight\n    };\n\n    // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\n    //        calculate from css\n    //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\n    //        Note: This makes assumptions about the box model in use and that width/height are not percent values\n    if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\n      var styles = window.getComputedStyle(element);\n      client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\n      client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\n    }\n\n    return client_dimensions;\n  }\n\n  function attrDimensions(selection) {\n    return {\n      width: selection && selection.attr && parseFloat(selection.attr('width')),\n      height: selection && selection.attr && parseFloat(selection.attr('height'))\n    };\n  }\n\n  function bboxDimensions(selection) {\n    var element = selection.node();\n    var bbox;\n    try {\n      bbox = element && typeof element.getBBox == 'function' && element.getBBox();\n    }\n    catch(ex) {\n      // Firefox throws error when calling getBBox when svg hasn't been displayed\n      // Ignore error and set to empty\n      bbox = {width: 0, height: 0};\n    }\n\n    return bbox;\n  }\n\n  function isSVG(selection) {\n    return selection.node().nodeName == 'svg';\n  }\n\n  /**\n    Create scale from options\n\n    @example\n    ```javascript\n    // Simple type, range, and domain\n    var scale = createScale({\n      type: 'linear',\n      domain: [0, 100],\n      range: [0, 500]\n    });\n\n    // Calculate domain for data\n    var scale = createScale({\n      type: 'log',\n      data: [{y: 1}, {y: 100}, {y: 2000}, {y: 5000}],\n      key: 'y'\n    });\n\n    // Scale is passed through\n    var original = d3.scale.linear();\n    var scale = createScale(original);\n    scale === original;\n\n    // Set other properties by passing in \"arguments\" array\n    var scale = createScale({\n      type: 'ordinal',\n      domain: ['a', 'b', 'c', 'd', 'e'],\n      rangeRoundBands: [[0, 100], 0.1, 0.05] // -> rangeRoundBands([0, 100], 0.1, 0.05)\n    });\n\n    // Use ordinal + adjacent for bar charts\n    var scale = createScale({\n      type: 'ordinal',\n      adjacent: true,\n      domain: ['a', 'b', 'c'],\n      series: 2 // Series count is required for adjacent if data isn't given\n    })\n    ```\n    @method createScale\n    @for helpers\n    @param {Object|Function} options (passing in `Function` returns original function with no changes)\n    @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\n    @param {Array} [options.domain] Domain for scale\n    @param {Array} [options.range] Range for scale\n    @param {Any} [options.data] Used to dynamically set domain (with given value or key)\n    @param {Function} [options.value] \"di\"-function for getting value for data\n    @param {String} [options.key] Data key to extract value\n    @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\n    @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\n\n    - Requires series-index as second argument to scale, otherwise centered x-value is used\n    - Requires \"data\" or \"series\" options to determine number of series\n    @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\n    @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\n    @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\n    @return {d3.Scale}\n  */\n  function createScale(options) {\n    options = options || {};\n\n    // If function, scale was passed in as options\n    if (isFunction(options))\n      return options;\n\n    // Create scale (using d3.time.scale() if type is 'time')\n    var scale;\n    if (options.type == 'time')\n      scale = d3.time.scale();\n    else if (d3.scale[options.type])\n      scale = d3.scale[options.type]();\n    else\n      scale = d3.scale.linear();\n\n    objectEach(options, function(value, key) {\n      if (scale[key]) {\n        // If option is standard property (domain or range), pass in directly\n        // otherwise, pass in as arguments\n        // (don't pass through internal options)\n        if (key == 'range' || key == 'domain')\n          scale[key](value);\n        else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\n          scale[key].apply(scale, value);\n      }\n    });\n\n    if (!options.domain && options.data && (options.key || options.value))\n      scale = setDomain(scale, options);\n\n    // Add centered and adjacent extensions to ordinal\n    // (centered by default for ordinal)\n    var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\n    if (options.type == 'ordinal' && (centered || options.adjacent))\n      scale = addCentered(scale, options);\n\n    // Add padding extension to ordinal\n    if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\n      scale = addPadding(scale, options);\n\n    return scale;\n  }\n\n  function setDomain(scale, options) {\n    // Use value \"di\" or create for key\n    var getValue = options.value || function(d) {\n      return d[options.key];\n    };\n\n    // Enforce series data\n    var data = options.data;\n    if (!isSeriesData(data))\n      data = [{values: data}];\n\n    var domain;\n    if (options.type == 'ordinal') {\n      // Domain for ordinal is array of unique values\n      domain = uniq(flatten(data.map(function(series) {\n        if (series && series.values)\n          return series.values.map(getValue);\n      })));\n    }\n    else {\n      var min_value = min(data, getValue);\n\n      domain = [\n        min_value < 0 ? min_value : 0,\n        max(data, getValue)\n      ];\n    }\n\n    scale.domain(domain);\n    return scale;\n  }\n\n  function addCentered(original, options) {\n    // Get series count for adjacent\n    var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\n\n    // TODO Look into removing closure\n    var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\n      var context = function(value, series_index) {\n        var width = context.width();\n\n        if (!options.adjacent)\n          series_index = 0;\n\n        return original(value) + (0.5 * width) + (width * (series_index || 0));\n      };\n      extend(context, original, {\n        width: function() {\n          var range_band = context.rangeBand && context.rangeBand();\n          var width = isFinite(range_band) ? range_band : 0;\n\n          if (options.adjacent)\n            width = width / series_count;\n\n          return width;\n        }\n      });\n\n      // TODO test copy() behavior\n\n      return context;\n    })(original, options, series_count);\n\n    return scale;\n  }\n\n  function addPadding(scale, options) {\n    var padding = options.padding != null ? options.padding : 0.1;\n\n    var original_range = scale.range;\n    scale.range = function(range) {\n      if (!arguments.length) return original_range();\n\n      scale.rangeBands(\n        range,\n        padding,\n        padding / 2\n      );\n    };\n\n    if (options.range)\n      scale.range(options.range);\n\n    // TODO test copy() behavior\n    return scale;\n  }\n\n  /**\n    Combine mixins with Parent super class for extension\n\n    @example\n    ```js\n    var a = {transform: function() {}, a: 1};\n    var b = {initialize: function() {}, b: 2};\n    var c = {c: 3};\n\n    var Custom = mixin(Chart, a, b, c).extend({\n      initialize: function(options) {\n        this._super.initialize.call(this, options);\n        // d\n      },\n      transform: function(data) {\n        data = this._super.transform.call(this, data);\n        // d\n      }\n    });\n\n    // initialize: Chart, b, d\n    // transform: Chart, a, d\n    ```\n    @method mixin\n    @for helpers\n    @param {Function} Parent\n    @param {...Object} ...mixins\n    @return {Function}\n  */\n  function mixin(Parent/*, ...mixins*/) {\n    var mixins = slice.call(arguments, 1);\n    var initializes = [];\n    var transforms = [];\n    var mixed = {};\n\n    mixins.forEach(function(mix) {\n      objectEach(mix, function(value, key) {\n        if (key == 'initialize')\n          initializes.push(value);\n        else if (key == 'transform')\n          transforms.push(value);\n        else\n          mixed[key] = value;\n      });\n    });\n\n    if (initializes.length) {\n      mixed.initialize = function initialize() {\n        var args = slice.call(arguments);\n        Parent.prototype.initialize.apply(this, args);\n        initializes.forEach(function(init) {\n          init.apply(this, args);\n        }, this);\n      };\n    }\n\n    if (transforms.length) {\n      mixed.transform = function transform(data) {\n        data = Parent.prototype.transform.call(this, data);\n        return transforms.reduce(function(memo, trans) {\n          return trans.call(this, memo);\n        }.bind(this), data);\n      };\n    }\n\n    return Parent.extend(mixed);\n  }\n\n  /**\n    Stack given array of elements vertically or horizontally\n\n    @example\n    ```js\n    // Stack all text elements vertically, from the top, with 0px padding\n    d3.selectAll('text').call(helpers.stack())\n\n    // Stack all text elements horizontally, from the right, with 5px padding\n    d3.selectAll('text').call(helpers.stack({\n      direction: 'horizontal',\n      origin: 'right',\n      padding: 5\n    }));\n    ```\n    @method stack\n    @for helpers\n    @param {Object} [options]\n    @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\n    @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\n    @param {Number} [options.padding=0] padding (in px) between elements\n    @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\n    @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\n    @return {Function}\n  */\n  function stack(options) {\n    options = extend({\n      direction: 'vertical',\n      origin: 'top',\n      padding: 0,\n      min_height: 0,\n      min_width: 0\n    }, options);\n\n    // Ensure valid origin based on direction\n    if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\n      options.origin = 'left';\n    else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\n      options.origin = 'top';\n\n    function padding(i) {\n      return i > 0 && options.padding ? options.padding : 0;\n    }\n\n    return function(elements) {\n      if (elements && elements.attr) {\n        var previous = 0;\n\n        elements.attr('transform', function(d, i) {\n          var element_dimensions = this.getBBox();\n          var spacing_width = d3.max([element_dimensions.width, options.min_width]);\n          var spacing_height = d3.max([element_dimensions.height, options.min_height]);\n          var x = 0;\n          var y = 0;\n          var next_position;\n\n          if (options.direction == 'horizontal') {\n            next_position = previous + spacing_width + padding(i);\n\n            if (options.origin == 'left')\n              x = previous + padding(i);\n            else\n              x = next_position;\n\n            previous = next_position;\n          }\n          else {\n            next_position = previous + spacing_height + padding(i);\n\n            if (options.origin == 'top')\n              y = previous + padding(i);\n            else\n              y = next_position;\n\n            previous = next_position;\n          }\n\n          return translate(x, y);\n        });\n      }\n    };\n  }\n\n  /**\n    Translate by (x, y) distance\n\n    @example\n    ```javascript\n    translate(10, 15) == 'translate(10, 15)'\n    translate({x: 10, y: 15}) == 'translate(10, 15)'\n    ```\n    @method translate\n    @param {Number|Object} [x] value or `{x, y}`\n    @param {Number} [y]\n    @return {String}\n  */\n  function translate(x, y) {\n    if (isObject(x)) {\n      y = x.y;\n      x = x.x;\n    }\n\n    return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\n  }\n\n  /**\n    Rotate by degrees, with optional center\n\n    @method rotate\n    @param {Number} degrees\n    @param {Object} [center = {x: 0, y: 0}]\n    @return {String}\n  */\n  function rotate(degrees, center) {\n    var rotation = 'rotate(' + (degrees || 0);\n    if (center)\n      rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\n    rotation += ')';\n\n    return rotation;\n  }\n\n  /**\n    Find vertical offset to vertically align text\n    (needed due to lack of `alignment-baseline` support in Firefox)\n\n    @example\n    ```js\n    var label = d3.select('text');\n\n    // Place label vertically so that origin is top-left\n    var offset = alignText(label);\n    label.attr('transform', translate(0, offset));\n\n    // Center label for line-height of 20px\n    var offset = alignText(label, 20);\n    label.attr('transform', translate(0, offset));\n    ```\n    @method alignText\n    @param {element} element\n    @param {Number} [line_height]\n    @return {Number} offset\n  */\n  function alignText(element, line_height) {\n    var offset = 0;\n    try {\n      var height = element.getBBox().height;\n\n      var element_style = window.getComputedStyle(element);\n      var css_font_size = parseFloat(element_style['font-size']);\n      var css_line_height = parseFloat(element_style['line-height']);\n\n      // If line-height: normal, use estimate 1.14em\n      // (actual line-height depends on browser and font)\n      if (isNaN(css_line_height))\n        css_line_height = 1.15 * css_font_size;\n\n      var css_adjustment = -(css_line_height - css_font_size) / 2;\n\n      // Add additional line-height, if specified\n      var height_adjustment = 0;\n      if (line_height && line_height > 0)\n        height_adjustment = (line_height - height) / 2;\n\n      offset = height + (css_adjustment || 0) + (height_adjustment || 0);\n    }\n    catch (ex) {\n      // Errors can occur from getBBox and getComputedStyle\n      // No useful information for offset, do nothing\n    }\n\n    return offset;\n  }\n\n  /**\n    Determine if given data is likely series data\n\n    @method isSeriesData\n    @param {Array} data\n    @return {Boolean}\n  */\n  function isSeriesData(data) {\n    var first_item = first(data);\n    return first_item && isObject(first_item) && Array.isArray(first_item.values);\n  }\n\n  /**\n    Get max for array/series by value di\n\n    @example\n    ```js\n    var data = [\n      {values: [{y: 1}, {y: 2}, {y: 3}]},\n      {values: [{y: 4}, {y: 2}, {y: 0}]}\n    ];\n    max(data, function(d, i) { return d.y; }); // -> 4\n    ```\n    @method max\n    @param {Array} data\n    @param {Function} getValue di function that returns value for given (d, i)\n    @return {Number}\n  */\n  function max(data, getValue) {\n    var getMax = function(series_data) {\n      return series_data && d3.extent(series_data, getValue)[1];\n    };\n\n    if (isSeriesData(data)) {\n      return data.reduce(function(memo, series) {\n        if (series && Array.isArray(series.values)) {\n          var series_max = getMax(series.values);\n          return series_max > memo ? series_max : memo;\n        }\n        else {\n          return memo;\n        }\n      }, -Infinity);\n    }\n    else {\n      return getMax(data);\n    }\n  }\n\n  /**\n    Get min for array/series by value di\n\n    @example\n    ```js\n    var data = [\n      {values: [{x: 1}, {x: 2}, {x: 3}]},\n      {values: [{x: 4}, {x: 2}, {x: 0}]}\n    ];\n    min(data, function(d, i) { return d.x; }); // -> 0\n    ```\n    @method min\n    @param {Array} data\n    @param {Function} getValue di function that returns value for given (d, i)\n    @return {Number}\n  */\n  function min(data, getValue) {\n    var getMin = function(series_data) {\n      return series_data && d3.extent(series_data, getValue)[0];\n    };\n\n    if (isSeriesData(data)) {\n      return data.reduce(function(memo, series) {\n        if (series && Array.isArray(series.values)) {\n          var series_min = getMin(series.values);\n          return series_min < memo ? series_min : memo;\n        }\n        else {\n          return memo;\n        }\n      }, Infinity);\n    }\n    else {\n      return getMin(data);\n    }\n  }\n\n  // TODO Look into converting to d3's internal style handling\n  // Convert key,values to style string\n  //\n  // @example\n  // ```js\n  // style({color: 'red', display: 'block'}) -> color: red; display: block;\n  // ```\n  // @method style\n  // @param {Object} styles\n  // @return {String}\n  function src_helpers__style(styles) {\n    if (!styles)\n      return '';\n\n    var keyValues = [];\n    objectEach(styles, function(value, key) {\n      keyValues.push(key + ': ' + value);\n    });\n    styles = keyValues.join('; ');\n\n    return styles ? styles + ';' : '';\n  }\n\n  /**\n    Get formatted margins for varying input\n\n    @method getMargins\n    @example\n    ```js\n    getMargins(4);\n    // -> {top: 4, right: 4, bottom: 4, left: 4}\n\n    getMargins({top: 20}, {top: 8, bottom: 8});\n    // -> {top: 20, right: 0, bottom: 8, left: 0}\n    ```\n    @param {Number|Object} margins\n    @param {Object} default_margins\n    @return {Object}\n  */\n  function getMargins(margins, default_margins) {\n    if (isNumber(margins))\n      return {top: margins, right: margins, bottom: margins, left: margins};\n    else\n      return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\n  }\n\n  /**\n    Create wrapped `(d, i)` function that adds chart instance as first argument.\n    Wrapped function uses standard d3 arguments and context.\n\n    Note: in order to pass proper context to di-functions called within di-function\n    use `.call(this, d, i)` (where \"this\" is d3 context)\n\n    @example\n    ```javascript\n    d3.chart('Base').extend('Custom', {\n      initialize: function() {\n        this.base.select('point')\n          .attr('cx', this.x);\n        // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\n      },\n\n      x: di(function(chart, d, i) {\n        // \"this\" is standard d3 context: node\n        return chart.xScale()(chart.xValue.call(this, d, i));\n      })\n\n      // xScale, xValue...\n    });\n    ```\n    @method di\n    @param {Function} callback with `(chart, d, i)` arguments\n    @return {Function}\n  */\n  function di(callback) {\n    // Create intermediate wrapping in case it's called without binding\n    var wrapped = function wrapped(d, i, j) {\n      return callback.call(this, undefined, d, i, j);\n    };\n    wrapped._is_di = true;\n    wrapped.original = callback;\n\n    return wrapped;\n  }\n\n  function bindDi(diFn, chart) {\n    return function wrapped(d, i, j) {\n      return (diFn.original || diFn).call(this, chart, d, i, j);\n    };\n  }\n\n  // Bind all di-functions found in chart\n  function bindAllDi(chart) {\n    for (var key in chart) {\n      if (chart[key] && chart[key]._is_di)\n        chart[key] = bindDi(chart[key], chart);\n    }\n  }\n\n\n  /**\n    Get parent data for element (used to get parent series for data point)\n\n    @example\n    ```js\n    var data = [{\n      name: 'Input',\n      values: [1, 2, 3]\n    }];\n\n    d3.selectAll('g')\n      .data(data)\n      .enter().append('g')\n        .selectAll('text')\n          .data(function(d) { return d.values; })\n          .enter().append('text')\n            .text(function(d) {\n              var series_data = getParentData(this);\n              return series_data.name + ': ' + d;\n            });\n\n    // Input: 1, Input: 2, Input: 3\n    ```\n    @method getParentData\n    @param {Element} element\n    @return {Any}\n  */\n  function getParentData(element) {\n    // @internal Shortcut if element + parentData needs to be mocked\n    if (element._parent_data)\n      return element._parent_data;\n\n    var parent = element && element.parentNode;\n    if (parent) {\n      var data = d3.select(parent).data();\n      return data && data[0];\n    }\n  }\n\n  function createHelper(type) {\n    return function(id, options) {\n      if (!options) {\n        options = id;\n        id = undefined;\n      }\n\n      return extend({id: id, type: type}, options);\n    };\n  }\n\n  var helpers = {\n    property: property,\n    dimensions: dimensions,\n    translate: translate,\n    rotate: rotate,\n    alignText: alignText,\n    isSeriesData: isSeriesData,\n    max: max,\n    min: min,\n    createScale: createScale,\n    style: src_helpers__style,\n    getMargins: getMargins,\n    stack: stack,\n    di: di,\n    bindDi: bindDi,\n    bindAllDi: bindAllDi,\n    getParentData: getParentData,\n    mixin: mixin,\n    createHelper: createHelper\n  };\n\n  var Base__Chart = d3.chart();\n\n  // TEMP Clear namespace from mixins\n  /**\n    @namespace\n  */\n\n  /**\n    Shared functionality between all charts and components.\n\n    - Set properties automatically from `options`,\n    - Store fully transformed data\n    - Adds `\"before:draw\"` and `\"draw\"` events\n    - Standard `width` and `height` calculations\n\n    @class Base\n  */\n  function Base(selection, options) {\n    // d3.chart() constructor without transform and initialize cascade\n    this.base = selection;\n    this._layers = {};\n    this._attached = {};\n    this._events = {};\n\n    // Bind all di-functions to this chart\n    bindAllDi(this);\n\n    // Set options (and properties with set_from_options)\n    if (options)\n      this.options(options);\n\n    // Initialize Chart (relies on explicitly calling super in initialize)\n    this.initialize(options);\n  }\n\n  inherits(Base, Base__Chart);\n\n  extend(Base.prototype, {\n    initialize: function() {},\n    transform: function(data) {\n      return data;\n    },\n    demux: function(name, data) { return data; },\n\n    // Add events to draw: \"before:draw\" and \"draw\"\n    draw: function(data) {\n      // Transform data (relies on explicitly calling super in transform)\n      data = this.transform(data);\n\n      // Store fully-transformed data for reference\n      this.data(data);\n\n      this.trigger('before:draw', data);\n\n      objectEach(this._layers, function(layer) {\n        layer.draw(data);\n      });\n      objectEach(this._attached, function(attachment, name) {\n        attachment.draw(this.demux(name, data));\n      }, this);\n\n      this.trigger('draw', data);\n    },\n\n    // Explicitly load d3.chart prototype\n    layer: Base__Chart.prototype.layer,\n    unlayer: Base__Chart.prototype.unlayer,\n    attach: Base__Chart.prototype.attach,\n    on: Base__Chart.prototype.on,\n    once: Base__Chart.prototype.once,\n    off: Base__Chart.prototype.off,\n    trigger: Base__Chart.prototype.trigger,\n\n    /**\n      Store fully-transformed data for direct access from the chart\n\n      @property data\n      @type Any\n    */\n    data: property(),\n\n    /**\n      Overall options for chart/component, automatically setting any matching properties.\n\n      @example\n      ```js\n      var property = d3.compose.helpers.property;\n\n      d3.chart('Base').extend('HasProperties', {\n        a: property(),\n        b: property({\n          set: function(value) {\n            return {\n              override: value + '!'\n            };\n          }\n        })\n      });\n\n      var instance = d3.select('#chart')\n        .chart('HasProperties', {\n          a: 123,\n          b: 'Howdy',\n          c: true\n        });\n\n      // Equivalent to:\n      // d3.select(...)\n      //   .chart('HasProperties')\n      //   .options({...});\n\n      console.log(instance.a()); // -> 123\n      console.log(instance.b()); // -> Howdy!\n      console.log(instance.options().c); // -> true\n      ```\n      @property options\n      @type Object\n    */\n    options: property({\n      default_value: {},\n      set: function(options, previous) {\n        // Clear all unset options, except for data and options\n        if (previous) {\n          var unset = difference(Object.keys(previous), Object.keys(options));\n          unset.forEach(function(key) {\n            if (key != 'data' && key != 'options' && isProperty(this, key))\n              this[key](undefined);\n          }, this);\n        }\n\n        objectEach(options, function setFromOptions(value, key) {\n          if (isProperty(this, key))\n            this[key](value);\n        }, this);\n\n        function isProperty(chart, key) {\n          return chart[key] && chart[key].is_property && chart[key].set_from_options;\n        }\n      }\n    }),\n\n    /**\n      Get width of `this.base`.\n      (Does not include `set` for setting width of `this.base`)\n\n      @method width\n      @return {Number}\n    */\n    width: function width() {\n      return dimensions(this.base).width;\n    },\n\n    /**\n      Get height of `this.base`.\n      (Does not include `set` for setting height of `this.base`)\n\n      @method height\n      @return {Number}\n    */\n    height: function height() {\n      return dimensions(this.base).height;\n    }\n  });\n\n  Base.extend = function(proto_props, static_props) {\n    // name may be first parameter for d3.chart usage\n    var name;\n    if (isString(proto_props)) {\n      name = proto_props;\n      proto_props = static_props;\n      static_props = arguments[2];\n    }\n\n    var Parent = this;\n    var Child;\n\n    if (proto_props && proto_props.hasOwnProperty('constructor')) {\n      Child = proto_props.constructor;\n\n      // inherits sets constructor, remove from proto_props\n      proto_props = extend({}, proto_props);\n      delete proto_props.constructor;\n    }\n    else {\n      Child = function() { return Parent.apply(this, arguments); };\n    }\n\n    inherits(Child, Parent);\n    if (static_props)\n      extend(Child, static_props);\n    if (proto_props)\n      extend(Child.prototype, proto_props);\n\n    // If name is given, register with d3.chart\n    if (name)\n      Base__Chart[name] = Child;\n\n    return Child;\n  };\n\n  // Export to d3.chart\n  Base__Chart.Base = Base;\n\n  /**\n    Common base for creating charts.\n    Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\n\n    ### Extending\n\n    To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\n    and automatically setting properties from `options`, use `d3.compose.helpers.di`\n    and `d3.compose.helpers.property` when creating your chart.\n\n    @example\n    ```js\n    var helpers = d3.compose.helpers;\n\n    d3.chart('Chart').extend('Pie', {\n      initialize: function() {\n        // same as d3.chart\n      },\n      transform: function(data) {\n        // same as d3.chart\n      },\n\n      color: helpers.di(function(chart, d, i) {\n        // \"di\" function with parent chart injected (\"this\" = element)\n      }),\n\n      centered: helpers.property({\n        default_value: true\n        // can be automatically set from options object\n      })\n    });\n    ```\n    @class Chart\n    @extends Base\n  */\n  var src_Chart__Chart = Base.extend({}, {\n    /**\n      Default z-index for chart\n      (Components are 50 by default, so Chart = 100 is above component by default)\n\n      @example\n      ```js\n      d3.chart('Chart').extend('BelowComponentLayers', {\n        // ...\n      }, {\n        z_index: 40\n      });\n      ```\n      @attribute z_index\n      @static\n      @type Number\n      @default 100\n    */\n    z_index: 100,\n    layer_type: 'chart'\n  });\n\n  d3.chart().Chart = src_Chart__Chart;\n  var src_Chart = src_Chart__Chart;\n\n  /**\n    Common base for creating components that includes helpers for positioning and layout.\n\n    ### Extending\n\n    `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\n    Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\n\n    - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\n    - To layout a component within the chart, use `skip_layout: true` and the static `layer_type: 'chart'`\n\n    @example\n    ```js\n    d3.chart('Component').extend('Key', {\n      initialize: function() {\n        this.layer('Key', this.base, {\n          dataBind: function(data) {\n            return this.selectAll('text')\n              .data(data);\n          },\n          insert: function() {\n            return this.append('text');\n          },\n          events: {\n            merge: function() {\n              this.text(this.chart().keyText)\n            }\n          }\n        })\n      },\n\n      keyText: helpers.di(function(chart, d, i) {\n        return d.abbr + ' = ' + d.value;\n      })\n    });\n    ```\n    @class Component\n    @extends Base\n  */\n  var Component = Base.extend({\n    /**\n      Component's position relative to chart\n      (top, right, bottom, left)\n\n      @property position\n      @type String\n      @default 'top'\n    */\n    position: property({\n      default_value: 'top',\n      validate: function(value) {\n        return contains(['top', 'right', 'bottom', 'left'], value);\n      }\n    }),\n\n    /**\n      Get/set the width of the component (in pixels)\n      (used in layout calculations)\n\n      @property width\n      @type Number\n      @default (actual width)\n    */\n    width: property({\n      default_value: function() {\n        return dimensions(this.base).width;\n      }\n    }),\n\n    /**\n      Get/set the height of the component (in pixels)\n      (used in layout calculations)\n\n      @property height\n      @type Number\n      @default (actual height)\n    */\n    height: property({\n      default_value: function() {\n        return dimensions(this.base).height;\n      }\n    }),\n\n    /**\n      Margins (in pixels) around component\n\n      @property margins\n      @type Object\n      @default {top: 0, right: 0, bottom: 0, left: 0}\n    */\n    margins: property({\n      set: function(values) {\n        return {\n          override: getMargins(values)\n        };\n      },\n      default_value: getMargins()\n    }),\n\n    /**\n      Center the component vertically/horizontally (depending on position)\n\n      @property centered\n      @type Boolean\n      @default false\n    */\n    centered: property({\n      default_value: false\n    }),\n\n    /**\n      Skip component during layout calculations and positioning\n      (override in prototype of extension)\n\n      @example\n      ```js\n      d3.chart('Component').extend('NotLaidOut', {\n        skip_layout: true\n      });\n      ```\n      @attribute skip_layout\n      @type Boolean\n      @default false\n    */\n    skip_layout: false,\n\n    /**\n      Perform any layout preparation required before getLayout (default is draw)\n      (override in prototype of extension)\n\n      Note: By default, components are double-drawn;\n      for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\n      This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\n\n      @example\n      ```js\n      d3.chart('Component').extend('Custom', {\n        prepareLayout: function(data) {\n          // default: this.draw(data);\n          // so that getLayout has real dimensions\n\n          // -> custom preparation (if necessary)\n        }\n      })\n      ```\n      @method prepareLayout\n      @param {Any} data\n    */\n    prepareLayout: function(data) {\n      this.draw(data);\n    },\n\n    /**\n      Get layout details for use when laying out component\n      (override in prototype of extension)\n\n      @example\n      ```js\n      d3.chart('Component').extend('Custom', {\n        getLayout: function(data) {\n          var calculated_width, calculated_height;\n\n          // Perform custom calculations...\n\n          // Must return position, width, and height\n          return {\n            position: this.position(),\n            width: calculated_width,\n            height: calculated_height\n          };\n        }\n      });\n      ```\n      @method getLayout\n      @param {Any} data\n      @return {Object} position, width, and height for layout\n    */\n    getLayout: function(data) {\n      this.prepareLayout(data);\n\n      var margins = this.margins();\n      return {\n        position: this.position(),\n        width: this.width() + margins.left + margins.right,\n        height: this.height() + margins.top + margins.bottom\n      };\n    },\n\n    /**\n      Set layout of underlying base\n      (override in prototype of extension)\n\n      @example\n      ```js\n      d3.chart('Component').extend('Custom', {\n        setLayout: function(x, y, options) {\n          // Set layout of this.base...\n          // (the following is the default implementation)\n          var margins = this.margins();\n\n          // (handle this.centered())\n\n          this.base\n            .attr('transform', helpers.translate(x + margins.left, y + margins.top));\n          this.height(options && options.height);\n          this.width(options && options.width);\n        }\n      });\n      ```\n      @method setLayout\n      @param {Number} x position of base top-left\n      @param {Number} y position of base top-left\n      @param {Object} options\n        @param {Object} [options.height] height of component in layout\n        @param {Object} [options.width] width of component in layout\n    */\n    setLayout: function(x, y, options) {\n      var margins = this.margins();\n\n      if (this.centered()) {\n        var actual_dimensions = dimensions(this.base);\n        if ('height' in options)\n          y += (options.height - actual_dimensions.height) / 2;\n        else\n          y += margins.top;\n\n        if ('width' in options)\n          x += (options.width - actual_dimensions.width) / 2;\n        else\n          x += margins.left;\n      }\n      else {\n        x += margins.left;\n        y += margins.top;\n      }\n\n      this.base.attr('transform', translate(x, y));\n      this.height(options && options.height);\n      this.width(options && options.width);\n    }\n  }, {\n    /**\n      Default z-index for component\n      (Charts are 100 by default, so Component = 50 is below chart by default)\n\n      @example\n      ```js\n      d3.chart('Component').extend('AboveChartLayers', {\n        // ...\n      }, {\n        z_index: 150\n      });\n      ```\n      @attribute z_index\n      @static\n      @type Number\n      @default 50\n    */\n    z_index: 50,\n\n    /**\n      Set to `'chart'` to use chart layer for component.\n      (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\n\n      @example\n      ```js\n      d3.chart('Component').extend('ChartComponent', {\n        // ...\n      }, {\n        layer_type: 'chart'\n      });\n      ```\n      @attribute layer_type\n      @static\n      @type String\n      @default 'component'\n    */\n    layer_type: 'component'\n  });\n\n  d3.chart().Component = Component;\n\n  /**\n    Common base for creating overlays that includes helpers for positioning and show/hide.\n\n    ### Extending\n\n    Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\n\n    - To adjust positioning, override `position`\n    - To adjust show/hide behavior, override `show`/`hide`\n\n    @example\n    ```js\n    d3.chart('Overlay').extend('ClosestPoints', {\n      // TODO\n    });\n    ```\n    @class Overlay\n    @extends Component\n  */\n  var Overlay = Component.extend({\n    initialize: function(options) {\n      Component.prototype.initialize.call(this, options);\n      this.base.attr('style', this.style());\n    },\n    skip_layout: true,\n\n    /**\n      Overlay's top-left x-position in px from left\n\n      @property x\n      @type Number\n      @default 0\n    */\n    x: property({\n      default_value: 0\n    }),\n\n    /**\n      Overlay's top-left y-position in px from top\n\n      @property y\n      @type Number\n      @default 0\n    */\n    y: property({\n      default_value: 0\n    }),\n\n    /**\n      Whether overlay is currently hidden\n\n      @property hidden\n      @type Boolean\n      @default true\n    */\n    hidden: property({\n      default_value: true\n    }),\n\n    /**\n      Overlays base styling\n      (default includes position and hidden)\n\n      @property style\n      @type String\n      @default set from x, y, and hidden\n    */\n    style: property({\n      default_value: function() {\n        var transform = translate(this.x() + 'px', this.y() + 'px');\n        var styles = {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          '-webkit-transform': transform,\n          '-ms-transform': transform,\n          transform: transform\n        };\n\n        if (this.hidden())\n          styles.display = 'none';\n\n        return src_helpers__style(styles);\n      }\n    }),\n\n    /**\n      Position overlay layer at given x,y coordinates\n\n      @example\n      ```js\n      // Absolute, x: 100, y: 50\n      overlay.position(100, 50);\n      overlay.position({x: 100, y: 50});\n\n      // Relative-to-chart, x: 50, y: 40\n      overlay.position({chart: {x: 50, y: 40}});\n\n      // Relative-to-container, x: 75, y: 50\n      overlay.position({container: {x: 75, y: 50}});\n      ```\n      @method position\n      @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\n      @param {Number} [y] in px from top\n    */\n    // TODO This conflicts with component.position(), might need a rename\n    position: function(position, y) {\n      if (arguments.length > 1) {\n        position = {\n          x: position,\n          y: y\n        };\n      }\n      else {\n        if ('container' in position) {\n          position = this.getAbsolutePosition(position.container);\n        }\n        else if ('chart' in position) {\n          if (this.container) {\n            var chart = this.container.chartPosition();\n            position = this.getAbsolutePosition({\n              x: position.chart.x + chart.left,\n              y: position.chart.y + chart.top\n            });\n          }\n          else {\n            position = this.getAbsolutePosition(position.chart);\n          }\n        }\n      }\n\n      this.x(position.x).y(position.y);\n      this.base.attr('style', this.style());\n    },\n\n    /**\n      Show overlay (with `display: block`)\n\n      @method show\n    */\n    show: function() {\n      this.hidden(false);\n      this.base.attr('style', this.style());\n    },\n\n    /**\n      Hide overlay (with `display: none`)\n\n      @method hide\n    */\n    hide: function() {\n      this.hidden(true);\n      this.base.attr('style', this.style());\n    },\n\n    /**\n      Get absolute position from container position\n      (needed since container position uses viewBox and needs to be scaled to absolute position)\n\n      @method getAbsolutePosition\n      @param {Object} container_position ({x, y})\n      @return {Object} absolute {x, y} relative to container div\n    */\n    getAbsolutePosition: function(container_position) {\n      var container = this.container && this.container.container;\n\n      if (container && this.container.responsive()) {\n        var container_dimensions = dimensions(container);\n        var chart_width = this.container.width();\n        var chart_height = this.container.height();\n        var width_ratio = container_dimensions.width / chart_width;\n        var height_ratio = container_dimensions.height / chart_height;\n\n        return {\n          x: width_ratio * container_position.x,\n          y: height_ratio * container_position.y\n        };\n      }\n      else {\n        // Not attached so can't get actual dimensions\n        // fallback to container position\n        return container_position;\n      }\n    }\n  }, {\n    layer_type: 'overlay'\n  });\n\n  d3.chart().Overlay = Overlay;\n\n  /*\n    Extract layout from the given options\n\n    @param {Array} options\n    @return {Object} {data, items, layout}\n  */\n  function extractLayout(options) {\n    if (!options)\n      return;\n\n    var data = {\n      _charts: {},\n      _components: {}\n    };\n    var items = {};\n    var layout = [];\n    var charts = [];\n    var components = [];\n\n    // TEMP Idenfify charts from layered,\n    // eventually no distinction between charts and components\n    var found = {\n      row: false,\n      charts: false\n    };\n\n    // Components are added from inside-out\n    // so for position: top, position: left, use unshift\n    options.forEach(function(row, row_index) {\n      var row_components = [];\n\n      if (!Array.isArray(row))\n        row = [row];\n      if (row.length > 1)\n        found.row = true;\n\n      var row_layout = row.map(function(item, col_index) {\n        if (!item)\n          return;\n\n        if (item._layered) {\n          // Charts\n          found.charts = found.row = true;\n          var chart_ids = [];\n\n          item.items.forEach(function(chart, chart_index) {\n            if (!chart)\n              return;\n\n            chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\n\n            chart_ids.push(chart.id);\n            charts.push(chart);\n            items[chart.id] = chart;\n          });\n\n          return chart_ids;\n        }\n\n        var component = prepareComponent(item, row_index, col_index);\n        items[component.id] = component;\n\n        if (row.length > 1) {\n          if (!found.charts) {\n            // Left\n            setPosition(component, 'left');\n            row_components.unshift(component);\n          }\n          else {\n            // Right\n            setPosition(component, 'right');\n            row_components.push(component);\n          }\n        }\n        else {\n          if (!found.row) {\n            // Top\n            setPosition(component, 'top');\n            components.unshift(component);\n          }\n          else {\n            // Bottom\n            setPosition(component, 'bottom');\n            components.push(component);\n          }\n        }\n\n        return component.id;\n      });\n\n      if (row_components.length)\n        components = components.concat(row_components);\n\n      layout.push(row_layout);\n    });\n\n    charts.forEach(extractData('_charts'));\n    components.forEach(extractData('_components'));\n\n    return {\n      data: data,\n      items: items,\n      layout: layout,\n\n      charts: charts,\n      components: components\n    };\n\n    function prepareComponent(component, row_index, col_index) {\n      return defaults({}, component, {id: getId(row_index, col_index)});\n    }\n    function setPosition(component, position) {\n      if (component && isFunction(component.position))\n        component.position(position);\n      else\n        component.position = position;\n    }\n    function getId(row_index, col_index, layered_index) {\n      var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\n      if (layered_index != null)\n        id += '-' + (layered_index + 1);\n\n      return id;\n    }\n\n    function extractData(type) {\n      return function(item) {\n        if (item.data && !isFunction(item.data)) {\n          data[type][item.id] = item.data;\n          data[item.id] = item.data;\n          delete item.data;\n        }\n      };\n    }\n  }\n\n  /*\n    Calculate component and chart coordinates for given layout\n  */\n  function calculateLayout(components, data, demux) {\n    var overall_layout = {top: [], right: [], bottom: [], left: []};\n    components.forEach(function(component) {\n      if (component.skip_layout || !component.getLayout)\n        return;\n\n      var layout = component.getLayout(demux(component.id, data));\n      var position = layout && layout.position;\n\n      if (!contains(['top', 'right', 'bottom', 'left'], position))\n        return;\n\n      overall_layout[position].push({\n        offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\n        component: component\n      });\n    });\n\n    return overall_layout;\n  }\n\n  /*\n    Apply calculated layout to charts and components\n  */\n  function applyLayout(layout, chart_position, width, height) {\n    layout.top.reduce(function(previous, part) {\n      var y = previous - part.offset;\n      setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n      return y;\n    }, chart_position.top);\n\n    layout.right.reduce(function(previous, part, index, parts) {\n      var previousPart = parts[index - 1] || {offset: 0};\n      var x = previous + previousPart.offset;\n      setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n      return x;\n    }, width - chart_position.right);\n\n    layout.bottom.reduce(function(previous, part, index, parts) {\n      var previousPart = parts[index - 1] || {offset: 0};\n      var y = previous + previousPart.offset;\n      setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n      return y;\n    }, height - chart_position.bottom);\n\n    layout.left.reduce(function(previous, part) {\n      var x = previous - part.offset;\n      setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n      return x;\n    }, chart_position.left);\n\n    function setLayout(component, x, y, options) {\n      if (component && isFunction(component.setLayout))\n        component.setLayout(x, y, options);\n    }\n  }\n\n  var default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\n\n  /**\n    Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\n    Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\n\n    @example\n    ```html\n    <div id=\"#chart\"></div>\n    ```\n    ```js\n    var chart = d3.select('#chart').chart('Compose', function(data) {\n      // Process data...\n\n      // Create shared scales\n      var scales = {\n        x: {data: data.input, key: 'x', adjacent: true},\n        y: {data: data.input, key: 'y'},\n        y2: {data: data.output, key: 'y'}\n      };\n\n      // Setup charts and components\n      var charts = [\n        d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\n        d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\n      ];\n\n      var title = d3c.title('d3.compose');\n      var xAxis = d3c.axis('xAxis', {scale: scales.x});\n      var yAxis = d3c.axis('yAxis', {scale: scales.y});\n      var y2Axis = d3c.axis('y2Axis', {scale: scales.y2});\n\n      // Layout charts and components\n      return [\n        title,\n        [yAxis, d3c.layered(charts), y2Axis],\n        xAxis\n      ];;\n    });\n\n    chart.draw({input: [...], output: [...]});\n    ```\n    @class Compose\n    @extends Base\n  */\n  var Compose = Base.extend({\n    initialize: function(options) {\n      Base.prototype.initialize.call(this, options);\n\n      // Responsive svg based on the following approach (embedded + padding hack)\n      // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\n      // (not enabled if selection is svg)\n      if (this.base.node().tagName != 'svg') {\n        this.container = this.base.append('div')\n          .attr('class', 'chart-compose-container');\n\n        this.base = this.container.append('svg')\n          .attr('xlmns', 'http://www.w3.org/2000/svg')\n          .attr('version', '1.1')\n          .attr('class', 'chart-compose');\n      }\n      else {\n        this.base.classed('chart-compose', true);\n      }\n\n      this.attachHoverListeners();\n    },\n\n    transform: function(data) {\n      // Save raw data for redraw\n      this.rawData(data);\n      return Base.prototype.transform.call(this, data);\n    },\n\n    /**\n      Get/set the options `object/function` for the chart that takes `data` and\n      returns `[...layout]` for composing child charts and components.\n\n      @example\n      ```js\n      // get\n      chart.options();\n\n      // set (static)\n      chart.options([\n        // ...\n      ]);\n\n      // set (dynamic, takes data and returns options)\n      chart.options(function(data) {\n        // process data...\n\n        return [\n          // ...\n        ];\n      });\n\n      // Set directly from d3.chart creation\n      d3.select('#chart')\n        .chart('Compose', function(data) {\n          // ...\n        });\n      ```\n      @property options\n      @type Function|Object\n    */\n    options: property({\n      default_value: function() { return function() {}; },\n      set: function(options) {\n        // If options is plain object,\n        // return from generic options function\n        if (!isFunction(options)) {\n          return {\n            override: function() {\n              return options;\n            }\n          };\n        }\n      }\n    }),\n\n    // Store raw data for container before it has been transformed\n    rawData: property(),\n\n    /**\n      Margins between edge of container and components/chart\n\n      @example\n      ```js\n      chart.margins({top: 10, right: 20, bottom: 10, left: 20});\n      ```\n      @property margins\n      @type Object {top, right, bottom, left}\n      @default {top: 10, right: 10, bottom: 10, left: 10}\n    */\n    margins: property({\n      default_value: default_compose_margins,\n      set: function(values) {\n        return {\n          override: getMargins(values, default_compose_margins)\n        };\n      }\n    }),\n\n    // Chart position\n    chartPosition: property({\n      default_value: {top: 0, right: 0, bottom: 0, left: 0},\n      set: function(values) {\n        return {\n          override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\n        };\n      },\n      get: function(values) {\n        values.width = this._width() - values.right - values.left;\n        values.height = this._height() - values.bottom - values.top;\n\n        return values;\n      }\n    }),\n\n    /**\n      Get/set overall width of chart\n\n      @property width\n      @type Number\n    */\n    width: property({\n      default_value: null\n    }),\n\n    /**\n      Get/set overall height of chart\n\n      @property height\n      @type Number\n    */\n    height: property({\n      default_value: null\n    }),\n\n    _width: function() {\n      var width = this.width();\n      return width != null ? width : Base.prototype.width.call(this);\n    },\n    _height: function() {\n      var height = this.height();\n      return height != null ? height : Base.prototype.height.call(this);\n    },\n\n    /**\n      Enable responsive container + viewBox so that chart scales to fill width\n      (only works if selection is not an svg)\n\n      @property responsive\n      @type Boolean\n      @default true\n    */\n    responsive: property({\n      default_value: true\n    }),\n\n    // Set svg viewBox attribute\n    viewBox: property({\n      default_value: function() {\n        if (this.responsive() && this.width() && this.height())\n          return '0 0 ' + this.width() + ' ' + this.height();\n        else\n          return null;\n      }\n    }),\n\n    // Set svg preserveAspectRatio attribute\n    preserveAspectRatio: property({\n      default_value: function() {\n        if (this.responsive())\n          return 'xMidYMid meet';\n        else\n          return null;\n      }\n    }),\n\n    // Set container style\n    containerStyle: property({\n      default_value: function() {\n        if (this.responsive()) {\n          var aspect_ratio = 1;\n          if (this.width() && this.height())\n            aspect_ratio = this.height() / this.width();\n\n          return src_helpers__style({\n            width: '100%',\n            height: 0,\n            'padding-top': (aspect_ratio * 100) + '%',\n            position: 'relative'\n          });\n        }\n        else {\n          return src_helpers__style({position: 'relative'});\n        }\n      }\n    }),\n\n    // Set base style\n    baseStyle: property({\n      default_value: function() {\n        if (this.responsive() && this.container) {\n          return src_helpers__style({\n            position: 'absolute',\n            top: 0,\n            left: 0\n          });\n        }\n        else {\n          return null;\n        }\n      }\n    }),\n\n    /**\n      Set charts from options or get chart instances.\n      Each chart should use a unique key so that updates are passed to the existing chart\n      (otherwise they are recreated on update).\n      The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\n\n      @example\n      ```js\n      chart.charts([\n        {id: 'input', type: 'Bars'}, // options to pass to Bars chart\n        {id: 'output', type: 'Lines'} // options to pass to Lines chart\n      ]);\n      ```\n      @property charts\n      @type Array\n    */\n    charts: property({\n      set: function(chart_options, charts) {\n        // Store actual charts rather than options\n        return {\n          override: this._attachItems(chart_options, charts, this)\n        };\n      },\n      default_value: []\n    }),\n\n    /**\n      Set components from options or get components instances.\n      Each component should use a unique key so that updates are passed to the existing chart\n      (otherwise they are recreated on update).\n      The `type` option must be a registered `d3.chart` and all other options are passed to the component.\n\n      @example\n      ```js\n      chart.components([\n        {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\n        {id: 'title', type: 'Title'} // options to pass to Title component\n      ])\n      ```\n      @property components\n      @type Array\n    */\n    components: property({\n      set: function(component_options, components) {\n        // Store actual components rather than options\n        return {\n          override: this._attachItems(component_options, components, this)\n        };\n      },\n      default_value: []\n    }),\n\n    /**\n      Delay start of transition by specified milliseconds.\n      (applied to all charts and components as default)\n\n      @property delay\n      @type Number|Function\n      @default d3 default: 0\n    */\n    delay: property(),\n\n    /**\n      Transition duration in milliseconds.\n      (applied to all charts and components as default)\n\n      @property duration\n      @type Number|Function\n      @default d3 default: 250ms\n    */\n    duration: property(),\n\n    /**\n      Transition ease function.\n      (applied to all charts and components as default)\n\n      - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\n      - Note: arguments to pass to `d3.ease` are not supported\n\n      @property ease\n      @type String|Function\n      @default d3 default: 'cubic-in-out'\n    */\n    ease: property(),\n\n    /**\n      Draw chart with given data\n\n      @example\n      ```js\n      var chart = d3.select('#chart')\n        .chart('Compose', function(data) {\n          // ...\n        });\n\n      chart.draw([1, 2, 3]);\n\n      chart.draw({values: [1, 2, 3]});\n\n      chart.draw([\n        {values: [1, 2, 3]},\n        {values: [4, 5, 6]}\n      ]);\n      ```\n      @method draw\n      @param {Any} data\n    */\n    draw: function(data) {\n      var config = this._prepareConfig(this.options(), data);\n      if (!config)\n        config = {data: {_charts: {}, _components: {}}, layout: [], charts: [], components: []};\n\n      // Set charts and components from config\n      this.charts(config.charts);\n      this.components(config.components);\n\n      // Add config data\n      data = {\n        original: data,\n        config: config.data\n      };\n      this.data(data);\n\n      this._setDimensions();\n\n      // Layout components\n      this.layout(config.layout, data);\n\n      // Full draw now that everything has been laid out\n      d3.chart().prototype.draw.call(this, data);\n    },\n\n    /**\n      Redraw chart with current data\n\n      @method redraw\n    */\n    redraw: function() {\n      if (this.rawData())\n        this.draw(this.rawData().original);\n    },\n\n    demux: function(name, data) {\n      if (!data || !data.config || !data.original)\n        return data;\n\n      if (findById(this.charts(), name) && data.config._charts[name])\n        return data.config._charts[name];\n      else if (findById(this.components(), name) && data.config._components[name])\n        return data.config._components[name];\n      else\n        return data.original;\n    },\n\n    // Create chart layer (for laying out charts)\n    createChartLayer: function(options) {\n      return this.base.append('g')\n        .attr('class', 'chart-layer')\n        .attr('data-zIndex', options && options.z_index);\n    },\n\n    // Create component layer\n    createComponentLayer: function(options) {\n      return this.base.append('g')\n        .attr('class', 'chart-component-layer')\n        .attr('data-zIndex', options && options.z_index);\n    },\n\n    // Create overlay layer\n    createOverlayLayer: function() {\n      if (!this.container)\n        throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\n\n      return this.container.append('div')\n        .attr('class', 'chart-overlay-layer');\n    },\n\n    // Layout components and charts for given data\n    layout: function(layout, data) {\n      // 1. Place chart layers\n      this._positionChartLayers();\n\n      // 2. Extract layout from components\n      layout = this._extractLayout(data);\n\n      // 3. Set chart position from layout\n      var chart_position = extend({}, this.margins());\n      objectEach(layout, function(parts, key) {\n        parts.forEach(function(part) {\n          chart_position[key] += part.offset || 0;\n        });\n      });\n      this.chartPosition(chart_position);\n\n      // 4. Position layers with layout\n      this.positionLayers(layout);\n    },\n\n    attachHoverListeners: function() {\n      // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\n      // For non-responsive, bounding rectangle is container so calculations still apply\n\n      var trigger = this.trigger.bind(this);\n      var chartPosition = this.chartPosition.bind(this);\n      var container = this.container || this.base;\n      var base = this.base.node();\n      var chart_position, bounds, was_inside;\n\n      container.on('mouseenter', function() {\n        // Calculate chart position and bounds on enter and cache during move\n        chart_position = chartPosition();\n        bounds = getBounds();\n\n        was_inside = inside(bounds);\n        if (was_inside)\n          enter();\n      });\n      container.on('mousemove', function() {\n        // Mousemove may fire before mouseenter in IE\n        if (!chart_position || !bounds) {\n          chart_position = chartPosition();\n          bounds = getBounds();\n        }\n\n        var is_inside = inside(bounds);\n        if (was_inside && is_inside)\n          move();\n        else if (was_inside)\n          leave();\n        else if (is_inside)\n          enter();\n\n        was_inside = is_inside;\n      });\n      container.on('mouseleave', function() {\n        if (was_inside) {\n          was_inside = false;\n          leave();\n        }\n      });\n\n      function inside() {\n        var mouse = d3.mouse(document.documentElement);\n        return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\n      }\n      function enter() {\n        trigger('mouseenter', translateToXY(d3.mouse(base)));\n      }\n      function move() {\n        trigger('mousemove', translateToXY(d3.mouse(base)));\n      }\n      function leave() {\n        trigger('mouseleave');\n      }\n\n      function translateToXY(coordinates) {\n        var x = coordinates[0];\n        var y = coordinates[1];\n        var chart_x = x - chart_position.left;\n        var chart_y = y - chart_position.top;\n\n        // Set at chart bounds if outside of chart\n        if (x > (chart_position.left + chart_position.width))\n          chart_x = chart_position.width;\n        else if (x < chart_position.left)\n          chart_x = 0;\n\n        if (y > (chart_position.top + chart_position.height))\n          chart_y = chart_position.height;\n        else if (y < chart_position.top)\n          chart_y = 0;\n\n        return {\n          container: {x: x, y: y},\n          chart: {x: chart_x, y: chart_y}\n        };\n      }\n\n      function getBounds() {\n        var scroll_y = 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop;\n\n        bounds = extend({}, base.getBoundingClientRect());\n        bounds.top += scroll_y;\n        bounds.bottom += scroll_y;\n\n        return bounds;\n      }\n    },\n\n    // Attach chart/component child item with id\n    attach: function(id, item) {\n      item.id = id;\n      item.base.attr('data-id', id);\n      item.container = this;\n\n      Base.prototype.attach.call(this, id, item);\n\n      if (item && isFunction(item.trigger))\n        item.trigger('attach');\n    },\n\n    // Detach chart/component child item by id\n    detach: function(id, item) {\n      item.base.remove();\n\n      delete this._attached[id];\n\n      if (item && isFunction(item.trigger))\n        item.trigger('detach');\n    },\n\n    // Position chart and component layers\n    positionLayers: function(layout) {\n      this._positionChartLayers();\n      this._positionComponents(layout);\n      this._positionByZIndex();\n    },\n\n    //\n    // Internal\n    //\n\n    _setDimensions: function() {\n      // Set container and svg dimensions\n      // (if original selection is svg, no container and skip responsiveness)\n      if (this.container) {\n        this.container\n          .attr('style', this.containerStyle());\n      }\n\n      this.base\n        .attr('viewBox', this.viewBox())\n        .attr('preserveAspectRatio', this.preserveAspectRatio())\n        .attr('style', this.baseStyle())\n        .attr('width', this.responsive() ? null : this.width())\n        .attr('height', this.responsive() ? null : this.height());\n    },\n\n    _attachItems: function(items, container, context) {\n      items = items || [];\n      container = container || [];\n\n      // Remove charts that are no longer needed\n      var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\n      remove_ids.forEach(function(remove_id) {\n        context.detach(remove_id, findById(container, remove_id));\n      });\n\n      // Create or update charts\n      return items.map(function(options) {\n        // TODO May not have id, might need to auto-generate\n        // (might be during another step)\n        var id = options.id;\n        var item = findById(container, id);\n\n        if (options instanceof d3.chart()) {\n          // If chart instance, replace with instance\n          if (item)\n            context.detach(id, item);\n\n          context.attach(id, options);\n          return options;\n        }\n        else {\n          // TEMP Changing position has nasty side effects, disable for now\n          var changed_position = item && !(item instanceof Overlay) && item.position && options.position && item.position() != options.position;\n\n          if (item && (item.type != options.type || changed_position)) {\n            // If chart type has changed, detach and re-create\n            context.detach(id, item);\n            item = undefined;\n          }\n\n          if (!item) {\n            var Item = d3.chart(options.type);\n\n            if (!Item)\n              throw new Error('No registered d3.chart found for ' + options.type);\n\n            var layer_options = {z_index: Item.z_index || 0};\n            var createLayer = {\n              'chart': 'createChartLayer',\n              'component': 'createComponentLayer',\n              'overlay': 'createOverlayLayer'\n            }[Item.layer_type];\n\n            if (!createLayer)\n              throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\n\n            var base = context[createLayer](layer_options);\n\n            item = new Item(base, options);\n            item.type = options.type;\n\n            context.attach(id, item);\n          }\n          else {\n            item.options(options);\n          }\n\n          return item;\n        }\n      });\n    },\n\n    _prepareConfig: function(options, data) {\n      return extractLayout(options(data));\n    },\n\n    _positionChartLayers: function() {\n      var position = this.chartPosition();\n      this.base.selectAll('.chart-layer')\n        .attr('transform', translate(position.left, position.top))\n        .attr('width', position.width)\n        .attr('height', position.height);\n    },\n\n    _positionComponents: function(layout) {\n      var chart_position = this.chartPosition();\n      var width = this._width();\n      var height = this._height();\n\n      applyLayout(layout, chart_position, width, height);\n    },\n\n    _positionByZIndex: function() {\n      var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\n\n      // Sort by z-index\n      function setZIndex(layer) {\n        return {\n          layer: layer,\n          zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\n        };\n      }\n      function sortZIndex(a, b) {\n        if (a.zIndex < b.zIndex)\n          return -1;\n        else if (a.zIndex > b.zIndex)\n          return 1;\n        else\n          return 0;\n      }\n      function getLayer(wrapped) {\n        return wrapped.layer;\n      }\n\n      layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\n\n      // Move layers to z-index order\n      layers.forEach(function(layer) {\n        if (layer && layer.parentNode && layer.parentNode.appendChild)\n          layer.parentNode.appendChild(layer);\n      });\n    },\n\n    _extractLayout: function(data) {\n      return calculateLayout(this.components(), data, this.demux.bind(this));\n    }\n  });\n\n  // TODO Find better place for this\n  function layered(items) {\n    if (!Array.isArray(items))\n      items = Array.prototype.slice.call(arguments);\n\n    return {_layered: true, items: items};\n  }\n\n  function findById(items, id) {\n    return find(items, function(item) {\n      return item.id == id;\n    });\n  }\n\n  d3.chart().Compose = Compose;\n\n  var d3c = d3.compose = {\n    VERSION: '0.15.9',\n    utils: utils,\n    helpers: helpers,\n    Base: Base,\n    Chart: src_Chart,\n    Component: Component,\n    Overlay: Overlay,\n    Compose: Compose,\n    layered: layered\n  };\n\n  var d3_compose = d3c;\n\n  return d3_compose;\n\n}));\n","// Many utils inlined from Underscore.js\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\nexport var slice = Array.prototype.slice;\nexport var toString = Object.prototype.toString;\n\nfunction _extend(target, extensions, undefined_only) {\n  for (var i = 0, length = extensions.length; i < length; i++) {\n    for (var key in extensions[i]) {\n      if (!undefined_only || target[key] === void 0)\n        target[key] = extensions[i][key];\n    }\n  }\n\n  return target;\n}\n\nexport function contains(arr, item) {\n  return arr.indexOf(item) >= 0;\n}\n\nexport function compact(arr) {\n  return arr.filter(function(item) {\n    return item;\n  });\n}\n\nexport function difference(a, b) {\n  return a.filter(function(value) {\n    return b.indexOf(value) < 0;\n  });\n}\n\nexport function defaults(target) {\n  return _extend(target, slice.call(arguments, 1), true);\n}\n\nexport function extend(target) {\n  return _extend(target, slice.call(arguments, 1));\n}\n\nexport function flatten(arr) {\n  // Assumes all items in arr are arrays and only flattens one level\n  return arr.reduce(function(memo, item) {\n    return memo.concat(item);\n  }, []);\n}\n\nexport function find(arr, fn, context) {\n  if (!arr) return;\n  for (var i = 0, length = arr.length; i < length; i++) {\n    if (fn.call(context, arr[i], i, arr))\n      return arr[i];\n  }\n}\n\nexport function first(arr, n) {\n  if (arr == null) return void 0;\n  if (n == null) return arr[0];\n  return Array.prototype.slice.call(arr, 0, n);\n}\n\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\nexport function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || type === 'object' && !!obj;\n}\nexport function isNumber(obj) {\n  return toString.call(obj) === '[object Number]';\n}\nexport function isString(obj) {\n  return toString.call(obj) === '[object String]';\n}\nexport function isUndefined(obj) {\n  return obj === void 0;\n}\n\nexport var isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\nif (typeof /./ != 'function' && typeof Int8Array != 'object') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport function objectEach(obj, fn, context) {\n  if (!obj) return;\n  var keys = Object.keys(obj);\n  for (var i = 0, length = keys.length; i < length; i++) {\n    fn.call(context, obj[keys[i]], keys[i], obj);\n  }\n}\n\nexport function objectFind(obj, fn, context) {\n  if (!obj) return;\n  var keys = Object.keys(obj);\n  for (var i = 0, length = keys.length; i < length; i++) {\n    if (fn.call(context, obj[keys[i]], keys[i], obj))\n      return obj[keys[i]];\n  }\n}\n\nexport function pluck(objs, key) {\n  if (!objs) return [];\n  return objs.map(function(obj) {\n    return obj[key];\n  });\n}\n\nexport function uniq(arr) {\n  var result = [];\n  for (var i = 0, length = arr.length; i < length; i++) {\n    if (result.indexOf(arr[i]) < 0)\n      result.push(arr[i]);\n  }\n  return result;\n}\n\nexport function inherits(Child, Parent) {\n  Child.prototype = Object.create(Parent.prototype, {\n    constructor: {\n      value: Child,\n      enumerable: false,\n      writeable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(Child, Parent);\n  }\n  else {\n    Child.__proto__ = Parent; //eslint-disable-line no-proto\n\n    // __proto__ isn't supported in IE,\n    // use one-time copy of static properties to approximate\n    defaults(Child, Parent);\n  }\n}\n\n// If value isn't `undefined`, return `value`, otherwise use `default_value`\n//\n// @method valueOrDefault\n// @param {Any} [value]\n// @param {Any} default_value\n// @return {Any}\nexport function valueOrDefault(value, default_value) {\n  return !isUndefined(value) ? value : default_value;\n}\n\nvar utils = {\n  slice: slice,\n  toString: toString,\n  contains: contains,\n  compact: compact,\n  difference: difference,\n  defaults: defaults,\n  extend: extend,\n  flatten: flatten,\n  find: find,\n  first: first,\n  isBoolean: isBoolean,\n  isFunction: isFunction,\n  isObject: isObject,\n  isNumber: isNumber,\n  isString: isString,\n  isUndefined: isUndefined,\n  objectEach: objectEach,\n  objectFind: objectFind,\n  pluck: pluck,\n  uniq: uniq,\n  inherits: inherits,\n  valueOrDefault: valueOrDefault\n};\nexport default utils;\n","import {\n  isFunction,\n  isUndefined,\n  valueOrDefault\n} from '../utils';\nvar unique_index = 0;\n\n/**\n  Helper for creating properties for charts/components\n\n  @example\n  ```javascript\n  var Custom = d3.chart('Chart').extend('Custom', {\n    // Create property that's stored internally as 'simple'\n    simple: property()\n  });\n  var custom; // = new Custom(...);\n\n  // set\n  custom.simple('Howdy');\n\n  // get\n  console.log(custom.simple()); // -> 'Howdy'\n\n  // Advanced\n  // --------\n  // Default values:\n  Custom.prototype.message = property({\n    default_value: 'Howdy!'\n  });\n\n  console.log(custom.message()); // -> 'Howdy!'\n  custom.message('Goodbye');\n  console.log(custom.message()); // -> 'Goodbye'\n\n  // Set to undefined to reset to default value\n  custom.message(undefined);\n  console.log(custom.message()); // -> 'Howdy!'\n\n  // Computed default value:\n  Custom.property.computed = property({\n    default_value: function() {\n      // \"this\" = Custom instance\n      return this.message();\n    }\n  });\n\n  // Function default value:\n  // For function default_values, wrap in function to differentiate from computed\n  Custom.property.fn = property({\n    default_value: function() {\n      return function defaultFn() {};\n    }\n    // The following would be incorrectly evaluated\n    // default_value: function defaultFn() {}\n  })\n\n  // Custom getter:\n  Custom.prototype.exclaimed = property({\n    get: function(value) {\n      // Value is the underlying set value\n      return value + '!';\n    }\n  });\n\n  custom.exclaimed('Howdy');\n  console.log(custom.exclaimed()); // -> 'Howdy!'\n\n  // Custom setter:\n  Custom.prototype.feeling = property({\n    set: function(value, previous) {\n      if (value == 'Hate') {\n        // To override value, return Object with override specified\n        return {\n          override: 'Love',\n\n          // To do something after override, use after callback\n          after: function() {\n            console.log('After: ' + this.feeling()); // -> 'After: Love'\n          }\n        };\n      }\n    }\n\n    custom.feeling('Hate'); // -> 'After: Love'\n    console.log(custom.feeling()); // -> 'Love'\n  });\n  ```\n  @method property\n  @for helpers\n  @param {Object} [options]\n  @param {Any} [options.default_value] default value for property (when set value is `undefined`). If default value is a function, wrap in another function as default_value is evaluated by default.\n  @param {Function} [options.get] `function(value) {return ...}` getter, where `value` is the stored value and return desired value\n  @param {Function} [options.set] `function(value, previous) {return {override, after}}`. Return `override` to override stored value and `after()` to run after set\n  @param {Object} [options.context=this] context to evaluate get/set/after functions\n  @return {Function} `()`: get, `(value)`: set\n*/\nexport default function property(options) {\n  // DEPRECATED: name as first argument\n  if (arguments.length == 2) {\n    if (typeof console != 'undefined' && console.warn)\n      console.warn('DEPRECATED - name argument for property is no longer supported will be removed in the next version of d3.compose');\n    options = arguments[1];\n  }\n\n  options = options || {};\n  var id = 'property_' + unique_index++;\n\n  var property = function(value) {//eslint-disable-line no-shadow\n    var properties = this.__properties = this.__properties || {};\n    var context = valueOrDefault(property.context, this);\n\n    if (arguments.length)\n      return set.call(this);\n    else\n      return get.call(this);\n\n    function get() {\n      value = properties[id];\n\n      if (isUndefined(value)) {\n        // Use default value and unwrap if it's a function\n        value = property.default_value;\n        if (isFunction(value))\n          value = value.call(context);\n      }\n\n      return isFunction(options.get) ? options.get.call(context, value) : value;\n    }\n\n    function set() {\n      // Validate\n      if (isFunction(options.validate) && !isUndefined(value) && !options.validate.call(context, value))\n        throw new Error('Invalid value for property: ' + JSON.stringify(value));\n\n      var previous = properties[id];\n      properties[id] = value;\n\n      if (isFunction(options.set) && !isUndefined(value)) {\n        var response = options.set.call(context, value, previous);\n\n        if (response && 'override' in response)\n          properties[id] = response.override;\n        if (response && isFunction(response.after))\n          response.after.call(context, properties[id]);\n      }\n\n      return this;\n    }\n  };\n\n  // For checking if function is a property\n  property.is_property = true;\n  property.id = id;\n  property.set_from_options = valueOrDefault(options.set_from_options, true);\n  property.default_value = options.default_value;\n  property.context = options.context;\n  property.options = options;\n\n  return property;\n}\n","import d3 from 'd3';\n\n/**\n  Helper for robustly determining width/height of given selector.\n  Checks dimensions from css, attributes, and bounding box.\n\n  @method dimensions\n  @for helpers\n  @param {d3.Selection} selection\n  @return {Object} `{width, height}`\n*/\nexport default function dimensions(selection) {\n  // 1. Get width/height set via css (only valid for svg and some other elements)\n  var client = clientDimensions(selection);\n\n  if (client.width && client.height)\n    return client;\n\n  // 2. Get width/height set via attribute\n  var attr = attrDimensions(selection);\n\n  if (isSVG(selection)) {\n    return {\n      width: client.width != null ? client.width : attr.width || 0,\n      height: client.height != null ? client.height : attr.height || 0\n    };\n  }\n  else {\n    var bbox = bboxDimensions(selection);\n\n    // Size set by css -> client (only valid for svg and some other elements)\n    // Size set by svg -> attr override or bounding_box\n    // -> Take maximum\n    return {\n      width: d3.max([client.width, attr.width || bbox.width]) || 0,\n      height: d3.max([client.height, attr.height || bbox.height]) || 0\n    };\n  }\n}\n\nfunction clientDimensions(selection) {\n  var element = selection.node();\n\n  var client_dimensions = {\n    width: element && element.clientWidth,\n    height: element && element.clientHeight\n  };\n\n  // Issue: Firefox does not correctly calculate clientWidth/clientHeight for svg\n  //        calculate from css\n  //        http://stackoverflow.com/questions/13122790/how-to-get-svg-element-dimensions-in-firefox\n  //        Note: This makes assumptions about the box model in use and that width/height are not percent values\n  if (isSVG(selection) && (!element.clientWidth || !element.clientHeight) && typeof window !== 'undefined' && window.getComputedStyle) {\n    var styles = window.getComputedStyle(element);\n    client_dimensions.height = parseFloat(styles.height) - parseFloat(styles.borderTopWidth) - parseFloat(styles.borderBottomWidth);\n    client_dimensions.width = parseFloat(styles.width) - parseFloat(styles.borderLeftWidth) - parseFloat(styles.borderRightWidth);\n  }\n\n  return client_dimensions;\n}\n\nfunction attrDimensions(selection) {\n  return {\n    width: selection && selection.attr && parseFloat(selection.attr('width')),\n    height: selection && selection.attr && parseFloat(selection.attr('height'))\n  };\n}\n\nfunction bboxDimensions(selection) {\n  var element = selection.node();\n  var bbox;\n  try {\n    bbox = element && typeof element.getBBox == 'function' && element.getBBox();\n  }\n  catch(ex) {\n    // Firefox throws error when calling getBBox when svg hasn't been displayed\n    // Ignore error and set to empty\n    bbox = {width: 0, height: 0};\n  }\n\n  return bbox;\n}\n\nfunction isSVG(selection) {\n  return selection.node().nodeName == 'svg';\n}\n","import d3 from 'd3';\nimport {\n  isFunction,\n  extend,\n  objectEach,\n  uniq,\n  contains,\n  flatten\n} from '../utils';\nimport {\n  min,\n  max,\n  isSeriesData\n} from '../helpers';\n\n/**\n  Create scale from options\n\n  @example\n  ```javascript\n  // Simple type, range, and domain\n  var scale = createScale({\n    type: 'linear',\n    domain: [0, 100],\n    range: [0, 500]\n  });\n\n  // Calculate domain for data\n  var scale = createScale({\n    type: 'log',\n    data: [{y: 1}, {y: 100}, {y: 2000}, {y: 5000}],\n    key: 'y'\n  });\n\n  // Scale is passed through\n  var original = d3.scale.linear();\n  var scale = createScale(original);\n  scale === original;\n\n  // Set other properties by passing in \"arguments\" array\n  var scale = createScale({\n    type: 'ordinal',\n    domain: ['a', 'b', 'c', 'd', 'e'],\n    rangeRoundBands: [[0, 100], 0.1, 0.05] // -> rangeRoundBands([0, 100], 0.1, 0.05)\n  });\n\n  // Use ordinal + adjacent for bar charts\n  var scale = createScale({\n    type: 'ordinal',\n    adjacent: true,\n    domain: ['a', 'b', 'c'],\n    series: 2 // Series count is required for adjacent if data isn't given\n  })\n  ```\n  @method createScale\n  @for helpers\n  @param {Object|Function} options (passing in `Function` returns original function with no changes)\n  @param {String} [options.type='linear'] Any available `d3.scale` (`\"linear\"`, `\"ordinal\"`, `\"log\"`, etc.) or `\"time\"`\n  @param {Array} [options.domain] Domain for scale\n  @param {Array} [options.range] Range for scale\n  @param {Any} [options.data] Used to dynamically set domain (with given value or key)\n  @param {Function} [options.value] \"di\"-function for getting value for data\n  @param {String} [options.key] Data key to extract value\n  @param {Boolean} [options.centered] For \"ordinal\" scales, use centered x-values\n  @param {Boolean} [options.adjacent] For \"ordinal\" + centered, set x-values for different series next to each other\n\n  - Requires series-index as second argument to scale, otherwise centered x-value is used\n  - Requires \"data\" or \"series\" options to determine number of series\n  @param {Number} [options.series] Used with \"adjacent\" if no \"data\" is given to set series count\n  @param {Number} [options.padding=0.1] For \"ordinal\" scales, set padding between different x-values\n  @param {Array...} [options....] Set any other scale properties with array of arguments to pass to property\n  @return {d3.Scale}\n*/\nexport default function createScale(options) {\n  options = options || {};\n\n  // If function, scale was passed in as options\n  if (isFunction(options))\n    return options;\n\n  // Create scale (using d3.time.scale() if type is 'time')\n  var scale;\n  if (options.type == 'time')\n    scale = d3.time.scale();\n  else if (d3.scale[options.type])\n    scale = d3.scale[options.type]();\n  else\n    scale = d3.scale.linear();\n\n  objectEach(options, function(value, key) {\n    if (scale[key]) {\n      // If option is standard property (domain or range), pass in directly\n      // otherwise, pass in as arguments\n      // (don't pass through internal options)\n      if (key == 'range' || key == 'domain')\n        scale[key](value);\n      else if (!contains(['type', 'data', 'value', 'key', 'centered', 'adjacent', 'series', 'padding'], key))\n        scale[key].apply(scale, value);\n    }\n  });\n\n  if (!options.domain && options.data && (options.key || options.value))\n    scale = setDomain(scale, options);\n\n  // Add centered and adjacent extensions to ordinal\n  // (centered by default for ordinal)\n  var centered = options.centered || (options.type == 'ordinal' && options.centered == null);\n  if (options.type == 'ordinal' && (centered || options.adjacent))\n    scale = addCentered(scale, options);\n\n  // Add padding extension to ordinal\n  if (options.type == 'ordinal' && (options.padding != null || centered || options.adjacent))\n    scale = addPadding(scale, options);\n\n  return scale;\n}\n\nfunction setDomain(scale, options) {\n  // Use value \"di\" or create for key\n  var getValue = options.value || function(d) {\n    return d[options.key];\n  };\n\n  // Enforce series data\n  var data = options.data;\n  if (!isSeriesData(data))\n    data = [{values: data}];\n\n  var domain;\n  if (options.type == 'ordinal') {\n    // Domain for ordinal is array of unique values\n    domain = uniq(flatten(data.map(function(series) {\n      if (series && series.values)\n        return series.values.map(getValue);\n    })));\n  }\n  else {\n    var min_value = min(data, getValue);\n\n    domain = [\n      min_value < 0 ? min_value : 0,\n      max(data, getValue)\n    ];\n  }\n\n  scale.domain(domain);\n  return scale;\n}\n\nfunction addCentered(original, options) {\n  // Get series count for adjacent\n  var series_count = options.series || (!isSeriesData(options.data) ? 1 : options.data.length);\n\n  // TODO Look into removing closure\n  var scale = (function(original, options, series_count) {//eslint-disable-line no-shadow\n    var context = function(value, series_index) {\n      var width = context.width();\n\n      if (!options.adjacent)\n        series_index = 0;\n\n      return original(value) + (0.5 * width) + (width * (series_index || 0));\n    };\n    extend(context, original, {\n      width: function() {\n        var range_band = context.rangeBand && context.rangeBand();\n        var width = isFinite(range_band) ? range_band : 0;\n\n        if (options.adjacent)\n          width = width / series_count;\n\n        return width;\n      }\n    });\n\n    // TODO test copy() behavior\n\n    return context;\n  })(original, options, series_count);\n\n  return scale;\n}\n\nfunction addPadding(scale, options) {\n  var padding = options.padding != null ? options.padding : 0.1;\n\n  var original_range = scale.range;\n  scale.range = function(range) {\n    if (!arguments.length) return original_range();\n\n    scale.rangeBands(\n      range,\n      padding,\n      padding / 2\n    );\n  };\n\n  if (options.range)\n    scale.range(options.range);\n\n  // TODO test copy() behavior\n  return scale;\n}\n","import {\n  objectEach,\n  slice\n} from '../utils';\n\n/**\n  Combine mixins with Parent super class for extension\n\n  @example\n  ```js\n  var a = {transform: function() {}, a: 1};\n  var b = {initialize: function() {}, b: 2};\n  var c = {c: 3};\n\n  var Custom = mixin(Chart, a, b, c).extend({\n    initialize: function(options) {\n      this._super.initialize.call(this, options);\n      // d\n    },\n    transform: function(data) {\n      data = this._super.transform.call(this, data);\n      // d\n    }\n  });\n\n  // initialize: Chart, b, d\n  // transform: Chart, a, d\n  ```\n  @method mixin\n  @for helpers\n  @param {Function} Parent\n  @param {...Object} ...mixins\n  @return {Function}\n*/\nexport default function mixin(Parent/*, ...mixins*/) {\n  var mixins = slice.call(arguments, 1);\n  var initializes = [];\n  var transforms = [];\n  var mixed = {};\n\n  mixins.forEach(function(mix) {\n    objectEach(mix, function(value, key) {\n      if (key == 'initialize')\n        initializes.push(value);\n      else if (key == 'transform')\n        transforms.push(value);\n      else\n        mixed[key] = value;\n    });\n  });\n\n  if (initializes.length) {\n    mixed.initialize = function initialize() {\n      var args = slice.call(arguments);\n      Parent.prototype.initialize.apply(this, args);\n      initializes.forEach(function(init) {\n        init.apply(this, args);\n      }, this);\n    };\n  }\n\n  if (transforms.length) {\n    mixed.transform = function transform(data) {\n      data = Parent.prototype.transform.call(this, data);\n      return transforms.reduce(function(memo, trans) {\n        return trans.call(this, memo);\n      }.bind(this), data);\n    };\n  }\n\n  return Parent.extend(mixed);\n}\n","import { extend } from '../utils';\nimport { translate } from '../helpers';\n\n/**\n  Stack given array of elements vertically or horizontally\n\n  @example\n  ```js\n  // Stack all text elements vertically, from the top, with 0px padding\n  d3.selectAll('text').call(helpers.stack())\n\n  // Stack all text elements horizontally, from the right, with 5px padding\n  d3.selectAll('text').call(helpers.stack({\n    direction: 'horizontal',\n    origin: 'right',\n    padding: 5\n  }));\n  ```\n  @method stack\n  @for helpers\n  @param {Object} [options]\n  @param {String} [options.direction=vertical] `\"vertical\"` or `\"horizontal\"`\n  @param {String} [options.origin] `\"top\"`, `\"right\"`, `\"bottom\"`, or `\"left\"` (by default, `\"top\"` for `\"vertical\"` and `\"left\"` for `\"horizontal\"`)\n  @param {Number} [options.padding=0] padding (in px) between elements\n  @param {Number} [options.min_height=0] minimum spacing height (for vertical stacking)\n  @param {Number} [options.min_width=0]  minimum spacing width (for horizontal stacking)\n  @return {Function}\n*/\nexport default function stack(options) {\n  options = extend({\n    direction: 'vertical',\n    origin: 'top',\n    padding: 0,\n    min_height: 0,\n    min_width: 0\n  }, options);\n\n  // Ensure valid origin based on direction\n  if (options.direction == 'horizontal' && !(options.origin == 'left' || options.origin == 'right'))\n    options.origin = 'left';\n  else if (options.direction == 'vertical' && !(options.origin == 'top' || options.origin == 'bottom'))\n    options.origin = 'top';\n\n  function padding(i) {\n    return i > 0 && options.padding ? options.padding : 0;\n  }\n\n  return function(elements) {\n    if (elements && elements.attr) {\n      var previous = 0;\n\n      elements.attr('transform', function(d, i) {\n        var element_dimensions = this.getBBox();\n        var spacing_width = d3.max([element_dimensions.width, options.min_width]);\n        var spacing_height = d3.max([element_dimensions.height, options.min_height]);\n        var x = 0;\n        var y = 0;\n        var next_position;\n\n        if (options.direction == 'horizontal') {\n          next_position = previous + spacing_width + padding(i);\n\n          if (options.origin == 'left')\n            x = previous + padding(i);\n          else\n            x = next_position;\n\n          previous = next_position;\n        }\n        else {\n          next_position = previous + spacing_height + padding(i);\n\n          if (options.origin == 'top')\n            y = previous + padding(i);\n          else\n            y = next_position;\n\n          previous = next_position;\n        }\n\n        return translate(x, y);\n      });\n    }\n  };\n}\n","import d3 from 'd3';\nimport {\n  defaults,\n  extend,\n  first,\n  isNumber,\n  isObject,\n  objectEach\n} from './utils';\n\n/**\n  `d3.compose.helpers` includes general purpose helpers that are used throughout d3.compose.\n  Includes convenience functions for create charts/components (`property`, `di`, and `mixin`),\n  helpful calculations (`dimensions`, `max`, and `min`) and other common behavior.\n\n  @class helpers\n*/\n\nimport property from './helpers/property';\nimport dimensions from './helpers/dimensions';\nimport createScale from './helpers/create-scale';\nimport mixin from './helpers/mixin';\nimport stack from './helpers/stack';\n\n/**\n  Translate by (x, y) distance\n\n  @example\n  ```javascript\n  translate(10, 15) == 'translate(10, 15)'\n  translate({x: 10, y: 15}) == 'translate(10, 15)'\n  ```\n  @method translate\n  @param {Number|Object} [x] value or `{x, y}`\n  @param {Number} [y]\n  @return {String}\n*/\nexport function translate(x, y) {\n  if (isObject(x)) {\n    y = x.y;\n    x = x.x;\n  }\n\n  return 'translate(' + (x || 0) + ', ' + (y || 0) + ')';\n}\n\n/**\n  Rotate by degrees, with optional center\n\n  @method rotate\n  @param {Number} degrees\n  @param {Object} [center = {x: 0, y: 0}]\n  @return {String}\n*/\nexport function rotate(degrees, center) {\n  var rotation = 'rotate(' + (degrees || 0);\n  if (center)\n    rotation += ' ' + (center.x || 0) + ',' + (center.y || 0);\n  rotation += ')';\n\n  return rotation;\n}\n\n/**\n  Find vertical offset to vertically align text\n  (needed due to lack of `alignment-baseline` support in Firefox)\n\n  @example\n  ```js\n  var label = d3.select('text');\n\n  // Place label vertically so that origin is top-left\n  var offset = alignText(label);\n  label.attr('transform', translate(0, offset));\n\n  // Center label for line-height of 20px\n  var offset = alignText(label, 20);\n  label.attr('transform', translate(0, offset));\n  ```\n  @method alignText\n  @param {element} element\n  @param {Number} [line_height]\n  @return {Number} offset\n*/\nexport function alignText(element, line_height) {\n  var offset = 0;\n  try {\n    var height = element.getBBox().height;\n\n    var element_style = window.getComputedStyle(element);\n    var css_font_size = parseFloat(element_style['font-size']);\n    var css_line_height = parseFloat(element_style['line-height']);\n\n    // If line-height: normal, use estimate 1.14em\n    // (actual line-height depends on browser and font)\n    if (isNaN(css_line_height))\n      css_line_height = 1.15 * css_font_size;\n\n    var css_adjustment = -(css_line_height - css_font_size) / 2;\n\n    // Add additional line-height, if specified\n    var height_adjustment = 0;\n    if (line_height && line_height > 0)\n      height_adjustment = (line_height - height) / 2;\n\n    offset = height + (css_adjustment || 0) + (height_adjustment || 0);\n  }\n  catch (ex) {\n    // Errors can occur from getBBox and getComputedStyle\n    // No useful information for offset, do nothing\n  }\n\n  return offset;\n}\n\n/**\n  Determine if given data is likely series data\n\n  @method isSeriesData\n  @param {Array} data\n  @return {Boolean}\n*/\nexport function isSeriesData(data) {\n  var first_item = first(data);\n  return first_item && isObject(first_item) && Array.isArray(first_item.values);\n}\n\n/**\n  Get max for array/series by value di\n\n  @example\n  ```js\n  var data = [\n    {values: [{y: 1}, {y: 2}, {y: 3}]},\n    {values: [{y: 4}, {y: 2}, {y: 0}]}\n  ];\n  max(data, function(d, i) { return d.y; }); // -> 4\n  ```\n  @method max\n  @param {Array} data\n  @param {Function} getValue di function that returns value for given (d, i)\n  @return {Number}\n*/\nexport function max(data, getValue) {\n  var getMax = function(series_data) {\n    return series_data && d3.extent(series_data, getValue)[1];\n  };\n\n  if (isSeriesData(data)) {\n    return data.reduce(function(memo, series) {\n      if (series && Array.isArray(series.values)) {\n        var series_max = getMax(series.values);\n        return series_max > memo ? series_max : memo;\n      }\n      else {\n        return memo;\n      }\n    }, -Infinity);\n  }\n  else {\n    return getMax(data);\n  }\n}\n\n/**\n  Get min for array/series by value di\n\n  @example\n  ```js\n  var data = [\n    {values: [{x: 1}, {x: 2}, {x: 3}]},\n    {values: [{x: 4}, {x: 2}, {x: 0}]}\n  ];\n  min(data, function(d, i) { return d.x; }); // -> 0\n  ```\n  @method min\n  @param {Array} data\n  @param {Function} getValue di function that returns value for given (d, i)\n  @return {Number}\n*/\nexport function min(data, getValue) {\n  var getMin = function(series_data) {\n    return series_data && d3.extent(series_data, getValue)[0];\n  };\n\n  if (isSeriesData(data)) {\n    return data.reduce(function(memo, series) {\n      if (series && Array.isArray(series.values)) {\n        var series_min = getMin(series.values);\n        return series_min < memo ? series_min : memo;\n      }\n      else {\n        return memo;\n      }\n    }, Infinity);\n  }\n  else {\n    return getMin(data);\n  }\n}\n\n// TODO Look into converting to d3's internal style handling\n// Convert key,values to style string\n//\n// @example\n// ```js\n// style({color: 'red', display: 'block'}) -> color: red; display: block;\n// ```\n// @method style\n// @param {Object} styles\n// @return {String}\nexport function style(styles) {\n  if (!styles)\n    return '';\n\n  var keyValues = [];\n  objectEach(styles, function(value, key) {\n    keyValues.push(key + ': ' + value);\n  });\n  styles = keyValues.join('; ');\n\n  return styles ? styles + ';' : '';\n}\n\n/**\n  Get formatted margins for varying input\n\n  @method getMargins\n  @example\n  ```js\n  getMargins(4);\n  // -> {top: 4, right: 4, bottom: 4, left: 4}\n\n  getMargins({top: 20}, {top: 8, bottom: 8});\n  // -> {top: 20, right: 0, bottom: 8, left: 0}\n  ```\n  @param {Number|Object} margins\n  @param {Object} default_margins\n  @return {Object}\n*/\nexport function getMargins(margins, default_margins) {\n  if (isNumber(margins))\n    return {top: margins, right: margins, bottom: margins, left: margins};\n  else\n    return defaults({}, margins, default_margins, {top: 0, right: 0, bottom: 0, left: 0});\n}\n\n/**\n  Create wrapped `(d, i)` function that adds chart instance as first argument.\n  Wrapped function uses standard d3 arguments and context.\n\n  Note: in order to pass proper context to di-functions called within di-function\n  use `.call(this, d, i)` (where \"this\" is d3 context)\n\n  @example\n  ```javascript\n  d3.chart('Base').extend('Custom', {\n    initialize: function() {\n      this.base.select('point')\n        .attr('cx', this.x);\n      // -> (d, i) and \"this\" used from d3, \"chart\" injected automatically\n    },\n\n    x: di(function(chart, d, i) {\n      // \"this\" is standard d3 context: node\n      return chart.xScale()(chart.xValue.call(this, d, i));\n    })\n\n    // xScale, xValue...\n  });\n  ```\n  @method di\n  @param {Function} callback with `(chart, d, i)` arguments\n  @return {Function}\n*/\nexport function di(callback) {\n  // Create intermediate wrapping in case it's called without binding\n  var wrapped = function wrapped(d, i, j) {\n    return callback.call(this, undefined, d, i, j);\n  };\n  wrapped._is_di = true;\n  wrapped.original = callback;\n\n  return wrapped;\n}\n\nexport function bindDi(diFn, chart) {\n  return function wrapped(d, i, j) {\n    return (diFn.original || diFn).call(this, chart, d, i, j);\n  };\n}\n\n// Bind all di-functions found in chart\nexport function bindAllDi(chart) {\n  for (var key in chart) {\n    if (chart[key] && chart[key]._is_di)\n      chart[key] = bindDi(chart[key], chart);\n  }\n}\n\n\n/**\n  Get parent data for element (used to get parent series for data point)\n\n  @example\n  ```js\n  var data = [{\n    name: 'Input',\n    values: [1, 2, 3]\n  }];\n\n  d3.selectAll('g')\n    .data(data)\n    .enter().append('g')\n      .selectAll('text')\n        .data(function(d) { return d.values; })\n        .enter().append('text')\n          .text(function(d) {\n            var series_data = getParentData(this);\n            return series_data.name + ': ' + d;\n          });\n\n  // Input: 1, Input: 2, Input: 3\n  ```\n  @method getParentData\n  @param {Element} element\n  @return {Any}\n*/\nexport function getParentData(element) {\n  // @internal Shortcut if element + parentData needs to be mocked\n  if (element._parent_data)\n    return element._parent_data;\n\n  var parent = element && element.parentNode;\n  if (parent) {\n    var data = d3.select(parent).data();\n    return data && data[0];\n  }\n}\n\nexport function createHelper(type) {\n  return function(id, options) {\n    if (!options) {\n      options = id;\n      id = undefined;\n    }\n\n    return extend({id: id, type: type}, options);\n  };\n}\n\nvar helpers = {\n  property: property,\n  dimensions: dimensions,\n  translate: translate,\n  rotate: rotate,\n  alignText: alignText,\n  isSeriesData: isSeriesData,\n  max: max,\n  min: min,\n  createScale: createScale,\n  style: style,\n  getMargins: getMargins,\n  stack: stack,\n  di: di,\n  bindDi: bindDi,\n  bindAllDi: bindAllDi,\n  getParentData: getParentData,\n  mixin: mixin,\n  createHelper: createHelper\n};\n\nexport {\n  helpers as default,\n  property,\n  dimensions,\n  createScale,\n  mixin,\n  stack\n};\n","import d3 from 'd3';\nimport {\n  difference,\n  extend,\n  inherits,\n  isString,\n  objectEach\n} from './utils';\nimport {\n  property,\n  bindAllDi,\n  dimensions\n} from './helpers';\nvar Chart = d3.chart();\n\n// TEMP Clear namespace from mixins\n/**\n  @namespace\n*/\n\n/**\n  Shared functionality between all charts and components.\n\n  - Set properties automatically from `options`,\n  - Store fully transformed data\n  - Adds `\"before:draw\"` and `\"draw\"` events\n  - Standard `width` and `height` calculations\n\n  @class Base\n*/\nfunction Base(selection, options) {\n  // d3.chart() constructor without transform and initialize cascade\n  this.base = selection;\n  this._layers = {};\n  this._attached = {};\n  this._events = {};\n\n  // Bind all di-functions to this chart\n  bindAllDi(this);\n\n  // Set options (and properties with set_from_options)\n  if (options)\n    this.options(options);\n\n  // Initialize Chart (relies on explicitly calling super in initialize)\n  this.initialize(options);\n}\n\ninherits(Base, Chart);\n\nextend(Base.prototype, {\n  initialize: function() {},\n  transform: function(data) {\n    return data;\n  },\n  demux: function(name, data) { return data; },\n\n  // Add events to draw: \"before:draw\" and \"draw\"\n  draw: function(data) {\n    // Transform data (relies on explicitly calling super in transform)\n    data = this.transform(data);\n\n    // Store fully-transformed data for reference\n    this.data(data);\n\n    this.trigger('before:draw', data);\n\n    objectEach(this._layers, function(layer) {\n      layer.draw(data);\n    });\n    objectEach(this._attached, function(attachment, name) {\n      attachment.draw(this.demux(name, data));\n    }, this);\n\n    this.trigger('draw', data);\n  },\n\n  // Explicitly load d3.chart prototype\n  layer: Chart.prototype.layer,\n  unlayer: Chart.prototype.unlayer,\n  attach: Chart.prototype.attach,\n  on: Chart.prototype.on,\n  once: Chart.prototype.once,\n  off: Chart.prototype.off,\n  trigger: Chart.prototype.trigger,\n\n  /**\n    Store fully-transformed data for direct access from the chart\n\n    @property data\n    @type Any\n  */\n  data: property(),\n\n  /**\n    Overall options for chart/component, automatically setting any matching properties.\n\n    @example\n    ```js\n    var property = d3.compose.helpers.property;\n\n    d3.chart('Base').extend('HasProperties', {\n      a: property(),\n      b: property({\n        set: function(value) {\n          return {\n            override: value + '!'\n          };\n        }\n      })\n    });\n\n    var instance = d3.select('#chart')\n      .chart('HasProperties', {\n        a: 123,\n        b: 'Howdy',\n        c: true\n      });\n\n    // Equivalent to:\n    // d3.select(...)\n    //   .chart('HasProperties')\n    //   .options({...});\n\n    console.log(instance.a()); // -> 123\n    console.log(instance.b()); // -> Howdy!\n    console.log(instance.options().c); // -> true\n    ```\n    @property options\n    @type Object\n  */\n  options: property({\n    default_value: {},\n    set: function(options, previous) {\n      // Clear all unset options, except for data and options\n      if (previous) {\n        var unset = difference(Object.keys(previous), Object.keys(options));\n        unset.forEach(function(key) {\n          if (key != 'data' && key != 'options' && isProperty(this, key))\n            this[key](undefined);\n        }, this);\n      }\n\n      objectEach(options, function setFromOptions(value, key) {\n        if (isProperty(this, key))\n          this[key](value);\n      }, this);\n\n      function isProperty(chart, key) {\n        return chart[key] && chart[key].is_property && chart[key].set_from_options;\n      }\n    }\n  }),\n\n  /**\n    Get width of `this.base`.\n    (Does not include `set` for setting width of `this.base`)\n\n    @method width\n    @return {Number}\n  */\n  width: function width() {\n    return dimensions(this.base).width;\n  },\n\n  /**\n    Get height of `this.base`.\n    (Does not include `set` for setting height of `this.base`)\n\n    @method height\n    @return {Number}\n  */\n  height: function height() {\n    return dimensions(this.base).height;\n  }\n});\n\nBase.extend = function(proto_props, static_props) {\n  // name may be first parameter for d3.chart usage\n  var name;\n  if (isString(proto_props)) {\n    name = proto_props;\n    proto_props = static_props;\n    static_props = arguments[2];\n  }\n\n  var Parent = this;\n  var Child;\n\n  if (proto_props && proto_props.hasOwnProperty('constructor')) {\n    Child = proto_props.constructor;\n\n    // inherits sets constructor, remove from proto_props\n    proto_props = extend({}, proto_props);\n    delete proto_props.constructor;\n  }\n  else {\n    Child = function() { return Parent.apply(this, arguments); };\n  }\n\n  inherits(Child, Parent);\n  if (static_props)\n    extend(Child, static_props);\n  if (proto_props)\n    extend(Child.prototype, proto_props);\n\n  // If name is given, register with d3.chart\n  if (name)\n    Chart[name] = Child;\n\n  return Child;\n};\n\n// Export to d3.chart\nChart.Base = Base;\nexport default Base;\n","import {\n  contains,\n  defaults,\n  isFunction\n} from './utils';\n\n/*\n  Extract layout from the given options\n\n  @param {Array} options\n  @return {Object} {data, items, layout}\n*/\nexport function extractLayout(options) {\n  if (!options)\n    return;\n\n  var data = {\n    _charts: {},\n    _components: {}\n  };\n  var items = {};\n  var layout = [];\n  var charts = [];\n  var components = [];\n\n  // TEMP Idenfify charts from layered,\n  // eventually no distinction between charts and components\n  var found = {\n    row: false,\n    charts: false\n  };\n\n  // Components are added from inside-out\n  // so for position: top, position: left, use unshift\n  options.forEach(function(row, row_index) {\n    var row_components = [];\n\n    if (!Array.isArray(row))\n      row = [row];\n    if (row.length > 1)\n      found.row = true;\n\n    var row_layout = row.map(function(item, col_index) {\n      if (!item)\n        return;\n\n      if (item._layered) {\n        // Charts\n        found.charts = found.row = true;\n        var chart_ids = [];\n\n        item.items.forEach(function(chart, chart_index) {\n          if (!chart)\n            return;\n\n          chart = defaults({}, chart, {id: getId(row_index, col_index, chart_index)});\n\n          chart_ids.push(chart.id);\n          charts.push(chart);\n          items[chart.id] = chart;\n        });\n\n        return chart_ids;\n      }\n\n      var component = prepareComponent(item, row_index, col_index);\n      items[component.id] = component;\n\n      if (row.length > 1) {\n        if (!found.charts) {\n          // Left\n          setPosition(component, 'left');\n          row_components.unshift(component);\n        }\n        else {\n          // Right\n          setPosition(component, 'right');\n          row_components.push(component);\n        }\n      }\n      else {\n        if (!found.row) {\n          // Top\n          setPosition(component, 'top');\n          components.unshift(component);\n        }\n        else {\n          // Bottom\n          setPosition(component, 'bottom');\n          components.push(component);\n        }\n      }\n\n      return component.id;\n    });\n\n    if (row_components.length)\n      components = components.concat(row_components);\n\n    layout.push(row_layout);\n  });\n\n  charts.forEach(extractData('_charts'));\n  components.forEach(extractData('_components'));\n\n  return {\n    data: data,\n    items: items,\n    layout: layout,\n\n    charts: charts,\n    components: components\n  };\n\n  function prepareComponent(component, row_index, col_index) {\n    return defaults({}, component, {id: getId(row_index, col_index)});\n  }\n  function setPosition(component, position) {\n    if (component && isFunction(component.position))\n      component.position(position);\n    else\n      component.position = position;\n  }\n  function getId(row_index, col_index, layered_index) {\n    var id = 'item-' + (row_index + 1) + '-' + (col_index + 1);\n    if (layered_index != null)\n      id += '-' + (layered_index + 1);\n\n    return id;\n  }\n\n  function extractData(type) {\n    return function(item) {\n      if (item.data && !isFunction(item.data)) {\n        data[type][item.id] = item.data;\n        data[item.id] = item.data;\n        delete item.data;\n      }\n    };\n  }\n}\n\n/*\n  Calculate component and chart coordinates for given layout\n*/\nexport function calculateLayout(components, data, demux) {\n  var overall_layout = {top: [], right: [], bottom: [], left: []};\n  components.forEach(function(component) {\n    if (component.skip_layout || !component.getLayout)\n      return;\n\n    var layout = component.getLayout(demux(component.id, data));\n    var position = layout && layout.position;\n\n    if (!contains(['top', 'right', 'bottom', 'left'], position))\n      return;\n\n    overall_layout[position].push({\n      offset: position == 'top' || position == 'bottom' ? layout.height : layout.width,\n      component: component\n    });\n  });\n\n  return overall_layout;\n}\n\n/*\n  Apply calculated layout to charts and components\n*/\nexport function applyLayout(layout, chart_position, width, height) {\n  layout.top.reduce(function(previous, part) {\n    var y = previous - part.offset;\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n    return y;\n  }, chart_position.top);\n\n  layout.right.reduce(function(previous, part, index, parts) {\n    var previousPart = parts[index - 1] || {offset: 0};\n    var x = previous + previousPart.offset;\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n    return x;\n  }, width - chart_position.right);\n\n  layout.bottom.reduce(function(previous, part, index, parts) {\n    var previousPart = parts[index - 1] || {offset: 0};\n    var y = previous + previousPart.offset;\n    setLayout(part.component, chart_position.left, y, {width: chart_position.width});\n\n    return y;\n  }, height - chart_position.bottom);\n\n  layout.left.reduce(function(previous, part) {\n    var x = previous - part.offset;\n    setLayout(part.component, x, chart_position.top, {height: chart_position.height});\n\n    return x;\n  }, chart_position.left);\n\n  function setLayout(component, x, y, options) {\n    if (component && isFunction(component.setLayout))\n      component.setLayout(x, y, options);\n  }\n}\n","import d3 from 'd3';\nimport {\n  isFunction,\n  find,\n  defaults,\n  extend,\n  objectEach,\n  difference,\n  pluck\n} from './utils';\nimport {\n  getMargins,\n  property,\n  style,\n  translate\n} from './helpers';\nimport {\n  extractLayout,\n  calculateLayout,\n  applyLayout\n} from './layout';\nimport Base from './Base';\nimport Overlay from './Overlay';\nvar default_compose_margins = {top: 10, right: 10, bottom: 10, left: 10};\n\n/**\n  Compose rich, data-bound charts from charts (like Lines and Bars) and components (like Axis, Title, and Legend) with d3 and d3.chart.\n  Using the `options` property, charts and components can be bound to data and customized to create dynamic charts.\n\n  @example\n  ```html\n  <div id=\"#chart\"></div>\n  ```\n  ```js\n  var chart = d3.select('#chart').chart('Compose', function(data) {\n    // Process data...\n\n    // Create shared scales\n    var scales = {\n      x: {data: data.input, key: 'x', adjacent: true},\n      y: {data: data.input, key: 'y'},\n      y2: {data: data.output, key: 'y'}\n    };\n\n    // Setup charts and components\n    var charts = [\n      d3c.bars('input', {data: data.input, xScale: scales.x, yScale: scales.y}),\n      d3c.lines('output', {data: data.output, xScale: scales.x, yScale: scales.y2})\n    ];\n\n    var title = d3c.title('d3.compose');\n    var xAxis = d3c.axis('xAxis', {scale: scales.x});\n    var yAxis = d3c.axis('yAxis', {scale: scales.y});\n    var y2Axis = d3c.axis('y2Axis', {scale: scales.y2});\n\n    // Layout charts and components\n    return [\n      title,\n      [yAxis, d3c.layered(charts), y2Axis],\n      xAxis\n    ];;\n  });\n\n  chart.draw({input: [...], output: [...]});\n  ```\n  @class Compose\n  @extends Base\n*/\nvar Compose = Base.extend({\n  initialize: function(options) {\n    Base.prototype.initialize.call(this, options);\n\n    // Responsive svg based on the following approach (embedded + padding hack)\n    // http://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/\n    // (not enabled if selection is svg)\n    if (this.base.node().tagName != 'svg') {\n      this.container = this.base.append('div')\n        .attr('class', 'chart-compose-container');\n\n      this.base = this.container.append('svg')\n        .attr('xlmns', 'http://www.w3.org/2000/svg')\n        .attr('version', '1.1')\n        .attr('class', 'chart-compose');\n    }\n    else {\n      this.base.classed('chart-compose', true);\n    }\n\n    this.attachHoverListeners();\n  },\n\n  transform: function(data) {\n    // Save raw data for redraw\n    this.rawData(data);\n    return Base.prototype.transform.call(this, data);\n  },\n\n  /**\n    Get/set the options `object/function` for the chart that takes `data` and\n    returns `[...layout]` for composing child charts and components.\n\n    @example\n    ```js\n    // get\n    chart.options();\n\n    // set (static)\n    chart.options([\n      // ...\n    ]);\n\n    // set (dynamic, takes data and returns options)\n    chart.options(function(data) {\n      // process data...\n\n      return [\n        // ...\n      ];\n    });\n\n    // Set directly from d3.chart creation\n    d3.select('#chart')\n      .chart('Compose', function(data) {\n        // ...\n      });\n    ```\n    @property options\n    @type Function|Object\n  */\n  options: property({\n    default_value: function() { return function() {}; },\n    set: function(options) {\n      // If options is plain object,\n      // return from generic options function\n      if (!isFunction(options)) {\n        return {\n          override: function() {\n            return options;\n          }\n        };\n      }\n    }\n  }),\n\n  // Store raw data for container before it has been transformed\n  rawData: property(),\n\n  /**\n    Margins between edge of container and components/chart\n\n    @example\n    ```js\n    chart.margins({top: 10, right: 20, bottom: 10, left: 20});\n    ```\n    @property margins\n    @type Object {top, right, bottom, left}\n    @default {top: 10, right: 10, bottom: 10, left: 10}\n  */\n  margins: property({\n    default_value: default_compose_margins,\n    set: function(values) {\n      return {\n        override: getMargins(values, default_compose_margins)\n      };\n    }\n  }),\n\n  // Chart position\n  chartPosition: property({\n    default_value: {top: 0, right: 0, bottom: 0, left: 0},\n    set: function(values) {\n      return {\n        override: defaults({}, values, {top: 0, right: 0, bottom: 0, left: 0})\n      };\n    },\n    get: function(values) {\n      values.width = this._width() - values.right - values.left;\n      values.height = this._height() - values.bottom - values.top;\n\n      return values;\n    }\n  }),\n\n  /**\n    Get/set overall width of chart\n\n    @property width\n    @type Number\n  */\n  width: property({\n    default_value: null\n  }),\n\n  /**\n    Get/set overall height of chart\n\n    @property height\n    @type Number\n  */\n  height: property({\n    default_value: null\n  }),\n\n  _width: function() {\n    var width = this.width();\n    return width != null ? width : Base.prototype.width.call(this);\n  },\n  _height: function() {\n    var height = this.height();\n    return height != null ? height : Base.prototype.height.call(this);\n  },\n\n  /**\n    Enable responsive container + viewBox so that chart scales to fill width\n    (only works if selection is not an svg)\n\n    @property responsive\n    @type Boolean\n    @default true\n  */\n  responsive: property({\n    default_value: true\n  }),\n\n  // Set svg viewBox attribute\n  viewBox: property({\n    default_value: function() {\n      if (this.responsive() && this.width() && this.height())\n        return '0 0 ' + this.width() + ' ' + this.height();\n      else\n        return null;\n    }\n  }),\n\n  // Set svg preserveAspectRatio attribute\n  preserveAspectRatio: property({\n    default_value: function() {\n      if (this.responsive())\n        return 'xMidYMid meet';\n      else\n        return null;\n    }\n  }),\n\n  // Set container style\n  containerStyle: property({\n    default_value: function() {\n      if (this.responsive()) {\n        var aspect_ratio = 1;\n        if (this.width() && this.height())\n          aspect_ratio = this.height() / this.width();\n\n        return style({\n          width: '100%',\n          height: 0,\n          'padding-top': (aspect_ratio * 100) + '%',\n          position: 'relative'\n        });\n      }\n      else {\n        return style({position: 'relative'});\n      }\n    }\n  }),\n\n  // Set base style\n  baseStyle: property({\n    default_value: function() {\n      if (this.responsive() && this.container) {\n        return style({\n          position: 'absolute',\n          top: 0,\n          left: 0\n        });\n      }\n      else {\n        return null;\n      }\n    }\n  }),\n\n  /**\n    Set charts from options or get chart instances.\n    Each chart should use a unique key so that updates are passed to the existing chart\n    (otherwise they are recreated on update).\n    The `type` option must be a registered `d3.chart` and all other options are passed to the chart.\n\n    @example\n    ```js\n    chart.charts([\n      {id: 'input', type: 'Bars'}, // options to pass to Bars chart\n      {id: 'output', type: 'Lines'} // options to pass to Lines chart\n    ]);\n    ```\n    @property charts\n    @type Array\n  */\n  charts: property({\n    set: function(chart_options, charts) {\n      // Store actual charts rather than options\n      return {\n        override: this._attachItems(chart_options, charts, this)\n      };\n    },\n    default_value: []\n  }),\n\n  /**\n    Set components from options or get components instances.\n    Each component should use a unique key so that updates are passed to the existing chart\n    (otherwise they are recreated on update).\n    The `type` option must be a registered `d3.chart` and all other options are passed to the component.\n\n    @example\n    ```js\n    chart.components([\n      {id: 'axis.y', type: 'Axis'}, // options to pass to Axis component\n      {id: 'title', type: 'Title'} // options to pass to Title component\n    ])\n    ```\n    @property components\n    @type Array\n  */\n  components: property({\n    set: function(component_options, components) {\n      // Store actual components rather than options\n      return {\n        override: this._attachItems(component_options, components, this)\n      };\n    },\n    default_value: []\n  }),\n\n  /**\n    Delay start of transition by specified milliseconds.\n    (applied to all charts and components as default)\n\n    @property delay\n    @type Number|Function\n    @default d3 default: 0\n  */\n  delay: property(),\n\n  /**\n    Transition duration in milliseconds.\n    (applied to all charts and components as default)\n\n    @property duration\n    @type Number|Function\n    @default d3 default: 250ms\n  */\n  duration: property(),\n\n  /**\n    Transition ease function.\n    (applied to all charts and components as default)\n\n    - See: [Transitions#ease](https://github.com/mbostock/d3/wiki/Transitions#ease)\n    - Note: arguments to pass to `d3.ease` are not supported\n\n    @property ease\n    @type String|Function\n    @default d3 default: 'cubic-in-out'\n  */\n  ease: property(),\n\n  /**\n    Draw chart with given data\n\n    @example\n    ```js\n    var chart = d3.select('#chart')\n      .chart('Compose', function(data) {\n        // ...\n      });\n\n    chart.draw([1, 2, 3]);\n\n    chart.draw({values: [1, 2, 3]});\n\n    chart.draw([\n      {values: [1, 2, 3]},\n      {values: [4, 5, 6]}\n    ]);\n    ```\n    @method draw\n    @param {Any} data\n  */\n  draw: function(data) {\n    var config = this._prepareConfig(this.options(), data);\n    if (!config)\n      config = {data: {_charts: {}, _components: {}}, layout: [], charts: [], components: []};\n\n    // Set charts and components from config\n    this.charts(config.charts);\n    this.components(config.components);\n\n    // Add config data\n    data = {\n      original: data,\n      config: config.data\n    };\n    this.data(data);\n\n    this._setDimensions();\n\n    // Layout components\n    this.layout(config.layout, data);\n\n    // Full draw now that everything has been laid out\n    d3.chart().prototype.draw.call(this, data);\n  },\n\n  /**\n    Redraw chart with current data\n\n    @method redraw\n  */\n  redraw: function() {\n    if (this.rawData())\n      this.draw(this.rawData().original);\n  },\n\n  demux: function(name, data) {\n    if (!data || !data.config || !data.original)\n      return data;\n\n    if (findById(this.charts(), name) && data.config._charts[name])\n      return data.config._charts[name];\n    else if (findById(this.components(), name) && data.config._components[name])\n      return data.config._components[name];\n    else\n      return data.original;\n  },\n\n  // Create chart layer (for laying out charts)\n  createChartLayer: function(options) {\n    return this.base.append('g')\n      .attr('class', 'chart-layer')\n      .attr('data-zIndex', options && options.z_index);\n  },\n\n  // Create component layer\n  createComponentLayer: function(options) {\n    return this.base.append('g')\n      .attr('class', 'chart-component-layer')\n      .attr('data-zIndex', options && options.z_index);\n  },\n\n  // Create overlay layer\n  createOverlayLayer: function() {\n    if (!this.container)\n      throw new Error('Cannot create overlay layer if original selection \"d3.select(...).chart(\\'Compose\\')\" is an svg. Use a div instead for responsive and overlay support.');\n\n    return this.container.append('div')\n      .attr('class', 'chart-overlay-layer');\n  },\n\n  // Layout components and charts for given data\n  layout: function(layout, data) {\n    // 1. Place chart layers\n    this._positionChartLayers();\n\n    // 2. Extract layout from components\n    layout = this._extractLayout(data);\n\n    // 3. Set chart position from layout\n    var chart_position = extend({}, this.margins());\n    objectEach(layout, function(parts, key) {\n      parts.forEach(function(part) {\n        chart_position[key] += part.offset || 0;\n      });\n    });\n    this.chartPosition(chart_position);\n\n    // 4. Position layers with layout\n    this.positionLayers(layout);\n  },\n\n  attachHoverListeners: function() {\n    // For responsive, listen on container div and calculate enter/exit for base from bounding rectangle\n    // For non-responsive, bounding rectangle is container so calculations still apply\n\n    var trigger = this.trigger.bind(this);\n    var chartPosition = this.chartPosition.bind(this);\n    var container = this.container || this.base;\n    var base = this.base.node();\n    var chart_position, bounds, was_inside;\n\n    container.on('mouseenter', function() {\n      // Calculate chart position and bounds on enter and cache during move\n      chart_position = chartPosition();\n      bounds = getBounds();\n\n      was_inside = inside(bounds);\n      if (was_inside)\n        enter();\n    });\n    container.on('mousemove', function() {\n      // Mousemove may fire before mouseenter in IE\n      if (!chart_position || !bounds) {\n        chart_position = chartPosition();\n        bounds = getBounds();\n      }\n\n      var is_inside = inside(bounds);\n      if (was_inside && is_inside)\n        move();\n      else if (was_inside)\n        leave();\n      else if (is_inside)\n        enter();\n\n      was_inside = is_inside;\n    });\n    container.on('mouseleave', function() {\n      if (was_inside) {\n        was_inside = false;\n        leave();\n      }\n    });\n\n    function inside() {\n      var mouse = d3.mouse(document.documentElement);\n      return mouse[0] >= bounds.left && mouse[0] <= bounds.right && mouse[1] >= bounds.top && mouse[1] <= bounds.bottom;\n    }\n    function enter() {\n      trigger('mouseenter', translateToXY(d3.mouse(base)));\n    }\n    function move() {\n      trigger('mousemove', translateToXY(d3.mouse(base)));\n    }\n    function leave() {\n      trigger('mouseleave');\n    }\n\n    function translateToXY(coordinates) {\n      var x = coordinates[0];\n      var y = coordinates[1];\n      var chart_x = x - chart_position.left;\n      var chart_y = y - chart_position.top;\n\n      // Set at chart bounds if outside of chart\n      if (x > (chart_position.left + chart_position.width))\n        chart_x = chart_position.width;\n      else if (x < chart_position.left)\n        chart_x = 0;\n\n      if (y > (chart_position.top + chart_position.height))\n        chart_y = chart_position.height;\n      else if (y < chart_position.top)\n        chart_y = 0;\n\n      return {\n        container: {x: x, y: y},\n        chart: {x: chart_x, y: chart_y}\n      };\n    }\n\n    function getBounds() {\n      var scroll_y = 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop;\n\n      bounds = extend({}, base.getBoundingClientRect());\n      bounds.top += scroll_y;\n      bounds.bottom += scroll_y;\n\n      return bounds;\n    }\n  },\n\n  // Attach chart/component child item with id\n  attach: function(id, item) {\n    item.id = id;\n    item.base.attr('data-id', id);\n    item.container = this;\n\n    Base.prototype.attach.call(this, id, item);\n\n    if (item && isFunction(item.trigger))\n      item.trigger('attach');\n  },\n\n  // Detach chart/component child item by id\n  detach: function(id, item) {\n    item.base.remove();\n\n    delete this._attached[id];\n\n    if (item && isFunction(item.trigger))\n      item.trigger('detach');\n  },\n\n  // Position chart and component layers\n  positionLayers: function(layout) {\n    this._positionChartLayers();\n    this._positionComponents(layout);\n    this._positionByZIndex();\n  },\n\n  //\n  // Internal\n  //\n\n  _setDimensions: function() {\n    // Set container and svg dimensions\n    // (if original selection is svg, no container and skip responsiveness)\n    if (this.container) {\n      this.container\n        .attr('style', this.containerStyle());\n    }\n\n    this.base\n      .attr('viewBox', this.viewBox())\n      .attr('preserveAspectRatio', this.preserveAspectRatio())\n      .attr('style', this.baseStyle())\n      .attr('width', this.responsive() ? null : this.width())\n      .attr('height', this.responsive() ? null : this.height());\n  },\n\n  _attachItems: function(items, container, context) {\n    items = items || [];\n    container = container || [];\n\n    // Remove charts that are no longer needed\n    var remove_ids = difference(pluck(container, 'id'), pluck(items, 'id'));\n    remove_ids.forEach(function(remove_id) {\n      context.detach(remove_id, findById(container, remove_id));\n    });\n\n    // Create or update charts\n    return items.map(function(options) {\n      // TODO May not have id, might need to auto-generate\n      // (might be during another step)\n      var id = options.id;\n      var item = findById(container, id);\n\n      if (options instanceof d3.chart()) {\n        // If chart instance, replace with instance\n        if (item)\n          context.detach(id, item);\n\n        context.attach(id, options);\n        return options;\n      }\n      else {\n        // TEMP Changing position has nasty side effects, disable for now\n        var changed_position = item && !(item instanceof Overlay) && item.position && options.position && item.position() != options.position;\n\n        if (item && (item.type != options.type || changed_position)) {\n          // If chart type has changed, detach and re-create\n          context.detach(id, item);\n          item = undefined;\n        }\n\n        if (!item) {\n          var Item = d3.chart(options.type);\n\n          if (!Item)\n            throw new Error('No registered d3.chart found for ' + options.type);\n\n          var layer_options = {z_index: Item.z_index || 0};\n          var createLayer = {\n            'chart': 'createChartLayer',\n            'component': 'createComponentLayer',\n            'overlay': 'createOverlayLayer'\n          }[Item.layer_type];\n\n          if (!createLayer)\n            throw new Error('Unrecognized layer type \"' + Item.layer_type + '\" for ' + options.type);\n\n          var base = context[createLayer](layer_options);\n\n          item = new Item(base, options);\n          item.type = options.type;\n\n          context.attach(id, item);\n        }\n        else {\n          item.options(options);\n        }\n\n        return item;\n      }\n    });\n  },\n\n  _prepareConfig: function(options, data) {\n    return extractLayout(options(data));\n  },\n\n  _positionChartLayers: function() {\n    var position = this.chartPosition();\n    this.base.selectAll('.chart-layer')\n      .attr('transform', translate(position.left, position.top))\n      .attr('width', position.width)\n      .attr('height', position.height);\n  },\n\n  _positionComponents: function(layout) {\n    var chart_position = this.chartPosition();\n    var width = this._width();\n    var height = this._height();\n\n    applyLayout(layout, chart_position, width, height);\n  },\n\n  _positionByZIndex: function() {\n    var layers = this.base.selectAll('.chart-layer, .chart-component-layer')[0];\n\n    // Sort by z-index\n    function setZIndex(layer) {\n      return {\n        layer: layer,\n        zIndex: parseInt(d3.select(layer).attr('data-zIndex')) || 0\n      };\n    }\n    function sortZIndex(a, b) {\n      if (a.zIndex < b.zIndex)\n        return -1;\n      else if (a.zIndex > b.zIndex)\n        return 1;\n      else\n        return 0;\n    }\n    function getLayer(wrapped) {\n      return wrapped.layer;\n    }\n\n    layers = layers.map(setZIndex).sort(sortZIndex).map(getLayer);\n\n    // Move layers to z-index order\n    layers.forEach(function(layer) {\n      if (layer && layer.parentNode && layer.parentNode.appendChild)\n        layer.parentNode.appendChild(layer);\n    });\n  },\n\n  _extractLayout: function(data) {\n    return calculateLayout(this.components(), data, this.demux.bind(this));\n  }\n});\n\n// TODO Find better place for this\nfunction layered(items) {\n  if (!Array.isArray(items))\n    items = Array.prototype.slice.call(arguments);\n\n  return {_layered: true, items: items};\n}\n\nfunction findById(items, id) {\n  return find(items, function(item) {\n    return item.id == id;\n  });\n}\n\nd3.chart().Compose = Compose;\nexport {\n  Compose as default,\n  layered\n};\n","import Base from './Base';\n\n/**\n  Common base for creating charts.\n  Standard `d3.chart` charts can be used with d3.compose, but extending `d3.chart('Chart')` includes helpers for properties and \"di\" functions.\n\n  ### Extending\n\n  To take advantage of \"di\"-binding (automatically injects `chart` into \"di\" methods)\n  and automatically setting properties from `options`, use `d3.compose.helpers.di`\n  and `d3.compose.helpers.property` when creating your chart.\n\n  @example\n  ```js\n  var helpers = d3.compose.helpers;\n\n  d3.chart('Chart').extend('Pie', {\n    initialize: function() {\n      // same as d3.chart\n    },\n    transform: function(data) {\n      // same as d3.chart\n    },\n\n    color: helpers.di(function(chart, d, i) {\n      // \"di\" function with parent chart injected (\"this\" = element)\n    }),\n\n    centered: helpers.property({\n      default_value: true\n      // can be automatically set from options object\n    })\n  });\n  ```\n  @class Chart\n  @extends Base\n*/\nvar Chart = Base.extend({}, {\n  /**\n    Default z-index for chart\n    (Components are 50 by default, so Chart = 100 is above component by default)\n\n    @example\n    ```js\n    d3.chart('Chart').extend('BelowComponentLayers', {\n      // ...\n    }, {\n      z_index: 40\n    });\n    ```\n    @attribute z_index\n    @static\n    @type Number\n    @default 100\n  */\n  z_index: 100,\n  layer_type: 'chart'\n});\n\nd3.chart().Chart = Chart;\nexport default Chart;\n","import { contains } from './utils';\nimport {\n  dimensions,\n  getMargins,\n  property,\n  translate\n} from './helpers';\nimport Base from './Base';\n\n/**\n  Common base for creating components that includes helpers for positioning and layout.\n\n  ### Extending\n\n  `d3.chart('Component')` contains intelligent defaults and there are no required overrides.\n  Create a component just like a chart, by creating layers in the `initialize` method in `extend`.\n\n  - To adjust layout calculation, use `prepareLayout`, `getLayout`, and `setLayout`.\n  - To layout a component within the chart, use `skip_layout: true` and the static `layer_type: 'chart'`\n\n  @example\n  ```js\n  d3.chart('Component').extend('Key', {\n    initialize: function() {\n      this.layer('Key', this.base, {\n        dataBind: function(data) {\n          return this.selectAll('text')\n            .data(data);\n        },\n        insert: function() {\n          return this.append('text');\n        },\n        events: {\n          merge: function() {\n            this.text(this.chart().keyText)\n          }\n        }\n      })\n    },\n\n    keyText: helpers.di(function(chart, d, i) {\n      return d.abbr + ' = ' + d.value;\n    })\n  });\n  ```\n  @class Component\n  @extends Base\n*/\nvar Component = Base.extend({\n  /**\n    Component's position relative to chart\n    (top, right, bottom, left)\n\n    @property position\n    @type String\n    @default 'top'\n  */\n  position: property({\n    default_value: 'top',\n    validate: function(value) {\n      return contains(['top', 'right', 'bottom', 'left'], value);\n    }\n  }),\n\n  /**\n    Get/set the width of the component (in pixels)\n    (used in layout calculations)\n\n    @property width\n    @type Number\n    @default (actual width)\n  */\n  width: property({\n    default_value: function() {\n      return dimensions(this.base).width;\n    }\n  }),\n\n  /**\n    Get/set the height of the component (in pixels)\n    (used in layout calculations)\n\n    @property height\n    @type Number\n    @default (actual height)\n  */\n  height: property({\n    default_value: function() {\n      return dimensions(this.base).height;\n    }\n  }),\n\n  /**\n    Margins (in pixels) around component\n\n    @property margins\n    @type Object\n    @default {top: 0, right: 0, bottom: 0, left: 0}\n  */\n  margins: property({\n    set: function(values) {\n      return {\n        override: getMargins(values)\n      };\n    },\n    default_value: getMargins()\n  }),\n\n  /**\n    Center the component vertically/horizontally (depending on position)\n\n    @property centered\n    @type Boolean\n    @default false\n  */\n  centered: property({\n    default_value: false\n  }),\n\n  /**\n    Skip component during layout calculations and positioning\n    (override in prototype of extension)\n\n    @example\n    ```js\n    d3.chart('Component').extend('NotLaidOut', {\n      skip_layout: true\n    });\n    ```\n    @attribute skip_layout\n    @type Boolean\n    @default false\n  */\n  skip_layout: false,\n\n  /**\n    Perform any layout preparation required before getLayout (default is draw)\n    (override in prototype of extension)\n\n    Note: By default, components are double-drawn;\n    for every draw, they are drawn once to determine the layout size of the component and a second time for display with the calculated layout.\n    This can cause issues if the component uses transitions. See Axis for an example of a Component with transitions.\n\n    @example\n    ```js\n    d3.chart('Component').extend('Custom', {\n      prepareLayout: function(data) {\n        // default: this.draw(data);\n        // so that getLayout has real dimensions\n\n        // -> custom preparation (if necessary)\n      }\n    })\n    ```\n    @method prepareLayout\n    @param {Any} data\n  */\n  prepareLayout: function(data) {\n    this.draw(data);\n  },\n\n  /**\n    Get layout details for use when laying out component\n    (override in prototype of extension)\n\n    @example\n    ```js\n    d3.chart('Component').extend('Custom', {\n      getLayout: function(data) {\n        var calculated_width, calculated_height;\n\n        // Perform custom calculations...\n\n        // Must return position, width, and height\n        return {\n          position: this.position(),\n          width: calculated_width,\n          height: calculated_height\n        };\n      }\n    });\n    ```\n    @method getLayout\n    @param {Any} data\n    @return {Object} position, width, and height for layout\n  */\n  getLayout: function(data) {\n    this.prepareLayout(data);\n\n    var margins = this.margins();\n    return {\n      position: this.position(),\n      width: this.width() + margins.left + margins.right,\n      height: this.height() + margins.top + margins.bottom\n    };\n  },\n\n  /**\n    Set layout of underlying base\n    (override in prototype of extension)\n\n    @example\n    ```js\n    d3.chart('Component').extend('Custom', {\n      setLayout: function(x, y, options) {\n        // Set layout of this.base...\n        // (the following is the default implementation)\n        var margins = this.margins();\n\n        // (handle this.centered())\n\n        this.base\n          .attr('transform', helpers.translate(x + margins.left, y + margins.top));\n        this.height(options && options.height);\n        this.width(options && options.width);\n      }\n    });\n    ```\n    @method setLayout\n    @param {Number} x position of base top-left\n    @param {Number} y position of base top-left\n    @param {Object} options\n      @param {Object} [options.height] height of component in layout\n      @param {Object} [options.width] width of component in layout\n  */\n  setLayout: function(x, y, options) {\n    var margins = this.margins();\n\n    if (this.centered()) {\n      var actual_dimensions = dimensions(this.base);\n      if ('height' in options)\n        y += (options.height - actual_dimensions.height) / 2;\n      else\n        y += margins.top;\n\n      if ('width' in options)\n        x += (options.width - actual_dimensions.width) / 2;\n      else\n        x += margins.left;\n    }\n    else {\n      x += margins.left;\n      y += margins.top;\n    }\n\n    this.base.attr('transform', translate(x, y));\n    this.height(options && options.height);\n    this.width(options && options.width);\n  }\n}, {\n  /**\n    Default z-index for component\n    (Charts are 100 by default, so Component = 50 is below chart by default)\n\n    @example\n    ```js\n    d3.chart('Component').extend('AboveChartLayers', {\n      // ...\n    }, {\n      z_index: 150\n    });\n    ```\n    @attribute z_index\n    @static\n    @type Number\n    @default 50\n  */\n  z_index: 50,\n\n  /**\n    Set to `'chart'` to use chart layer for component.\n    (e.g. Axis uses chart layer to position with charts, but includes layout for ticks)\n\n    @example\n    ```js\n    d3.chart('Component').extend('ChartComponent', {\n      // ...\n    }, {\n      layer_type: 'chart'\n    });\n    ```\n    @attribute layer_type\n    @static\n    @type String\n    @default 'component'\n  */\n  layer_type: 'component'\n});\n\nd3.chart().Component = Component;\nexport default Component;\n","import {\n  property,\n  translate,\n  style as styleToString,\n  dimensions\n} from './helpers';\nimport Component from './Component';\n\n/**\n  Common base for creating overlays that includes helpers for positioning and show/hide.\n\n  ### Extending\n\n  Create an overlay just like a chart, by creating layers in the `initialize` method in `extend`.\n\n  - To adjust positioning, override `position`\n  - To adjust show/hide behavior, override `show`/`hide`\n\n  @example\n  ```js\n  d3.chart('Overlay').extend('ClosestPoints', {\n    // TODO\n  });\n  ```\n  @class Overlay\n  @extends Component\n*/\nvar Overlay = Component.extend({\n  initialize: function(options) {\n    Component.prototype.initialize.call(this, options);\n    this.base.attr('style', this.style());\n  },\n  skip_layout: true,\n\n  /**\n    Overlay's top-left x-position in px from left\n\n    @property x\n    @type Number\n    @default 0\n  */\n  x: property({\n    default_value: 0\n  }),\n\n  /**\n    Overlay's top-left y-position in px from top\n\n    @property y\n    @type Number\n    @default 0\n  */\n  y: property({\n    default_value: 0\n  }),\n\n  /**\n    Whether overlay is currently hidden\n\n    @property hidden\n    @type Boolean\n    @default true\n  */\n  hidden: property({\n    default_value: true\n  }),\n\n  /**\n    Overlays base styling\n    (default includes position and hidden)\n\n    @property style\n    @type String\n    @default set from x, y, and hidden\n  */\n  style: property({\n    default_value: function() {\n      var transform = translate(this.x() + 'px', this.y() + 'px');\n      var styles = {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        '-webkit-transform': transform,\n        '-ms-transform': transform,\n        transform: transform\n      };\n\n      if (this.hidden())\n        styles.display = 'none';\n\n      return styleToString(styles);\n    }\n  }),\n\n  /**\n    Position overlay layer at given x,y coordinates\n\n    @example\n    ```js\n    // Absolute, x: 100, y: 50\n    overlay.position(100, 50);\n    overlay.position({x: 100, y: 50});\n\n    // Relative-to-chart, x: 50, y: 40\n    overlay.position({chart: {x: 50, y: 40}});\n\n    // Relative-to-container, x: 75, y: 50\n    overlay.position({container: {x: 75, y: 50}});\n    ```\n    @method position\n    @param {Object|Number} position {x,y}, {container: {x,y}}, {chart: {x,y}} or x in px from left\n    @param {Number} [y] in px from top\n  */\n  // TODO This conflicts with component.position(), might need a rename\n  position: function(position, y) {\n    if (arguments.length > 1) {\n      position = {\n        x: position,\n        y: y\n      };\n    }\n    else {\n      if ('container' in position) {\n        position = this.getAbsolutePosition(position.container);\n      }\n      else if ('chart' in position) {\n        if (this.container) {\n          var chart = this.container.chartPosition();\n          position = this.getAbsolutePosition({\n            x: position.chart.x + chart.left,\n            y: position.chart.y + chart.top\n          });\n        }\n        else {\n          position = this.getAbsolutePosition(position.chart);\n        }\n      }\n    }\n\n    this.x(position.x).y(position.y);\n    this.base.attr('style', this.style());\n  },\n\n  /**\n    Show overlay (with `display: block`)\n\n    @method show\n  */\n  show: function() {\n    this.hidden(false);\n    this.base.attr('style', this.style());\n  },\n\n  /**\n    Hide overlay (with `display: none`)\n\n    @method hide\n  */\n  hide: function() {\n    this.hidden(true);\n    this.base.attr('style', this.style());\n  },\n\n  /**\n    Get absolute position from container position\n    (needed since container position uses viewBox and needs to be scaled to absolute position)\n\n    @method getAbsolutePosition\n    @param {Object} container_position ({x, y})\n    @return {Object} absolute {x, y} relative to container div\n  */\n  getAbsolutePosition: function(container_position) {\n    var container = this.container && this.container.container;\n\n    if (container && this.container.responsive()) {\n      var container_dimensions = dimensions(container);\n      var chart_width = this.container.width();\n      var chart_height = this.container.height();\n      var width_ratio = container_dimensions.width / chart_width;\n      var height_ratio = container_dimensions.height / chart_height;\n\n      return {\n        x: width_ratio * container_position.x,\n        y: height_ratio * container_position.y\n      };\n    }\n    else {\n      // Not attached so can't get actual dimensions\n      // fallback to container position\n      return container_position;\n    }\n  }\n}, {\n  layer_type: 'overlay'\n});\n\nd3.chart().Overlay = Overlay;\nexport default Overlay;\n","import d3 from 'd3';\nimport utils from './src/utils';\nimport helpers from './src/helpers';\nimport Base from './src/Base';\nimport Chart from './src/Chart';\nimport Component from './src/Component';\nimport Overlay from './src/Overlay';\nimport Compose, { layered } from './src/Compose';\n\nvar d3c = d3.compose = {\n  VERSION: '{version}',\n  utils: utils,\n  helpers: helpers,\n  Base: Base,\n  Chart: Chart,\n  Component: Component,\n  Overlay: Overlay,\n  Compose: Compose,\n  layered: layered\n};\n\nexport default d3c;\n"],"sourceRoot":"/source/"}